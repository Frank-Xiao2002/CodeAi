[
    {
        "pass@1": 0.20674999999999996,
        "pass@5": 0.2756746031746032,
        "pass@10": 0.3,
        "detail": {
            "pass@1": {
                "0": 0.0,
                "1": 0.4,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 1.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 0.5999999999999999,
                "14": 1.0,
                "15": 0.0,
                "16": 0.0,
                "17": 0.0,
                "18": 0.0,
                "19": 0.0,
                "20": 0.0,
                "21": 0.0,
                "22": 0.0,
                "23": 1.0,
                "24": 0.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 1.0,
                "30": 0.9,
                "31": 1.0,
                "32": 1.0,
                "33": 1.0,
                "34": 0.0,
                "35": 0.20000000000000007,
                "36": 0.9,
                "37": 0.20000000000000007,
                "38": 0.0,
                "39": 0.0,
                "40": 0.0,
                "41": 0.0,
                "42": 1.0,
                "43": 1.0,
                "44": 0.9,
                "45": 0.4,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 0.20000000000000007,
                "50": 0.7,
                "51": 0.0,
                "52": 0.30000000000000004,
                "53": 0.0,
                "54": 0.0,
                "55": 0.0,
                "56": 0.0,
                "57": 0.09999999999999998,
                "58": 0.0,
                "59": 1.0,
                "60": 0.0,
                "61": 0.0,
                "62": 0.0,
                "63": 0.0,
                "64": 0.0,
                "65": 0.0,
                "66": 0.0,
                "67": 1.0,
                "68": 0.30000000000000004,
                "69": 0.0,
                "70": 0.20000000000000007,
                "71": 0.4,
                "72": 0.0,
                "73": 1.0,
                "74": 0.0,
                "75": 0.5,
                "76": 1.0,
                "77": 0.0,
                "78": 0.0,
                "79": 0.0,
                "80": 0.0,
                "81": 0.09999999999999998,
                "82": 1.0,
                "83": 1.0,
                "84": 0.7999999999999999,
                "85": 0.0,
                "86": 1.0,
                "87": 0.0,
                "88": 0.0,
                "89": 0.0,
                "90": 0.0,
                "91": 0.5,
                "92": 0.0,
                "93": 0.0,
                "94": 0.09999999999999998,
                "95": 0.0,
                "96": 0.0,
                "97": 0.0,
                "98": 0.0,
                "99": 0.7999999999999999,
                "100": 0.0,
                "101": 0.0,
                "102": 1.0,
                "103": 0.0,
                "104": 0.30000000000000004,
                "105": 0.0,
                "106": 1.0,
                "107": 0.5,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0,
                "111": 0.09999999999999998,
                "112": 0.5999999999999999,
                "113": 0.0,
                "114": 0.0,
                "115": 0.5999999999999999,
                "116": 0.7999999999999999,
                "117": 0.0,
                "118": 0.0,
                "119": 0.0,
                "120": 1.0,
                "121": 1.0,
                "122": 0.0,
                "123": 0.09999999999999998,
                "124": 0.0,
                "125": 0.0,
                "126": 0.0,
                "127": 0.0,
                "128": 1.0,
                "129": 1.0,
                "130": 0.0,
                "131": 0.0,
                "132": 0.7,
                "133": 0.0,
                "134": 0.0,
                "135": 0.0,
                "136": 0.0,
                "137": 0.0,
                "138": 1.0,
                "139": 0.0,
                "140": 0.0,
                "141": 0.0,
                "142": 0.0,
                "143": 1.0,
                "144": 1.0,
                "145": 0.0,
                "146": 0.0,
                "147": 1.0,
                "148": 0.4,
                "149": 0.0,
                "150": 0.0,
                "151": 0.0,
                "152": 0.20000000000000007,
                "153": 0.5,
                "154": 0.0,
                "155": 0.9,
                "156": 0.0,
                "157": 0.0,
                "158": 0.0,
                "159": 0.0,
                "160": 0.0,
                "161": 0.0,
                "162": 0.0,
                "163": 0.7,
                "164": 0.0,
                "165": 0.09999999999999998,
                "166": 1.0,
                "167": 0.0,
                "168": 0.0,
                "169": 0.0,
                "170": 0.0,
                "171": 0.0,
                "172": 0.20000000000000007,
                "173": 0.30000000000000004,
                "174": 0.09999999999999998,
                "175": 0.0,
                "176": 0.0,
                "177": 0.20000000000000007,
                "178": 0.0,
                "179": 0.0,
                "180": 0.0,
                "181": 0.5,
                "182": 1.0,
                "183": 0.0,
                "184": 0.0,
                "185": 0.0,
                "186": 0.7999999999999999,
                "187": 0.0,
                "188": 1.0,
                "189": 1.0,
                "190": 0.0,
                "191": 0.0,
                "192": 0.0,
                "193": 0.0,
                "194": 0.0,
                "195": 0.0,
                "196": 0.4,
                "197": 0.0,
                "198": 0.0,
                "199": 0.0,
                "200": 0.0,
                "201": 0.0,
                "202": 0.09999999999999998,
                "203": 0.0,
                "204": 0.0,
                "205": 0.0,
                "206": 0.0,
                "207": 0.0,
                "208": 0.0,
                "209": 0.0,
                "210": 0.0,
                "211": 0.0,
                "212": 0.09999999999999998,
                "213": 0.0,
                "214": 0.0,
                "215": 0.0,
                "216": 0.0,
                "217": 0.20000000000000007,
                "218": 1.0,
                "219": 0.0,
                "220": 0.0,
                "221": 0.0,
                "222": 0.5999999999999999,
                "223": 0.0,
                "224": 0.0,
                "225": 0.0,
                "226": 0.0,
                "227": 0.7,
                "228": 0.0,
                "229": 0.0,
                "230": 0.0,
                "231": 0.0,
                "232": 0.0,
                "233": 0.0,
                "234": 0.0,
                "235": 0.0,
                "236": 0.0,
                "237": 0.0,
                "238": 0.5,
                "239": 0.0,
                "240": 0.0,
                "241": 0.0,
                "242": 0.0,
                "243": 0.0,
                "244": 0.0,
                "245": 0.0,
                "246": 0.0,
                "247": 0.0,
                "248": 0.0,
                "249": 0.9,
                "250": 0.0,
                "251": 0.0,
                "252": 0.0,
                "253": 0.0,
                "254": 0.0,
                "255": 0.0,
                "256": 0.0,
                "257": 0.0,
                "258": 0.0,
                "259": 0.0,
                "260": 0.0,
                "261": 0.0,
                "262": 0.0,
                "263": 0.0,
                "264": 1.0,
                "265": 0.0,
                "266": 0.0,
                "267": 0.0,
                "268": 0.0,
                "269": 0.0,
                "270": 0.7999999999999999,
                "271": 0.0,
                "272": 0.0,
                "273": 0.0,
                "274": 0.0,
                "275": 0.30000000000000004,
                "276": 0.0,
                "277": 0.0,
                "278": 0.0,
                "279": 1.0,
                "280": 0.0,
                "281": 0.0,
                "282": 0.0,
                "283": 0.0,
                "284": 1.0,
                "285": 0.0,
                "286": 0.0,
                "287": 0.0,
                "288": 0.0,
                "289": 0.20000000000000007,
                "290": 1.0,
                "291": 0.0,
                "292": 0.0,
                "293": 0.0,
                "294": 0.30000000000000004,
                "295": 0.9,
                "296": 0.0,
                "297": 0.0,
                "298": 0.0,
                "299": 1.0,
                "300": 0.09999999999999998,
                "301": 0.0,
                "302": 0.0,
                "303": 0.0,
                "304": 0.0,
                "305": 1.0,
                "306": 0.0,
                "307": 0.0,
                "308": 0.0,
                "309": 0.0,
                "310": 0.0,
                "311": 0.0,
                "312": 0.7999999999999999,
                "313": 0.09999999999999998,
                "314": 0.0,
                "315": 0.0,
                "316": 1.0,
                "317": 0.0,
                "318": 1.0,
                "319": 0.0,
                "320": 0.0,
                "321": 1.0,
                "322": 0.0,
                "323": 0.0,
                "324": 0.0,
                "325": 0.0,
                "326": 1.0,
                "327": 0.5999999999999999,
                "328": 0.0,
                "329": 0.09999999999999998,
                "330": 0.0,
                "331": 0.0,
                "332": 1.0,
                "333": 0.30000000000000004,
                "334": 0.0,
                "335": 0.0,
                "336": 0.0,
                "337": 0.7999999999999999,
                "338": 0.0,
                "339": 0.0,
                "340": 0.0,
                "341": 0.0,
                "342": 0.5,
                "343": 0.0,
                "344": 0.0,
                "345": 0.0,
                "346": 1.0,
                "347": 0.0,
                "348": 0.0,
                "349": 0.0,
                "350": 0.0,
                "351": 1.0,
                "352": 0.0,
                "353": 0.0,
                "354": 0.0,
                "355": 0.0,
                "356": 1.0,
                "357": 0.09999999999999998,
                "358": 0.0,
                "359": 0.0,
                "360": 1.0,
                "361": 1.0,
                "362": 0.0,
                "363": 0.0,
                "364": 0.5999999999999999,
                "365": 0.0,
                "366": 0.0,
                "367": 0.0,
                "368": 0.0,
                "369": 1.0,
                "370": 1.0,
                "371": 0.0,
                "372": 0.0,
                "373": 0.0,
                "374": 0.0,
                "375": 1.0,
                "376": 0.0,
                "377": 0.0,
                "378": 0.0,
                "379": 1.0,
                "380": 1.0,
                "381": 0.0,
                "382": 0.0,
                "383": 0.0,
                "384": 0.9,
                "385": 0.0,
                "386": 0.0,
                "387": 0.0,
                "388": 0.0,
                "389": 0.0,
                "390": 0.0,
                "391": 0.0,
                "392": 0.0,
                "393": 0.0,
                "394": 0.0,
                "395": 0.0,
                "396": 0.5999999999999999,
                "397": 0.09999999999999998,
                "398": 0.0,
                "399": 0.0
            },
            "pass@5": {
                "0": 0.0,
                "1": 0.9761904761904762,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 1.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 1.0,
                "14": 1.0,
                "15": 0.0,
                "16": 0.0,
                "17": 0.0,
                "18": 0.0,
                "19": 0.0,
                "20": 0.0,
                "21": 0.0,
                "22": 0.0,
                "23": 1.0,
                "24": 0.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 1.0,
                "30": 1.0,
                "31": 1.0,
                "32": 1.0,
                "33": 1.0,
                "34": 0.0,
                "35": 0.7777777777777778,
                "36": 1.0,
                "37": 0.7777777777777778,
                "38": 0.0,
                "39": 0.0,
                "40": 0.0,
                "41": 0.0,
                "42": 1.0,
                "43": 1.0,
                "44": 1.0,
                "45": 0.9761904761904762,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 0.7777777777777778,
                "50": 1.0,
                "51": 0.0,
                "52": 0.9166666666666666,
                "53": 0.0,
                "54": 0.0,
                "55": 0.0,
                "56": 0.0,
                "57": 0.5,
                "58": 0.0,
                "59": 1.0,
                "60": 0.0,
                "61": 0.0,
                "62": 0.0,
                "63": 0.0,
                "64": 0.0,
                "65": 0.0,
                "66": 0.0,
                "67": 1.0,
                "68": 0.9166666666666666,
                "69": 0.0,
                "70": 0.7777777777777778,
                "71": 0.9761904761904762,
                "72": 0.0,
                "73": 1.0,
                "74": 0.0,
                "75": 0.996031746031746,
                "76": 1.0,
                "77": 0.0,
                "78": 0.0,
                "79": 0.0,
                "80": 0.0,
                "81": 0.5,
                "82": 1.0,
                "83": 1.0,
                "84": 1.0,
                "85": 0.0,
                "86": 1.0,
                "87": 0.0,
                "88": 0.0,
                "89": 0.0,
                "90": 0.0,
                "91": 0.996031746031746,
                "92": 0.0,
                "93": 0.0,
                "94": 0.5,
                "95": 0.0,
                "96": 0.0,
                "97": 0.0,
                "98": 0.0,
                "99": 1.0,
                "100": 0.0,
                "101": 0.0,
                "102": 1.0,
                "103": 0.0,
                "104": 0.9166666666666666,
                "105": 0.0,
                "106": 1.0,
                "107": 0.996031746031746,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0,
                "111": 0.5,
                "112": 1.0,
                "113": 0.0,
                "114": 0.0,
                "115": 1.0,
                "116": 1.0,
                "117": 0.0,
                "118": 0.0,
                "119": 0.0,
                "120": 1.0,
                "121": 1.0,
                "122": 0.0,
                "123": 0.5,
                "124": 0.0,
                "125": 0.0,
                "126": 0.0,
                "127": 0.0,
                "128": 1.0,
                "129": 1.0,
                "130": 0.0,
                "131": 0.0,
                "132": 1.0,
                "133": 0.0,
                "134": 0.0,
                "135": 0.0,
                "136": 0.0,
                "137": 0.0,
                "138": 1.0,
                "139": 0.0,
                "140": 0.0,
                "141": 0.0,
                "142": 0.0,
                "143": 1.0,
                "144": 1.0,
                "145": 0.0,
                "146": 0.0,
                "147": 1.0,
                "148": 0.9761904761904762,
                "149": 0.0,
                "150": 0.0,
                "151": 0.0,
                "152": 0.7777777777777778,
                "153": 0.996031746031746,
                "154": 0.0,
                "155": 1.0,
                "156": 0.0,
                "157": 0.0,
                "158": 0.0,
                "159": 0.0,
                "160": 0.0,
                "161": 0.0,
                "162": 0.0,
                "163": 1.0,
                "164": 0.0,
                "165": 0.5,
                "166": 1.0,
                "167": 0.0,
                "168": 0.0,
                "169": 0.0,
                "170": 0.0,
                "171": 0.0,
                "172": 0.7777777777777778,
                "173": 0.9166666666666666,
                "174": 0.5,
                "175": 0.0,
                "176": 0.0,
                "177": 0.7777777777777778,
                "178": 0.0,
                "179": 0.0,
                "180": 0.0,
                "181": 0.996031746031746,
                "182": 1.0,
                "183": 0.0,
                "184": 0.0,
                "185": 0.0,
                "186": 1.0,
                "187": 0.0,
                "188": 1.0,
                "189": 1.0,
                "190": 0.0,
                "191": 0.0,
                "192": 0.0,
                "193": 0.0,
                "194": 0.0,
                "195": 0.0,
                "196": 0.9761904761904762,
                "197": 0.0,
                "198": 0.0,
                "199": 0.0,
                "200": 0.0,
                "201": 0.0,
                "202": 0.5,
                "203": 0.0,
                "204": 0.0,
                "205": 0.0,
                "206": 0.0,
                "207": 0.0,
                "208": 0.0,
                "209": 0.0,
                "210": 0.0,
                "211": 0.0,
                "212": 0.5,
                "213": 0.0,
                "214": 0.0,
                "215": 0.0,
                "216": 0.0,
                "217": 0.7777777777777778,
                "218": 1.0,
                "219": 0.0,
                "220": 0.0,
                "221": 0.0,
                "222": 1.0,
                "223": 0.0,
                "224": 0.0,
                "225": 0.0,
                "226": 0.0,
                "227": 1.0,
                "228": 0.0,
                "229": 0.0,
                "230": 0.0,
                "231": 0.0,
                "232": 0.0,
                "233": 0.0,
                "234": 0.0,
                "235": 0.0,
                "236": 0.0,
                "237": 0.0,
                "238": 0.996031746031746,
                "239": 0.0,
                "240": 0.0,
                "241": 0.0,
                "242": 0.0,
                "243": 0.0,
                "244": 0.0,
                "245": 0.0,
                "246": 0.0,
                "247": 0.0,
                "248": 0.0,
                "249": 1.0,
                "250": 0.0,
                "251": 0.0,
                "252": 0.0,
                "253": 0.0,
                "254": 0.0,
                "255": 0.0,
                "256": 0.0,
                "257": 0.0,
                "258": 0.0,
                "259": 0.0,
                "260": 0.0,
                "261": 0.0,
                "262": 0.0,
                "263": 0.0,
                "264": 1.0,
                "265": 0.0,
                "266": 0.0,
                "267": 0.0,
                "268": 0.0,
                "269": 0.0,
                "270": 1.0,
                "271": 0.0,
                "272": 0.0,
                "273": 0.0,
                "274": 0.0,
                "275": 0.9166666666666666,
                "276": 0.0,
                "277": 0.0,
                "278": 0.0,
                "279": 1.0,
                "280": 0.0,
                "281": 0.0,
                "282": 0.0,
                "283": 0.0,
                "284": 1.0,
                "285": 0.0,
                "286": 0.0,
                "287": 0.0,
                "288": 0.0,
                "289": 0.7777777777777778,
                "290": 1.0,
                "291": 0.0,
                "292": 0.0,
                "293": 0.0,
                "294": 0.9166666666666666,
                "295": 1.0,
                "296": 0.0,
                "297": 0.0,
                "298": 0.0,
                "299": 1.0,
                "300": 0.5,
                "301": 0.0,
                "302": 0.0,
                "303": 0.0,
                "304": 0.0,
                "305": 1.0,
                "306": 0.0,
                "307": 0.0,
                "308": 0.0,
                "309": 0.0,
                "310": 0.0,
                "311": 0.0,
                "312": 1.0,
                "313": 0.5,
                "314": 0.0,
                "315": 0.0,
                "316": 1.0,
                "317": 0.0,
                "318": 1.0,
                "319": 0.0,
                "320": 0.0,
                "321": 1.0,
                "322": 0.0,
                "323": 0.0,
                "324": 0.0,
                "325": 0.0,
                "326": 1.0,
                "327": 1.0,
                "328": 0.0,
                "329": 0.5,
                "330": 0.0,
                "331": 0.0,
                "332": 1.0,
                "333": 0.9166666666666666,
                "334": 0.0,
                "335": 0.0,
                "336": 0.0,
                "337": 1.0,
                "338": 0.0,
                "339": 0.0,
                "340": 0.0,
                "341": 0.0,
                "342": 0.996031746031746,
                "343": 0.0,
                "344": 0.0,
                "345": 0.0,
                "346": 1.0,
                "347": 0.0,
                "348": 0.0,
                "349": 0.0,
                "350": 0.0,
                "351": 1.0,
                "352": 0.0,
                "353": 0.0,
                "354": 0.0,
                "355": 0.0,
                "356": 1.0,
                "357": 0.5,
                "358": 0.0,
                "359": 0.0,
                "360": 1.0,
                "361": 1.0,
                "362": 0.0,
                "363": 0.0,
                "364": 1.0,
                "365": 0.0,
                "366": 0.0,
                "367": 0.0,
                "368": 0.0,
                "369": 1.0,
                "370": 1.0,
                "371": 0.0,
                "372": 0.0,
                "373": 0.0,
                "374": 0.0,
                "375": 1.0,
                "376": 0.0,
                "377": 0.0,
                "378": 0.0,
                "379": 1.0,
                "380": 1.0,
                "381": 0.0,
                "382": 0.0,
                "383": 0.0,
                "384": 1.0,
                "385": 0.0,
                "386": 0.0,
                "387": 0.0,
                "388": 0.0,
                "389": 0.0,
                "390": 0.0,
                "391": 0.0,
                "392": 0.0,
                "393": 0.0,
                "394": 0.0,
                "395": 0.0,
                "396": 1.0,
                "397": 0.5,
                "398": 0.0,
                "399": 0.0
            },
            "pass@10": {
                "0": 0.0,
                "1": 1.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 1.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 1.0,
                "14": 1.0,
                "15": 0.0,
                "16": 0.0,
                "17": 0.0,
                "18": 0.0,
                "19": 0.0,
                "20": 0.0,
                "21": 0.0,
                "22": 0.0,
                "23": 1.0,
                "24": 0.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 1.0,
                "30": 1.0,
                "31": 1.0,
                "32": 1.0,
                "33": 1.0,
                "34": 0.0,
                "35": 1.0,
                "36": 1.0,
                "37": 1.0,
                "38": 0.0,
                "39": 0.0,
                "40": 0.0,
                "41": 0.0,
                "42": 1.0,
                "43": 1.0,
                "44": 1.0,
                "45": 1.0,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 1.0,
                "50": 1.0,
                "51": 0.0,
                "52": 1.0,
                "53": 0.0,
                "54": 0.0,
                "55": 0.0,
                "56": 0.0,
                "57": 1.0,
                "58": 0.0,
                "59": 1.0,
                "60": 0.0,
                "61": 0.0,
                "62": 0.0,
                "63": 0.0,
                "64": 0.0,
                "65": 0.0,
                "66": 0.0,
                "67": 1.0,
                "68": 1.0,
                "69": 0.0,
                "70": 1.0,
                "71": 1.0,
                "72": 0.0,
                "73": 1.0,
                "74": 0.0,
                "75": 1.0,
                "76": 1.0,
                "77": 0.0,
                "78": 0.0,
                "79": 0.0,
                "80": 0.0,
                "81": 1.0,
                "82": 1.0,
                "83": 1.0,
                "84": 1.0,
                "85": 0.0,
                "86": 1.0,
                "87": 0.0,
                "88": 0.0,
                "89": 0.0,
                "90": 0.0,
                "91": 1.0,
                "92": 0.0,
                "93": 0.0,
                "94": 1.0,
                "95": 0.0,
                "96": 0.0,
                "97": 0.0,
                "98": 0.0,
                "99": 1.0,
                "100": 0.0,
                "101": 0.0,
                "102": 1.0,
                "103": 0.0,
                "104": 1.0,
                "105": 0.0,
                "106": 1.0,
                "107": 1.0,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0,
                "111": 1.0,
                "112": 1.0,
                "113": 0.0,
                "114": 0.0,
                "115": 1.0,
                "116": 1.0,
                "117": 0.0,
                "118": 0.0,
                "119": 0.0,
                "120": 1.0,
                "121": 1.0,
                "122": 0.0,
                "123": 1.0,
                "124": 0.0,
                "125": 0.0,
                "126": 0.0,
                "127": 0.0,
                "128": 1.0,
                "129": 1.0,
                "130": 0.0,
                "131": 0.0,
                "132": 1.0,
                "133": 0.0,
                "134": 0.0,
                "135": 0.0,
                "136": 0.0,
                "137": 0.0,
                "138": 1.0,
                "139": 0.0,
                "140": 0.0,
                "141": 0.0,
                "142": 0.0,
                "143": 1.0,
                "144": 1.0,
                "145": 0.0,
                "146": 0.0,
                "147": 1.0,
                "148": 1.0,
                "149": 0.0,
                "150": 0.0,
                "151": 0.0,
                "152": 1.0,
                "153": 1.0,
                "154": 0.0,
                "155": 1.0,
                "156": 0.0,
                "157": 0.0,
                "158": 0.0,
                "159": 0.0,
                "160": 0.0,
                "161": 0.0,
                "162": 0.0,
                "163": 1.0,
                "164": 0.0,
                "165": 1.0,
                "166": 1.0,
                "167": 0.0,
                "168": 0.0,
                "169": 0.0,
                "170": 0.0,
                "171": 0.0,
                "172": 1.0,
                "173": 1.0,
                "174": 1.0,
                "175": 0.0,
                "176": 0.0,
                "177": 1.0,
                "178": 0.0,
                "179": 0.0,
                "180": 0.0,
                "181": 1.0,
                "182": 1.0,
                "183": 0.0,
                "184": 0.0,
                "185": 0.0,
                "186": 1.0,
                "187": 0.0,
                "188": 1.0,
                "189": 1.0,
                "190": 0.0,
                "191": 0.0,
                "192": 0.0,
                "193": 0.0,
                "194": 0.0,
                "195": 0.0,
                "196": 1.0,
                "197": 0.0,
                "198": 0.0,
                "199": 0.0,
                "200": 0.0,
                "201": 0.0,
                "202": 1.0,
                "203": 0.0,
                "204": 0.0,
                "205": 0.0,
                "206": 0.0,
                "207": 0.0,
                "208": 0.0,
                "209": 0.0,
                "210": 0.0,
                "211": 0.0,
                "212": 1.0,
                "213": 0.0,
                "214": 0.0,
                "215": 0.0,
                "216": 0.0,
                "217": 1.0,
                "218": 1.0,
                "219": 0.0,
                "220": 0.0,
                "221": 0.0,
                "222": 1.0,
                "223": 0.0,
                "224": 0.0,
                "225": 0.0,
                "226": 0.0,
                "227": 1.0,
                "228": 0.0,
                "229": 0.0,
                "230": 0.0,
                "231": 0.0,
                "232": 0.0,
                "233": 0.0,
                "234": 0.0,
                "235": 0.0,
                "236": 0.0,
                "237": 0.0,
                "238": 1.0,
                "239": 0.0,
                "240": 0.0,
                "241": 0.0,
                "242": 0.0,
                "243": 0.0,
                "244": 0.0,
                "245": 0.0,
                "246": 0.0,
                "247": 0.0,
                "248": 0.0,
                "249": 1.0,
                "250": 0.0,
                "251": 0.0,
                "252": 0.0,
                "253": 0.0,
                "254": 0.0,
                "255": 0.0,
                "256": 0.0,
                "257": 0.0,
                "258": 0.0,
                "259": 0.0,
                "260": 0.0,
                "261": 0.0,
                "262": 0.0,
                "263": 0.0,
                "264": 1.0,
                "265": 0.0,
                "266": 0.0,
                "267": 0.0,
                "268": 0.0,
                "269": 0.0,
                "270": 1.0,
                "271": 0.0,
                "272": 0.0,
                "273": 0.0,
                "274": 0.0,
                "275": 1.0,
                "276": 0.0,
                "277": 0.0,
                "278": 0.0,
                "279": 1.0,
                "280": 0.0,
                "281": 0.0,
                "282": 0.0,
                "283": 0.0,
                "284": 1.0,
                "285": 0.0,
                "286": 0.0,
                "287": 0.0,
                "288": 0.0,
                "289": 1.0,
                "290": 1.0,
                "291": 0.0,
                "292": 0.0,
                "293": 0.0,
                "294": 1.0,
                "295": 1.0,
                "296": 0.0,
                "297": 0.0,
                "298": 0.0,
                "299": 1.0,
                "300": 1.0,
                "301": 0.0,
                "302": 0.0,
                "303": 0.0,
                "304": 0.0,
                "305": 1.0,
                "306": 0.0,
                "307": 0.0,
                "308": 0.0,
                "309": 0.0,
                "310": 0.0,
                "311": 0.0,
                "312": 1.0,
                "313": 1.0,
                "314": 0.0,
                "315": 0.0,
                "316": 1.0,
                "317": 0.0,
                "318": 1.0,
                "319": 0.0,
                "320": 0.0,
                "321": 1.0,
                "322": 0.0,
                "323": 0.0,
                "324": 0.0,
                "325": 0.0,
                "326": 1.0,
                "327": 1.0,
                "328": 0.0,
                "329": 1.0,
                "330": 0.0,
                "331": 0.0,
                "332": 1.0,
                "333": 1.0,
                "334": 0.0,
                "335": 0.0,
                "336": 0.0,
                "337": 1.0,
                "338": 0.0,
                "339": 0.0,
                "340": 0.0,
                "341": 0.0,
                "342": 1.0,
                "343": 0.0,
                "344": 0.0,
                "345": 0.0,
                "346": 1.0,
                "347": 0.0,
                "348": 0.0,
                "349": 0.0,
                "350": 0.0,
                "351": 1.0,
                "352": 0.0,
                "353": 0.0,
                "354": 0.0,
                "355": 0.0,
                "356": 1.0,
                "357": 1.0,
                "358": 0.0,
                "359": 0.0,
                "360": 1.0,
                "361": 1.0,
                "362": 0.0,
                "363": 0.0,
                "364": 1.0,
                "365": 0.0,
                "366": 0.0,
                "367": 0.0,
                "368": 0.0,
                "369": 1.0,
                "370": 1.0,
                "371": 0.0,
                "372": 0.0,
                "373": 0.0,
                "374": 0.0,
                "375": 1.0,
                "376": 0.0,
                "377": 0.0,
                "378": 0.0,
                "379": 1.0,
                "380": 1.0,
                "381": 0.0,
                "382": 0.0,
                "383": 0.0,
                "384": 1.0,
                "385": 0.0,
                "386": 0.0,
                "387": 0.0,
                "388": 0.0,
                "389": 0.0,
                "390": 0.0,
                "391": 0.0,
                "392": 0.0,
                "393": 0.0,
                "394": 0.0,
                "395": 0.0,
                "396": 1.0,
                "397": 1.0,
                "398": 0.0,
                "399": 0.0
            }
        }
    },
    {
        "0": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "1": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "2": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "3": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "4": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "5": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "6": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "7": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "8": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "9": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "10": [
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ]
        ],
        "11": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "12": [
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ]
        ],
        "13": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "14": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "15": [
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "16": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "17": [
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "18": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "19": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "20": [
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "21": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "22": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "23": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "24": [
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ]
        ],
        "25": [
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ]
        ],
        "26": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "27": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "28": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "29": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "30": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "31": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "32": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "33": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "34": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ]
        ],
        "35": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "36": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "37": [
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "38": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "39": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "40": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "41": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "42": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "43": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "44": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "45": [
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "46": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                false
            ],
            [
                false
            ]
        ],
        "47": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "48": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ]
        ],
        "49": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ]
        ],
        "50": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "51": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "52": [
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "53": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "54": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "55": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ]
        ],
        "56": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "57": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ]
        ],
        "58": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "59": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "60": [
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ]
        ],
        "61": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "62": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "63": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "64": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "65": [
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "66": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "67": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "68": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "69": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "70": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ]
        ],
        "71": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "72": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "73": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "74": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "75": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "76": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "77": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "78": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ]
        ],
        "79": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "80": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "81": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "82": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "83": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "84": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "85": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ]
        ],
        "86": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "87": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "88": [
            [
                -4
            ],
            [
                true,
                false
            ],
            [
                -4
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "89": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "90": [
            [
                true,
                true,
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                -4
            ]
        ],
        "91": [
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ]
        ],
        "92": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ]
        ],
        "93": [
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ]
        ],
        "94": [
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "95": [
            [
                -4
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ]
        ],
        "96": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "97": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "98": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -3
            ],
            [
                false
            ],
            [
                -3
            ],
            [
                false
            ]
        ],
        "99": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ]
        ],
        "100": [
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "101": [
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "102": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "103": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ]
        ],
        "104": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                false
            ]
        ],
        "105": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "106": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "107": [
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ],
            [
                false
            ]
        ],
        "108": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "109": [
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ]
        ],
        "110": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "111": [
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ]
        ],
        "112": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "113": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "114": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "115": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ]
        ],
        "116": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "117": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "118": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ]
        ],
        "119": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "120": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "121": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "122": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ]
        ],
        "123": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "124": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "125": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "126": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "127": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "128": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "129": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "130": [
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ]
        ],
        "131": [
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "132": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "133": [
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "134": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "135": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "136": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ]
        ],
        "137": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "138": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "139": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "140": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "141": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "142": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "143": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "144": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "145": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "146": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ]
        ],
        "147": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "148": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "149": [
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "150": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ]
        ],
        "151": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "152": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "153": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "154": [
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "155": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "156": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "157": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "158": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "159": [
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                -3
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                -3
            ],
            [
                true,
                false
            ]
        ],
        "160": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "161": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "162": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "163": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "164": [
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ]
        ],
        "165": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "166": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "167": [
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ]
        ],
        "168": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "169": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "170": [
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "171": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "172": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "173": [
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ]
        ],
        "174": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "175": [
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ]
        ],
        "176": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "177": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "178": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "179": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "180": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "181": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ]
        ],
        "182": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "183": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "184": [
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "185": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "186": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "187": [
            [
                -4
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "188": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "189": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "190": [
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "191": [
            [
                -3
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -4
            ]
        ],
        "192": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "193": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "194": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                -3
            ]
        ],
        "195": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "196": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                -3
            ],
            [
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ]
        ],
        "197": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "198": [
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "199": [
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "200": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "201": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "202": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "203": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "204": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "205": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "206": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "207": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "208": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "209": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "210": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "211": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "212": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "213": [
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "214": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "215": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "216": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "217": [
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "218": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "219": [
            [
                true,
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "220": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "221": [
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "222": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "223": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ]
        ],
        "224": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "225": [
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ]
        ],
        "226": [
            [
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "227": [
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "228": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "229": [
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "230": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "231": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "232": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -4
            ]
        ],
        "233": [
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ]
        ],
        "234": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "235": [
            [
                -2
            ],
            [
                -3
            ],
            [
                true,
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "236": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "237": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "238": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ]
        ],
        "239": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "240": [
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "241": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "242": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "243": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "244": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "245": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "246": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "247": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "248": [
            [
                -4
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "249": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "250": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "251": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "252": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "253": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "254": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "255": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "256": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "257": [
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "258": [
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "259": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "260": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "261": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "262": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "263": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "264": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "265": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "266": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "267": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "268": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "269": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "270": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "271": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "272": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "273": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "274": [
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "275": [
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "276": [
            [
                -2
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -3
            ]
        ],
        "277": [
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "278": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "279": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "280": [
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ]
        ],
        "281": [
            [
                -2
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "282": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "283": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "284": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "285": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "286": [
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "287": [
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "288": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "289": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "290": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "291": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "292": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "293": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "294": [
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                -2
            ]
        ],
        "295": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "296": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "297": [
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                -2
            ],
            [
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "298": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "299": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "300": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "301": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "302": [
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "303": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "304": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "305": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "306": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "307": [
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "308": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "309": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                -2
            ]
        ],
        "310": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "311": [
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "312": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "313": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "314": [
            [
                -2
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "315": [
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "316": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "317": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "318": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "319": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "320": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "321": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "322": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "323": [
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                -3
            ]
        ],
        "324": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "325": [
            [
                true,
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                -4
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ]
        ],
        "326": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "327": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ]
        ],
        "328": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "329": [
            [
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ]
        ],
        "330": [
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "331": [
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "332": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "333": [
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "334": [
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "335": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "336": [
            [
                true,
                true,
                -4
            ],
            [
                true,
                true,
                -4
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                -4
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ]
        ],
        "337": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ]
        ],
        "338": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "339": [
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ]
        ],
        "340": [
            [
                true,
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -3
            ]
        ],
        "341": [
            [
                true,
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "342": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "343": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "344": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "345": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "346": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "347": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "348": [
            [
                -2
            ],
            [
                -3
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -2
            ]
        ],
        "349": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "350": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "351": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "352": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "353": [
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "354": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "355": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "356": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "357": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "358": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "359": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "360": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "361": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "362": [
            [
                -2
            ],
            [
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "363": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "364": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "365": [
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ]
        ],
        "366": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "367": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "368": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "369": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "370": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "371": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "372": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "373": [
            [
                true,
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "374": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                -2
            ]
        ],
        "375": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "376": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "377": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "378": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "379": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "380": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "381": [
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ]
        ],
        "382": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "383": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "384": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "385": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "386": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "387": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                true,
                -2
            ],
            [
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                -3
            ]
        ],
        "388": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "389": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "390": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "391": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "392": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "393": [
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "394": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "395": [
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ]
        ],
        "396": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ]
        ],
        "397": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ]
        ],
        "398": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "399": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ]
        ]
    },
    [
        [
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}"
        ],
        [
            "{\"execution time\": 0.24535179138183594}",
            "{\"output\": \"192000\\n1\\n9\\n\", \"inputs\": \"3\\n8\\n5 4 3 8 5 5 3 4\\n8\\n0 0 5 9 5 7 3 7\\n1\\n8\\n\", \"expected\": \"192000\\n0\\n9\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 0\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'max_product' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\"}",
            "{\"execution time\": 0.2411808967590332}",
            "{\"output\": \"3212\\n13\\n53234\\n1099999999\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3212 != 16\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'max_product' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\"}",
            "{\"output\": \"192000\\n1\\n9\\n\", \"inputs\": \"3\\n8\\n5 4 3 8 5 5 3 4\\n8\\n0 0 5 9 5 7 3 7\\n1\\n8\\n\", \"expected\": \"192000\\n0\\n9\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 0\"}",
            "{\"output\": \"3212\\n13\\n53234\\n1099999999\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3212 != 16\"}",
            "{\"execution time\": 0.23816776275634766}",
            "{\"execution time\": 0.22246074676513672}"
        ],
        [
            "{\"output\": \"1\\n2\\n1\\n1\\n5\\n6\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\"}",
            "{\"output\": \"1\\n1\\n1\\n1\\n4\\n3\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\"}",
            "{\"output\": \"1\\n2\\n1\\n1\\n5\\n6\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n2\\n1\\n1\\n5\\n6\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\"}",
            "{\"output\": \"1\\n2\\n1\\n1\\n5\\n6\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\"}",
            "{\"output\": \"1\\n2\\n1\\n1\\n5\\n6\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}"
        ],
        [
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"YES\\nNO\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=4: NO != YES\"}",
            "{\"output\": \"YES\\nNO\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=4: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=6: YES != NO\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}"
        ],
        [
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}"
        ],
        [
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}"
        ],
        [
            "{\"output\": \"1\\n9\\n0\\n98183\\n82784\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: 98183 != 189114\"}",
            "{\"output\": \"1\\n9\\n0\\n98183\\n82784\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: 98183 != 189114\"}",
            "{\"output\": \"1\\n9\\n0\\n98183\\n82784\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: 98183 != 189114\"}",
            "{\"output\": \"1\\n9\\n0\\n98183\\n82784\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: 98183 != 189114\"}",
            "{\"output\": \"1\\n9\\n0\\n98183\\n82784\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: 98183 != 189114\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\"}",
            "{\"output\": \"1\\n9\\n0\\n98183\\n82784\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: 98183 != 189114\"}",
            "{\"output\": \"1\\n9\\n0\\n98183\\n82784\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: 98183 != 189114\"}",
            "{\"output\": \"1\\n9\\n0\\n98183\\n82784\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: 98183 != 189114\"}",
            "{\"output\": \"1\\n9\\n0\\n98183\\n82784\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: 98183 != 189114\"}"
        ],
        [
            "{\"output\": \"9\\n25\\n4\\n6\\n0\\n202\\n28\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 15\"}",
            "{\"output\": \"8\\n18\\n4\\n3\\n0\\n202\\n19\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 15\"}",
            "{\"output\": \"9\\n17\\n5\\n5\\n-1000\\n101\\n9\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 15\"}",
            "{\"output\": \"15\\n34\\n8\\n6\\n-1000\\n103\\n31\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 34 != 17\"}",
            "{\"output\": \"15\\n34\\n8\\n6\\n-1000\\n103\\n31\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 34 != 17\"}",
            "{\"output\": \"15\\n34\\n3\\n2\\n-1000\\n202\\n13\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 34 != 17\"}",
            "{\"output\": \"8\\n18\\n4\\n3\\n0\\n202\\n19\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 15\"}",
            "{\"output\": \"15\\n17\\n8\\n4\\n0\\n101\\n10\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=4: 0 != -1000\"}",
            "{\"output\": \"8\\n18\\n4\\n6\\n0\\n202\\n16\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 15\"}",
            "{\"output\": \"9\\n17\\n5\\n4\\n-1000\\n202\\n17\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 15\"}"
        ],
        [
            "{\"output\": \"0\\n2\\n18\\n0\\n231\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=2: 18 != 1\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"execution time\": 6.031990051269531e-05}",
            "{\"execution time\": 8.869171142578125e-05}",
            "{\"execution time\": 7.128715515136719e-05}",
            "{\"execution time\": 9.083747863769531e-05}",
            "{\"execution time\": 6.127357482910156e-05}",
            "{\"execution time\": 8.869171142578125e-05}",
            "{\"execution time\": 0.00010228157043457031}",
            "{\"execution time\": 9.489059448242188e-05}",
            "{\"execution time\": 5.7697296142578125e-05}",
            "{\"execution time\": 5.5789947509765625e-05}"
        ],
        [
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError('max() iterable argument is empty')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[7, 2, 1], [6, 4, 2], [6, 5, 3], [3, 2, 1]]]\", \"expected\": \"15\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: invalid syntax (<string>, line 42)\"}",
            "{\"error\": \"ValueError('max() iterable argument is empty')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[7, 2, 1], [6, 4, 2], [6, 5, 3], [3, 2, 1]]]\", \"expected\": \"15\"}",
            "{\"error\": \"ValueError('max() iterable argument is empty')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[], [], [], []]]\", \"expected\": \"15\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"21\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4294967287\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4294967287\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4294967287\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4294967287\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4294967287\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4294967287\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4294967287\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\"}",
            "{\"output\": \"225\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"225\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"225\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"225\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"30\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"225\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"30\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"225\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\"}"
        ],
        [
            "{\"output\": \"7\", \"inputs\": \"['leetscode', ['leet', 'code', 'leetcode']]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['leetscode', ['leet', 'code', 'leetcode']]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0004870891571044922}",
            "{\"execution time\": 0.0009312629699707031}",
            "{\"execution time\": 0.0003495216369628906}",
            "{\"output\": \"7\", \"inputs\": \"['leetscode', ['leet', 'code', 'leetcode']]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['leetscode', ['leet', 'code', 'leetcode']]\", \"expected\": \"1\"}",
            "{\"execution time\": 0.0005099773406982422}",
            "{\"execution time\": 0.0005087852478027344}",
            "{\"execution time\": 0.0004913806915283203}"
        ],
        [
            "{\"execution time\": 2.3603439331054688e-05}",
            "{\"execution time\": 2.1457672119140625e-05}",
            "{\"execution time\": 1.1444091796875e-05}",
            "{\"execution time\": 1.6689300537109375e-05}",
            "{\"execution time\": 2.47955322265625e-05}",
            "{\"execution time\": 1.2159347534179688e-05}",
            "{\"execution time\": 1.1682510375976562e-05}",
            "{\"execution time\": 2.002716064453125e-05}",
            "{\"execution time\": 1.3828277587890625e-05}",
            "{\"execution time\": 1.2636184692382812e-05}"
        ],
        [
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\"}",
            "{\"output\": \"1000000005\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"['44181649', '68139596', 285, 324]\", \"expected\": \"0\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\"}",
            "{\"output\": \"0\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\"}",
            "{\"output\": \"1\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"['44181649', '68139596', 285, 324]\", \"expected\": \"0\"}"
        ],
        [
            "{\"output\": \"[-1, -1, -1, -1, -1]\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"[-3, -1, 1, 3, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[4, 2, 0, -2, -4]\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"[-3, -1, 1, 3, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, 1, 1, 3, 3]\", \"inputs\": \"[[3, 2, 3, 4, 2]]\", \"expected\": \"[-2, -1, 0, 2, 3]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1, -1, -1, -1]\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"[-3, -1, 1, 3, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1, 1, 3, 5]\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"[-3, -1, 1, 3, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1, -1, -1, -1]\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"[-3, -1, 1, 3, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-2, -1, 0, 2, 4]\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"[-3, -1, 1, 3, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1]\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"[-3, -1, 1, 3, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1]\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"[-3, -1, 1, 3, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1, 1, 3, 5]\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"[-3, -1, 1, 3, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[0, 0, 0, 0, 0]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\"}",
            "{\"output\": \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\"}"
        ],
        [
            "{\"output\": \"67\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"123\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"79\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"79\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"521\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"52\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"['5494']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['52233']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['1111111']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['5494']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['1111111']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['52233']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['5494']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['5494']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['5494']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['5494']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[1, 2, 3]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 3, 4, 5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 3, 4, 5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 3, 4, 5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 2, 3, 4, 5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 1.7881393432617188e-05}",
            "{\"execution time\": 1.9073486328125e-05}",
            "{\"execution time\": 1.0251998901367188e-05}",
            "{\"execution time\": 2.002716064453125e-05}",
            "{\"execution time\": 1.049041748046875e-05}",
            "{\"execution time\": 1.8835067749023438e-05}",
            "{\"execution time\": 1.9311904907226562e-05}",
            "{\"execution time\": 2.0503997802734375e-05}",
            "{\"execution time\": 1.0728836059570312e-05}",
            "{\"execution time\": 1.621246337890625e-05}"
        ],
        [
            "{\"output\": \"81\", \"inputs\": \"[10]\", \"expected\": \"182\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[10]\", \"expected\": \"182\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[10]\", \"expected\": \"182\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ''\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[10]\", \"expected\": \"182\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[10]\", \"expected\": \"182\"}",
            "{\"output\": \"81\", \"inputs\": \"[10]\", \"expected\": \"182\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[10]\", \"expected\": \"182\"}",
            "{\"error\": \"NameError(\\\"name 's' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[10]\", \"expected\": \"182\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[10]\", \"expected\": \"182\"}",
            "{\"output\": \"1\", \"inputs\": \"[10]\", \"expected\": \"182\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"36\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"72\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"41\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"36\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"36\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"36\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"20\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"36\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"36\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"36\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"27\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"27\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"21\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"27\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"27\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 5.9604644775390625e-06}",
            "{\"execution time\": 1.0251998901367188e-05}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 9.775161743164062e-06}",
            "{\"execution time\": 5.245208740234375e-06}",
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 1.2874603271484375e-05}",
            "{\"execution time\": 1.0967254638671875e-05}",
            "{\"execution time\": 1.5974044799804688e-05}",
            "{\"execution time\": 1.2159347534179688e-05}"
        ],
        [
            "{\"execution time\": 0.0003936290740966797}",
            "{\"execution time\": 0.00040841102600097656}",
            "{\"execution time\": 0.00040841102600097656}",
            "{\"execution time\": 0.0003006458282470703}",
            "{\"execution time\": 0.00028443336486816406}",
            "{\"execution time\": 0.00039196014404296875}",
            "{\"execution time\": 0.00028824806213378906}",
            "{\"execution time\": 0.00027751922607421875}",
            "{\"execution time\": 0.0002853870391845703}",
            "{\"execution time\": 0.0002753734588623047}"
        ],
        [
            "{\"execution time\": 0.04487729072570801}",
            "{\"output\": \"11\", \"inputs\": \"['010101']\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.040357112884521484}",
            "{\"execution time\": 0.03865385055541992}",
            "{\"execution time\": 0.04283857345581055}",
            "{\"execution time\": 0.044470787048339844}",
            "{\"execution time\": 0.046341657638549805}",
            "{\"execution time\": 0.04455733299255371}",
            "{\"execution time\": 0.03992271423339844}",
            "{\"execution time\": 0.03899860382080078}"
        ],
        [
            "{\"execution time\": 2.193450927734375e-05}",
            "{\"execution time\": 1.9073486328125e-05}",
            "{\"execution time\": 2.193450927734375e-05}",
            "{\"execution time\": 2.0742416381835938e-05}",
            "{\"execution time\": 2.574920654296875e-05}",
            "{\"execution time\": 3.7670135498046875e-05}",
            "{\"execution time\": 1.7642974853515625e-05}",
            "{\"execution time\": 3.62396240234375e-05}",
            "{\"execution time\": 3.814697265625e-05}",
            "{\"execution time\": 3.910064697265625e-05}"
        ],
        [
            "{\"execution time\": 2.4557113647460938e-05}",
            "{\"execution time\": 1.7881393432617188e-05}",
            "{\"execution time\": 1.4066696166992188e-05}",
            "{\"execution time\": 1.5020370483398438e-05}",
            "{\"execution time\": 1.5735626220703125e-05}",
            "{\"execution time\": 2.6464462280273438e-05}",
            "{\"execution time\": 2.7894973754882812e-05}",
            "{\"execution time\": 2.5272369384765625e-05}",
            "{\"execution time\": 2.6702880859375e-05}",
            "{\"execution time\": 1.5020370483398438e-05}"
        ],
        [
            "{\"execution time\": 1.33514404296875e-05}",
            "{\"execution time\": 1.3589859008789062e-05}",
            "{\"execution time\": 1.33514404296875e-05}",
            "{\"execution time\": 2.2172927856445312e-05}",
            "{\"execution time\": 1.2159347534179688e-05}",
            "{\"execution time\": 1.3113021850585938e-05}",
            "{\"execution time\": 1.5020370483398438e-05}",
            "{\"execution time\": 1.1920928955078125e-05}",
            "{\"execution time\": 2.3365020751953125e-05}",
            "{\"execution time\": 1.52587890625e-05}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[3, 9, 5]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"bbabc\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"cbzac\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"bbabc\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.04608917236328125}",
            "{\"output\": \"bcabc\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"cbabb\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['a']\", \"inputs\": \"['a']\", \"expected\": \"z\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"bba\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"bbabc\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.04123234748840332}"
        ],
        [
            "{\"execution time\": 0.004065513610839844}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"execution time\": 0.002771139144897461}",
            "{\"execution time\": 0.002489805221557617}",
            "{\"execution time\": 0.0027637481689453125}",
            "{\"execution time\": 0.0039670467376708984}",
            "{\"execution time\": 0.004038095474243164}",
            "{\"execution time\": 0.002781391143798828}",
            "{\"execution time\": 0.0029625892639160156}",
            "{\"execution time\": 0.0027887821197509766}"
        ],
        [
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[64113, 12080, 82457, 22261, 383, 60044, 22, 74932, 91942, 91476, 66418, 44597, 8317, 67527, 84325, 9187, 61272, 25192, 19505, 32980, 32724, 18426, 4...(truncated) ...9, 74257, 62985, 52279, 90699, 14166, 49026, 20994, 34460, 64040, 13769, 66859, 40532, 36158, 80176, 29558, 62643, 36343, 11734, 62200, 75407], 10000]\", \"expected\": \"5\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.09000182151794434}",
            "{\"execution time\": 0.0894632339477539}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[3, 3]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 3]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 2, 3]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 3]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 3]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[4, 4]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 3]\", \"inputs\": \"[3, [[1, 3], [2, 6], [1, 5]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 3]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 3]\", \"inputs\": \"[3, [[1, 3], [2, 6], [1, 5]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 0]\", \"inputs\": \"[3, [[1, 3], [2, 6], [1, 5]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 2, 5, 6, 7, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 2, 5, 6, 7, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 2, 5, 6, 7, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"-1\", \"inputs\": \"[3, -2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[3, -2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[3, -2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[3, -2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[3, -2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[3, -2]\", \"expected\": \"3\"}",
            "{\"output\": \"-1\", \"inputs\": \"[3, -2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[3, -2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[3, -2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[3, -2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[-1, 6, -1]\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[10, -1, 10]\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[6, 8, 9]\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[10, -1, 10]\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[10, 7, 7]\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[13, 3, 6]\", \"inputs\": \"[[1, 2, 3, 4], [2, 4, 5, 9], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, 6, -1]\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, 10, -1]\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[10, 7, 7]\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[6, 5, 7]\", \"inputs\": \"[[1, 2, 3, 4], [2, 4, 5, 9], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 2.7418136596679688e-05}",
            "{\"execution time\": 2.8133392333984375e-05}",
            "{\"execution time\": 2.86102294921875e-05}",
            "{\"execution time\": 2.765655517578125e-05}",
            "{\"execution time\": 2.765655517578125e-05}",
            "{\"execution time\": 2.8848648071289062e-05}",
            "{\"execution time\": 4.458427429199219e-05}",
            "{\"execution time\": 2.7179718017578125e-05}",
            "{\"execution time\": 2.765655517578125e-05}",
            "{\"execution time\": 2.7894973754882812e-05}"
        ],
        [
            "{\"execution time\": 0.0270082950592041}",
            "{\"execution time\": 0.029584169387817383}",
            "{\"execution time\": 0.03338909149169922}",
            "{\"execution time\": 0.029773235321044922}",
            "{\"execution time\": 0.03323054313659668}",
            "{\"execution time\": 0.03186202049255371}",
            "{\"execution time\": 0.03071427345275879}",
            "{\"execution time\": 0.031841278076171875}",
            "{\"execution time\": 0.03521990776062012}",
            "{\"execution time\": 0.5780763626098633}"
        ],
        [
            "{\"execution time\": 0.00043010711669921875}",
            "{\"execution time\": 0.00031685829162597656}",
            "{\"execution time\": 0.0003170967102050781}",
            "{\"execution time\": 0.0004515647888183594}",
            "{\"output\": \"0\", \"inputs\": \"[['cd', 'ac', 'dc', 'ca', 'zz']]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0004305839538574219}",
            "{\"execution time\": 0.00041747093200683594}",
            "{\"execution time\": 0.00031948089599609375}",
            "{\"execution time\": 0.0004520416259765625}",
            "{\"execution time\": 0.0004279613494873047}"
        ],
        [
            "{\"output\": \"14\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.026457548141479492}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.012311458587646484}",
            "{\"execution time\": 0.00793766975402832}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: name 'nums' is not defined\"}",
            "{\"execution time\": 0.010374069213867188}",
            "{\"output\": \"4\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1...(truncated) ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]\", \"expected\": \"0\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 3, 3, 3, 5]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1...(truncated) ...1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]\", \"expected\": \"0\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 3, 3, 3, 5]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"14\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"20\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"20\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for -: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\"}",
            "{\"output\": \"0\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\"}",
            "{\"output\": \"0\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[85, -54, -41, -64, -64, 8, 38, -71, -17, 29], 27]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[85, -54, -41, -64, -64, 8, 38, -71, -17, 29], 27]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[85, -54, -41, -64, -64, 8, 38, -71, -17, 29], 27]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 3, 6, 4, 1, 2], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.12726736068725586}",
            "{\"output\": \"1\", \"inputs\": \"[[85, -54, -41, -64, -64, 8, 38, -71, -17, 29], 27]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[85, -54, -41, -64, -64, 8, 38, -71, -17, 29], 27]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.10384964942932129}",
            "{\"output\": \"1\", \"inputs\": \"[[85, -54, -41, -64, -64, 8, 38, -71, -17, 29], 27]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[85, -54, -41, -64, -64, 8, 38, -71, -17, 29], 27]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.005251884460449219}",
            "{\"execution time\": 0.005782604217529297}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 3, 1, 2, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.005777120590209961}",
            "{\"error\": \"TypeError(\\\"object of type 'itertools.chain' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 3, 1, 2, 2]]\", \"expected\": \"4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 3, 1, 2, 2]]\", \"expected\": \"4\"}",
            "{\"execution time\": 0.005139350891113281}",
            "{\"execution time\": 0.005876302719116211}",
            "{\"execution time\": 0.005686521530151367}",
            "{\"execution time\": 0.006191253662109375}"
        ],
        [
            "{\"output\": \"50\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"50\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"50\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"50\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"50\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"50\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"50\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"50\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"150\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"50\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[2, 3, 4, 5], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0032172203063964844}",
            "{\"execution time\": 3.4332275390625e-05}",
            "{\"execution time\": 0.004775285720825195}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"6\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[0, 1, 0]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[0, 1, 0]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[0, 1, 0]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[0, 1, 0]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[0, 1, 0]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[0, 1, 0]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"17339\", \"inputs\": \"[[3, 1, 8, 2, 7, 8, 9, 3, 10, 10, 9, 8, 2, 6, 3, 8, 7, 5, 5, 7, 2, 5, 9, 8, 3, 6, 2, 2, 1, 8, 10, 3, 3, 8, 9, 5, 5, 5, 5, 6, 10, 1, 8, 8, 9, 4, 5, 2, ...(truncated) ...3, 5, 10, 8, 1, 1, 1, 2, 6, 4, 4, 8, 8, 6, 4, 2, 8, 1, 8, 3, 3, 10, 8, 8, 4, 6, 3, 10, 6, 7, 2, 3, 4, 9, 1, 5, 6, 8, 2, 1, 6, 4, 8, 5, 4, 3, 6, 7, 8]]\", \"expected\": \"16984\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"27\", \"inputs\": \"[[8, 9, 6, 8, 3, 1, 1, 5, 3, 3]]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17339\", \"inputs\": \"[[3, 1, 8, 2, 7, 8, 9, 3, 10, 10, 9, 8, 2, 6, 3, 8, 7, 5, 5, 7, 2, 5, 9, 8, 3, 6, 2, 2, 1, 8, 10, 3, 3, 8, 9, 5, 5, 5, 5, 6, 10, 1, 8, 8, 9, 4, 5, 2, ...(truncated) ...3, 5, 10, 8, 1, 1, 1, 2, 6, 4, 4, 8, 8, 6, 4, 2, 8, 1, 8, 3, 3, 10, 8, 8, 4, 6, 3, 10, 6, 7, 2, 3, 4, 9, 1, 5, 6, 8, 2, 1, 6, 4, 8, 5, 4, 3, 6, 7, 8]]\", \"expected\": \"16984\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-2\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-2\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[38, 94, 33], [43, 5, 7]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[38, 94, 33], [43, 5, 7]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[38, 94, 33], [43, 5, 7]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[38, 94, 33], [43, 5, 7]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[38, 94, 33], [43, 5, 7]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[38, 94, 33], [43, 5, 7]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[38, 94, 33], [43, 5, 7]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[38, 94, 33], [43, 5, 7]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[38, 94, 33], [43, 5, 7]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[38, 94, 33], [43, 5, 7]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"5\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"16\", \"inputs\": \"[[0, 5, 0, 16, 3]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[2, 3, 7, 12]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[[0, 5, 0, 16, 3]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[2, 3, 7, 9, 12]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[2, 3, 7, 9, 12]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[2, 3, 7, 12]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[2, 3, 7, 12]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[[0, 5, 0, 16, 3]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.05184054374694824}",
            "{\"output\": \"16\", \"inputs\": \"[[0, 5, 0, 16, 3]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"[[3, 7], [5, 5], [7, 3]]\", \"inputs\": \"[10]\", \"expected\": \"[[3, 7], [5, 5]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}"
        ],
        [
            "{\"execution time\": 1.811981201171875e-05}",
            "{\"execution time\": 2.86102294921875e-05}",
            "{\"execution time\": 1.8358230590820312e-05}",
            "{\"execution time\": 1.7881393432617188e-05}",
            "{\"execution time\": 1.7881393432617188e-05}",
            "{\"execution time\": 1.9550323486328125e-05}",
            "{\"execution time\": 1.9550323486328125e-05}",
            "{\"execution time\": 2.288818359375e-05}",
            "{\"execution time\": 1.8596649169921875e-05}",
            "{\"execution time\": 3.170967102050781e-05}"
        ],
        [
            "{\"output\": \"bcaaabc\", \"inputs\": \"['abc', 'bca', 'aaa']\", \"expected\": \"aaabca\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"aaa\", \"inputs\": \"['abc', 'bca', 'aaa']\", \"expected\": \"aaabca\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"abcaaaa\", \"inputs\": \"['abc', 'bca', 'aaa']\", \"expected\": \"aaabca\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}"
        ],
        [
            "{\"output\": \"True\", \"inputs\": \"[[5, 7, 3, 1], 2]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5, 7, 3, 1], 2]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5, 7, 3, 1], 2]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[-1, -1, 0, -2, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5, 7, 3, 1], 2]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5, 7, 3, 1], 2]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5, 7, 3, 1], 2]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[5, 7, 3, 1], 2]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[9, 8, 8, 3, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 3, 1, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"inf\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"inf\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"['one.two.three', 'four.five']\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['one.two.three', 'four.five']\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"['one.two.three', 'four.five', 'six']\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"16\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"-1\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"3\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['1011']\", \"expected\": \"2\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"inf\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"8\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"['ymlqaillegxchmqnajgcaosqdwvrqwvriflwlphmwjpvdwlhrqdlkstumkpjrouekkkoqopjcsufksgwwfvtghsplihpzyzxejmjheztbbtsyotdaeycklspmtzqhbzntuhtphpaehdabwibjctf...(truncated) ...zljgfjpeepprdvlisrvmttzquhnlkgdzowxmphwbmnmwtozdnwubommxfftzwjihjpptsgxsttgibafcwpmzlhihxghpqqetxtkcfwogmpobmolpincxfhpkghpmnxzihyppmqzkz', ['atinl']]\", \"expected\": \"10000\"}",
            "{\"error\": \"TypeError(\\\"'set' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\"}",
            "{\"output\": \"7\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 3.7670135498046875e-05}",
            "{\"execution time\": 3.4809112548828125e-05}",
            "{\"execution time\": 4.9591064453125e-05}",
            "{\"execution time\": 5.0067901611328125e-05}",
            "{\"execution time\": 3.075599670410156e-05}",
            "{\"execution time\": 3.5762786865234375e-05}",
            "{\"execution time\": 3.0040740966796875e-05}",
            "{\"execution time\": 3.409385681152344e-05}",
            "{\"execution time\": 3.8623809814453125e-05}",
            "{\"execution time\": 5.173683166503906e-05}"
        ],
        [
            "{\"execution time\": 0.5946168899536133}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['lEetcOde']\", \"expected\": \"lEOtcede\"}",
            "{\"output\": \"EEeOeOee\", \"inputs\": \"['lEetcOde']\", \"expected\": \"lEOtcede\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.565192461013794}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['lEetcOde']\", \"expected\": \"lEOtcede\"}",
            "{\"output\": \"EEeOeOee\", \"inputs\": \"['lEetcOde']\", \"expected\": \"lEOtcede\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.6636390686035156}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['lEetcOde']\", \"expected\": \"lEOtcede\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['lEetcOde']\", \"expected\": \"lEOtcede\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['lEetcOde']\", \"expected\": \"lEOtcede\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[4, 6, 1, 2], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[4, 6, 1, 2], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.11128497123718262}",
            "{\"execution time\": 0.11946439743041992}",
            "{\"output\": \"1\", \"inputs\": \"[[4, 6, 1, 2], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 6], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 6], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 4, 6], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9317\", \"inputs\": \"[[1, 2, 2, 2, 2, 5, 8, 9, 9, 9, 10, 11, 11, 11, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15, 17, 18, 18, 19, 22, 22, 22, 23, 23, 23, 24, 24, 26, 26, 27, 27...(truncated) ...84, 99984, 99987, 99987, 99988, 99988, 99988, 99990, 99991, 99993, 99994, 99994, 99995, 99996, 99996, 99997, 99997, 99997, 99998, 99999, 99999], 4610]\", \"expected\": \"9356\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 6], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 8.559226989746094e-05}",
            "{\"execution time\": 5.936622619628906e-05}",
            "{\"execution time\": 8.225440979003906e-05}",
            "{\"output\": \"True\", \"inputs\": \"[[2, 1, 3]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 5.936622619628906e-05}",
            "{\"output\": \"True\", \"inputs\": \"[[2, 1, 3]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[2, 1, 3]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[2, 1, 3]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[2, 1, 3]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[2, 1, 3]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 6, 1, 9, 2], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[2, 3, 6, 1, 9, 2], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 6, 1, 9, 2], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 3, 6, 1, 9, 2], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 3, 6, 1, 9, 2], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[2, 3, 6, 1, 9, 2], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[2, 3, 6, 1, 9, 2], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 6, 1, 9, 2], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 3, 6, 1, 9, 2], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 6, 1, 9, 2], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.12245893478393555}",
            "{\"execution time\": 0.15254878997802734}",
            "{\"execution time\": 0.12905478477478027}",
            "{\"execution time\": 0.13116788864135742}",
            "{\"execution time\": 0.13379526138305664}",
            "{\"execution time\": 0.13205265998840332}",
            "{\"execution time\": 0.15809130668640137}",
            "{\"execution time\": 0.13263320922851562}",
            "{\"execution time\": 0.03276181221008301}",
            "{\"execution time\": 0.14518523216247559}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[3, 2, 4], 2, 1]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 2, 4], 2, 1]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 1.811981201171875e-05}",
            "{\"execution time\": 1.621246337890625e-05}",
            "{\"execution time\": 2.384185791015625e-05}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 2.6941299438476562e-05}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.2874603271484375e-05}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.00011706352233886719}",
            "{\"execution time\": 3.0517578125e-05}",
            "{\"execution time\": 3.0279159545898438e-05}",
            "{\"execution time\": 1.9073486328125e-05}",
            "{\"execution time\": 3.0040740966796875e-05}",
            "{\"execution time\": 2.09808349609375e-05}",
            "{\"execution time\": 2.0265579223632812e-05}",
            "{\"execution time\": 3.0279159545898438e-05}",
            "{\"execution time\": 1.9550323486328125e-05}",
            "{\"execution time\": 3.0040740966796875e-05}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 1, 3, 3, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 1, 3, 3, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 1, 3, 3, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 1, 3, 3, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['1', '11']\", \"expected\": \"10\"}",
            "{\"output\": \"0\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['1', '11']\", \"expected\": \"10\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-3\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"16\", \"inputs\": \"[[[1, 2], [4, 2], [1, 3], [5, 2]], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[[1, 2], [4, 2], [1, 3], [5, 2]], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[9744, 5838], [1431, 1178], [4152, 3417], [9932, 6742], [6287, 3832], [3660, 885], [2140, 9362], [3985, 8356], [7511, 2020], [8436, 3182], [5389, 98...(truncated) ...4481], [3553, 8409], [4507, 4987], [8353, 853], [4744, 5941], [6186, 1950], [2523, 2746], [150, 8772], [8697, 5651], [5951, 7815], [9754, 7739]], 100]\", \"expected\": \"49\"}",
            "{\"execution time\": 12.773493528366089}",
            "{\"output\": \"4\", \"inputs\": \"[[[1, 2], [4, 2], [1, 3], [5, 2]], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[[1, 2], [4, 2], [1, 3], [5, 2]], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[[1, 2], [4, 2], [1, 3], [5, 2]], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[[1, 2], [4, 2], [1, 3], [5, 2]], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[[1, 2], [4, 2], [1, 3], [5, 2]], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[[1, 2], [4, 2], [1, 3], [5, 2]], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 1.7875640392303467}",
            "{\"execution time\": 1.8169548511505127}",
            "{\"execution time\": 1.8022539615631104}",
            "{\"execution time\": 1.760101079940796}",
            "{\"execution time\": 1.749851942062378}",
            "{\"execution time\": 1.8353033065795898}",
            "{\"execution time\": 1.7567408084869385}",
            "{\"execution time\": 1.7475073337554932}",
            "{\"execution time\": 1.7314033508300781}",
            "{\"execution time\": 0.027053356170654297}"
        ],
        [
            "{\"execution time\": 1.7642974853515625e-05}",
            "{\"execution time\": 1.52587890625e-05}",
            "{\"execution time\": 2.7179718017578125e-05}",
            "{\"execution time\": 1.6450881958007812e-05}",
            "{\"execution time\": 1.239776611328125e-05}",
            "{\"execution time\": 3.218650817871094e-05}",
            "{\"execution time\": 1.71661376953125e-05}",
            "{\"execution time\": 1.1444091796875e-05}",
            "{\"execution time\": 3.0040740966796875e-05}",
            "{\"execution time\": 1.6450881958007812e-05}"
        ],
        [
            "{\"execution time\": 7.081031799316406e-05}",
            "{\"execution time\": 6.270408630371094e-05}",
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 4.410743713378906e-05}",
            "{\"execution time\": 4.220008850097656e-05}",
            "{\"execution time\": 9.5367431640625e-05}",
            "{\"execution time\": 3.790855407714844e-05}",
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 4.506111145019531e-05}",
            "{\"execution time\": 3.838539123535156e-05}"
        ],
        [
            "{\"output\": \"7\", \"inputs\": \"[5, [[0, 1, 7], [1, 3, 2], [3, 4, 6]]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[5, [[0, 0, 1], [0, 2, 2], [1, 3, 2]]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[5, [[0, 0, 1], [0, 2, 2], [1, 3, 2]]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[5, [[0, 1, 7], [1, 3, 2], [3, 4, 6]]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[5, [[0, 1, 7], [1, 3, 2], [3, 4, 6]]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[5, [[0, 1, 7], [1, 3, 2], [3, 4, 6]]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[5, [[0, 1, 7], [1, 3, 2], [3, 4, 6]]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[5, [[0, 0, 1], [0, 2, 10], [1, 3, 2]]]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[5, [[0, 0, 1], [0, 2, 10], [1, 3, 2]]]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[5, [[0, 1, 7], [1, 3, 2], [3, 4, 6]]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.01621246337890625}",
            "{\"execution time\": 0.01547098159790039}",
            "{\"execution time\": 0.016889095306396484}",
            "{\"execution time\": 0.020905256271362305}",
            "{\"execution time\": 0.020253658294677734}",
            "{\"execution time\": 0.015414714813232422}",
            "{\"execution time\": 0.021833419799804688}",
            "{\"execution time\": 0.01815962791442871}",
            "{\"execution time\": 0.01684260368347168}",
            "{\"execution time\": 0.018251419067382812}"
        ],
        [
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\"}",
            "{\"output\": \"0\", \"inputs\": \"[[5, 3, 2, 10, 15], 1]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\"}",
            "{\"output\": \"0\", \"inputs\": \"[[5, 3, 2, 10, 15], 1]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError('min() iterable argument is empty')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2], 0]\", \"expected\": \"0\"}",
            "{\"output\": \"-2\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[5, 3, 2, 10, 15], 1]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-2\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[1, 1000000000, 1]\", \"expected\": \"24894045\"}",
            "{\"output\": \"5\", \"inputs\": \"[10, 20, 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[10, 20, 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[10, 20, 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[10, 20, 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[10, 20, 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[1, 1000000000, 1]\", \"expected\": \"24894045\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[1, 1000000000, 1]\", \"expected\": \"24894045\"}",
            "{\"output\": \"5\", \"inputs\": \"[10, 20, 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[1, 1000000000, 1]\", \"expected\": \"24894045\"}"
        ],
        [
            "{\"output\": \"True\", \"inputs\": \"['ab', 'd']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError('can only concatenate str (not \\\"int\\\") to str')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\"}",
            "{\"output\": \"True\", \"inputs\": \"['ab', 'd']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['peqhhdcxlt', 'oy']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"['zc', 'ad']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"['zc', 'ad']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"['zc', 'ad']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['ab', 'd']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['ab', 'd']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError('can only concatenate str (not \\\"int\\\") to str')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"['L_RL__R']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.4066696166992188e-05}",
            "{\"output\": \"4\", \"inputs\": \"['_R__LL_']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 2.4318695068359375e-05}",
            "{\"execution time\": 2.3603439331054688e-05}",
            "{\"execution time\": 1.3589859008789062e-05}",
            "{\"output\": \"-1\", \"inputs\": \"['R']\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['R']\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.8835067749023438e-05}",
            "{\"output\": \"4\", \"inputs\": \"['_R__LL_']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['ababab', 'ababab', 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"['ababab', 'ababab', 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 8], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"927\", \"inputs\": \"[[4096, 134217728, 16777216, 1048576, 134217728, 33554432, 32768, 1024, 8388608, 8388608, 1, 1024, 134217728, 256, 1, 8, 2048, 262144, 67108864, 26214...(truncated) ...131072, 2, 2097152, 1048576, 65536, 4, 2097152, 4194304, 64, 2, 16, 1, 4096, 512, 8388608, 512, 16, 256, 2, 33554432, 2, 8192, 536870912], 1020431456]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 8], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 8], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[4, 2, 1], 7]\", \"expected\": \"1\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 32, 1, 2], 12]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[32, 2, 1, 1], 12]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 32, 1, 2], 12]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[8, 2, 1], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[[72, 36], [16, 12]]\", \"inputs\": \"[[[1, 2], [3, 4]]]\", \"expected\": \"[[24, 12], [8, 6]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.4271819591522217}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[799080836, 423251511, 111226593, 199793102, 115587466, 611190904, 872873799, 360100130, 469364951, 959782411, 621585622, 130650953, 611992804, 9135...(truncated) ...7048732, 20103994, 121682048, 874505419, 316845024, 611111248, 53034852, 75716017, 890893323, 887187582, 335801173, 437998502, 560937067, 448819239]]]\", \"expected\": \"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...(truncated) ...0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [3, 4]]]\", \"expected\": \"[[24, 12], [8, 6]]\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[799080836, 423251511, 111226593, 199793102, 115587466, 611190904, 872873799, 360100130, 469364951, 959782411, 621585622, 130650953, 611992804, 9135...(truncated) ...7048732, 20103994, 121682048, 874505419, 316845024, 611111248, 53034852, 75716017, 890893323, 887187582, 335801173, 437998502, 560937067, 448819239]]]\", \"expected\": \"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...(truncated) ...0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[799080836, 423251511, 111226593, 199793102, 115587466, 611190904, 872873799, 360100130, 469364951, 959782411, 621585622, 130650953, 611992804, 9135...(truncated) ...7048732, 20103994, 121682048, 874505419, 316845024, 611111248, 53034852, 75716017, 890893323, 887187582, 335801173, 437998502, 560937067, 448819239]]]\", \"expected\": \"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...(truncated) ...0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\"}",
            "{\"output\": \"[[6, 16], [36, 96]]\", \"inputs\": \"[[[1, 2], [3, 4]]]\", \"expected\": \"[[24, 12], [8, 6]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[1, 2], [3, 6]]\", \"inputs\": \"[[[1, 2], [3, 4]]]\", \"expected\": \"[[24, 12], [8, 6]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[799080836, 423251511, 111226593, 199793102, 115587466, 611190904, 872873799, 360100130, 469364951, 959782411, 621585622, 130650953, 611992804, 9135...(truncated) ...7048732, 20103994, 121682048, 874505419, 316845024, 611111248, 53034852, 75716017, 890893323, 887187582, 335801173, 437998502, 560937067, 448819239]]]\", \"expected\": \"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...(truncated) ...0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[799080836, 423251511, 111226593, 199793102, 115587466, 611190904, 872873799, 360100130, 469364951, 959782411, 621585622, 130650953, 611992804, 9135...(truncated) ...7048732, 20103994, 121682048, 874505419, 316845024, 611111248, 53034852, 75716017, 890893323, 887187582, 335801173, 437998502, 560937067, 448819239]]]\", \"expected\": \"[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...(truncated) ...0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[1, 1, 1, 1, 3], 3]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}"
        ],
        [
            "{\"output\": \"-1\", \"inputs\": \"['1100011000', '0101001010', 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1100011000', '0101001010', 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1100011000', '0101001010', 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1100011000', '0101001010', 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1100011000', '0101001010', 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1100011000', '0101001010', 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1100011000', '0101001010', 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"5\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[[1, 3], [5, 8]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\"}",
            "{\"output\": \"0\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.00020885467529296875}",
            "{\"execution time\": 0.0001995563507080078}",
            "{\"execution time\": 0.00021338462829589844}",
            "{\"execution time\": 0.00015044212341308594}",
            "{\"execution time\": 0.00021719932556152344}",
            "{\"execution time\": 0.0001666545867919922}",
            "{\"execution time\": 0.0001513957977294922}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 4, 5, 1, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.00015425682067871094}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 4, 5, 1, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"['2908305']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['2908305']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['2908305']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['2908305']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['2908305']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"14\", \"inputs\": \"[[8, 7, 3, 5, 7, 2, 4, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[8, 7, 3, 5, 7, 2, 4, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 7, 3, 5, 7, 2, 4, 9]]\", \"expected\": \"16\"}",
            "{\"output\": \"14\", \"inputs\": \"[[8, 7, 3, 5, 7, 2, 4, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[8, 7, 3, 5, 7, 2, 4, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 7, 3, 5, 7, 2, 4, 9]]\", \"expected\": \"16\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 7, 3, 5, 7, 2, 4, 9]]\", \"expected\": \"16\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[8, 7, 3, 5, 7, 2, 4, 9]]\", \"expected\": \"16\"}",
            "{\"output\": \"0\", \"inputs\": \"[[8, 7, 3, 5, 7, 2, 4, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[8, 7, 3, 5, 7, 2, 4, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 1.3589859008789062e-05}",
            "{\"execution time\": 2.5987625122070312e-05}",
            "{\"execution time\": 2.5033950805664062e-05}",
            "{\"execution time\": 1.4066696166992188e-05}",
            "{\"execution time\": 2.47955322265625e-05}",
            "{\"execution time\": 1.4066696166992188e-05}",
            "{\"execution time\": 1.5020370483398438e-05}",
            "{\"execution time\": 2.7179718017578125e-05}",
            "{\"execution time\": 1.52587890625e-05}",
            "{\"execution time\": 1.430511474609375e-05}"
        ],
        [
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 1.3589859008789062e-05}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 3, 4, 9]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 4, 9]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 4, 9]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.6689300537109375e-05}",
            "{\"execution time\": 2.002716064453125e-05}",
            "{\"output\": \"0\", \"inputs\": \"[[18]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 4, 9]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 4, 9]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[18]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.0006358623504638672}",
            "{\"execution time\": 0.00043010711669921875}",
            "{\"execution time\": 0.0004367828369140625}",
            "{\"execution time\": 0.0004436969757080078}",
            "{\"execution time\": 0.0006182193756103516}",
            "{\"execution time\": 0.0004246234893798828}",
            "{\"execution time\": 0.0006606578826904297}",
            "{\"execution time\": 0.0006079673767089844}",
            "{\"execution time\": 0.00043582916259765625}",
            "{\"execution time\": 0.000644683837890625}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.02494668960571289}",
            "{\"execution time\": 0.023211240768432617}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.020020008087158203}",
            "{\"execution time\": 0.028625011444091797}",
            "{\"execution time\": 0.024425506591796875}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[2, 3, 3, 2, 2, 4, 2, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 5, 4, 5], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5], 9]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 5, 4, 5], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 5, 4, 5], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 5, 4, 5], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 5, 4, 5], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5], 9]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5], 9]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 5, 4, 5], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 5, 4, 5], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"73\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"31\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"69\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"33\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\"}",
            "{\"output\": \"25\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 4, 6, 8], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.16849565505981445}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 3], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 5], 11]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 3], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 3], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 5], 11]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 1, 1, 2, 3], 4]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 3], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.0022001266479492188}",
            "{\"execution time\": 0.003323078155517578}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.003916025161743164}",
            "{\"execution time\": 0.00045490264892578125}",
            "{\"execution time\": 0.0035910606384277344}",
            "{\"execution time\": 0.0031435489654541016}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"18\", \"inputs\": \"[[10, 8], [8, 7, 5, 4, 3, 2, 2, 1]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"inputs\": \"[[10, 8], [8, 7, 5, 4, 3, 2, 2, 1]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"inputs\": \"[[10, 8], [8, 7, 5, 4, 3, 2, 2, 1]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"inputs\": \"[[10, 8], [8, 7, 5, 4, 3, 2, 2, 1]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"inputs\": \"[[10, 8], [8, 7, 5, 4, 3, 2, 2, 1]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"inputs\": \"[[10, 8], [8, 7, 5, 4, 3, 2, 2, 1]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"inputs\": \"[[10, 8], [8, 7, 5, 4, 3, 2, 2, 1]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"inputs\": \"[[10, 8], [8, 7, 5, 4, 3, 2, 2, 1]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"inputs\": \"[[10, 8], [8, 7, 5, 4, 3, 2, 2, 1]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"inputs\": \"[[10, 8], [8, 7, 5, 4, 3, 2, 2, 1]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.05149650573730469}",
            "{\"output\": \"7\", \"inputs\": \"[[12, 6, 1, 2, 7]]\", \"expected\": \"77\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.05350518226623535}",
            "{\"execution time\": 0.047777414321899414}",
            "{\"execution time\": 0.053296804428100586}",
            "{\"execution time\": 0.047658681869506836}",
            "{\"output\": \"42\", \"inputs\": \"[[12, 6, 1, 2, 7]]\", \"expected\": \"77\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[12, 6, 1, 2, 7]]\", \"expected\": \"77\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.04954648017883301}",
            "{\"output\": \"42\", \"inputs\": \"[[12, 6, 1, 2, 7]]\", \"expected\": \"77\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.014831066131591797}",
            "{\"execution time\": 0.040836334228515625}",
            "{\"output\": \"20\", \"inputs\": \"[[1, 2, 1]]\", \"expected\": \"15\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.009166717529296875}",
            "{\"execution time\": 0.011728525161743164}",
            "{\"execution time\": 0.013149261474609375}",
            "{\"execution time\": 0.011880159378051758}",
            "{\"execution time\": 0.01293635368347168}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +: 'int' and 'set'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 1]]\", \"expected\": \"15\"}",
            "{\"execution time\": 0.0114898681640625}"
        ],
        [
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 2, -1]\", \"inputs\": \"[['1', 'prev', '2', 'prev', 'prev']]\", \"expected\": \"[1, 2, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 2, 2, 1, -1]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"5\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[10, 10, 10, 3, 1, 1]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 3, 3, 4, 2]\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[10, 10, 10, 3, 1, 1]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for %: 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.0001983642578125}",
            "{\"execution time\": 0.00019884109497070312}",
            "{\"execution time\": 0.0001983642578125}",
            "{\"execution time\": 0.0004000663757324219}",
            "{\"execution time\": 0.0002002716064453125}",
            "{\"execution time\": 0.0003037452697753906}",
            "{\"execution time\": 0.0002799034118652344}",
            "{\"execution time\": 0.0004401206970214844}",
            "{\"execution time\": 0.00029754638671875}",
            "{\"execution time\": 0.00019931793212890625}"
        ],
        [
            "{\"execution time\": 0.007703065872192383}",
            "{\"execution time\": 0.010450363159179688}",
            "{\"execution time\": 0.009142637252807617}",
            "{\"execution time\": 0.007979154586791992}",
            "{\"execution time\": 0.008966922760009766}",
            "{\"execution time\": 0.00803685188293457}",
            "{\"execution time\": 0.008843660354614258}",
            "{\"execution time\": 0.0076634883880615234}",
            "{\"execution time\": 0.00883030891418457}",
            "{\"execution time\": 0.009630680084228516}"
        ],
        [
            "{\"output\": \"8\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[6, 5, 4, 3, 4, 5]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[[5, 4, 8, 7, 10, 2]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.007164716720581055}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"ValueError('[1, 1] is not in list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[0, 1], [0, 0]]]\", \"expected\": \"0\"}",
            "{\"error\": \"ValueError('[1, 1] is not in list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[0, 1], [0, 0]]]\", \"expected\": \"0\"}",
            "{\"error\": \"ValueError('[1, 1] is not in list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[0, 1], [0, 0]]]\", \"expected\": \"0\"}",
            "{\"error\": \"ValueError('[1, 1] is not in list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[0, 1], [0, 0]]]\", \"expected\": \"0\"}",
            "{\"output\": \"1\", \"inputs\": \"[[[0, 1], [0, 0]]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError('[1, 1] is not in list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[0, 1], [0, 0]]]\", \"expected\": \"0\"}",
            "{\"output\": \"1\", \"inputs\": \"[[[0, 1], [0, 0]]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[[0, 1], [0, 0]]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError('[1, 1] is not in list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[0, 1], [0, 0]]]\", \"expected\": \"0\"}",
            "{\"error\": \"ValueError('[1, 1] is not in list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[0, 1], [0, 0]]]\", \"expected\": \"0\"}"
        ],
        [
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 5, 7], [4, 2, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 3], [4, 5, 7]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 5, 4], [2, 5, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[4, 5, 7], [1, 2, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"30\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"30\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"30\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"30\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"30\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"30\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.001691579818725586}",
            "{\"execution time\": 0.001712799072265625}",
            "{\"execution time\": 0.0015523433685302734}",
            "{\"execution time\": 0.001230001449584961}",
            "{\"execution time\": 0.0027091503143310547}",
            "{\"execution time\": 0.0010859966278076172}",
            "{\"execution time\": 0.0011439323425292969}",
            "{\"execution time\": 0.0010981559753417969}",
            "{\"execution time\": 0.0011343955993652344}",
            "{\"execution time\": 0.0015819072723388672}"
        ],
        [
            "{\"execution time\": 3.719329833984375e-05}",
            "{\"execution time\": 4.124641418457031e-05}",
            "{\"execution time\": 6.437301635742188e-05}",
            "{\"execution time\": 2.5510787963867188e-05}",
            "{\"execution time\": 2.3126602172851562e-05}",
            "{\"execution time\": 3.981590270996094e-05}",
            "{\"execution time\": 2.2649765014648438e-05}",
            "{\"execution time\": 2.1457672119140625e-05}",
            "{\"execution time\": 2.3365020751953125e-05}",
            "{\"execution time\": 2.9087066650390625e-05}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"['101']\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['0111']\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['0111']\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['101']\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['0111']\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['101']\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['101']\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['101']\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['101']\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['100']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 6, 4], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 4, 4, 4], 0]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 4, 4, 4], 0]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 4, 4, 4], 0]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 4, 4, 4], 0]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.008903980255126953}",
            "{\"execution time\": 0.00785517692565918}",
            "{\"execution time\": 0.0002884864807128906}",
            "{\"output\": \"6\", \"inputs\": \"[3, 3]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.007112979888916016}",
            "{\"execution time\": 0.00873255729675293}",
            "{\"output\": \"6\", \"inputs\": \"[3, 3]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.008788585662841797}",
            "{\"output\": \"6\", \"inputs\": \"[3, 3]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.00797581672668457}"
        ],
        [
            "{\"output\": \"8\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"456924\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"456976\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"81\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"456976\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"456976\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"456976\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}",
            "{\"error\": \"TypeError('cannot unpack non-iterable int object')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}",
            "{\"output\": \"[True, False]\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"['egnkyqagyrzxoyfavspogrkngugmqiheyuupaftlxmruyvobtjeufimlhfjqyipivxvygffteppkxyoqrtfjzfqtshatgytjlpqrzqrofpmfvkiqktnjseocsryofspdzayxddbbyjynhhtywuuu...(truncated) ...], [31411, 36063, 89783, 91577], [7947, 37839, 83604, 87058], [34168, 44028, 90477, 90530], [45026, 45325, 74478, 74566], [5353, 9005, 46587, 54199]]]\", \"expected\": \"[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, Fa...(truncated) ...se, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}"
        ],
        [
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"11\", \"inputs\": \"['lmlhoptjgfccwkgshjqpptemmnfx', 'lmgbkxiezhawibcrfgj', 'lptlxfxshmdkmvzuqhyvr']\", \"expected\": \"65\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['abc', 'abb', 'ab']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"['lmlhoptjgfccwkgshjqpptemmnfx', 'lmgbkxiezhawibcrfgj', 'lptlxfxshmdkmvzuqhyvr']\", \"expected\": \"65\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"['lmlhoptjgfccwkgshjqpptemmnfx', 'lmgbkxiezhawibcrfgj', 'lptlxfxshmdkmvzuqhyvr']\", \"expected\": \"65\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['abc', 'abb', 'ab']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['abc', 'abb', 'ab']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"['lmlhoptjgfccwkgshjqpptemmnfx', 'lmgbkxiezhawibcrfgj', 'lptlxfxshmdkmvzuqhyvr']\", \"expected\": \"65\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"['lmlhoptjgfccwkgshjqpptemmnfx', 'lmgbkxiezhawibcrfgj', 'lptlxfxshmdkmvzuqhyvr']\", \"expected\": \"65\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['abc', 'abb', 'ab']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"['lmlhoptjgfccwkgshjqpptemmnfx', 'lmgbkxiezhawibcrfgj', 'lptlxfxshmdkmvzuqhyvr']\", \"expected\": \"65\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"5\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[4, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[[1, 10, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[[1, 10, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.09871029853820801}",
            "{\"execution time\": 0.10270333290100098}",
            "{\"execution time\": 0.10522317886352539}",
            "{\"execution time\": 0.10836577415466309}",
            "{\"execution time\": 0.11001443862915039}",
            "{\"execution time\": 0.1119985580444336}",
            "{\"execution time\": 14.801632165908813}",
            "{\"execution time\": 0.13445591926574707}",
            "{\"execution time\": 0.1232914924621582}",
            "{\"execution time\": 0.11826944351196289}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[4, 3, 2, 6]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\"}",
            "{\"output\": \"9\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[1, 3, 5, 6, 7]\", \"inputs\": \"[[1, 3, 5, 6, 7], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 1, 2, 6, 7, 18]\", \"inputs\": \"[[1, 7, 6, 18, 2, 1], 3]\", \"expected\": \"[1, 6, 7, 18, 1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, 5, 6, 7]\", \"inputs\": \"[[1, 3, 5, 6, 7], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, 5, 6, 7]\", \"inputs\": \"[[1, 3, 5, 6, 7], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, 5, 7, 9]\", \"inputs\": \"[[1, 3, 5, 7, 9], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, 5, 6, 7]\", \"inputs\": \"[[1, 3, 5, 6, 7], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, 5, 5, 5]\", \"inputs\": \"[[1, 3, 5, 5, 5], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 1, 2, 6, 7, 18]\", \"inputs\": \"[[1, 7, 6, 18, 2, 1], 3]\", \"expected\": \"[1, 6, 7, 18, 1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, 5, 5, 5]\", \"inputs\": \"[[1, 3, 5, 5, 5], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 3, 5, 5, 5]\", \"inputs\": \"[[1, 3, 5, 5, 5], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.0019707679748535156}",
            "{\"execution time\": 0.002083301544189453}",
            "{\"execution time\": 0.0031049251556396484}",
            "{\"execution time\": 0.002055644989013672}",
            "{\"execution time\": 0.0018587112426757812}",
            "{\"execution time\": 0.0026617050170898438}",
            "{\"execution time\": 0.003137826919555664}",
            "{\"execution time\": 0.0019183158874511719}",
            "{\"execution time\": 0.0028629302978515625}",
            "{\"execution time\": 0.0025382041931152344}"
        ],
        [
            "{\"execution time\": 3.314018249511719e-05}",
            "{\"execution time\": 4.482269287109375e-05}",
            "{\"execution time\": 4.506111145019531e-05}",
            "{\"execution time\": 2.9087066650390625e-05}",
            "{\"execution time\": 2.9087066650390625e-05}",
            "{\"execution time\": 4.8160552978515625e-05}",
            "{\"execution time\": 2.8848648071289062e-05}",
            "{\"execution time\": 3.337860107421875e-05}",
            "{\"execution time\": 3.1948089599609375e-05}",
            "{\"execution time\": 4.935264587402344e-05}"
        ],
        [
            "{\"output\": \"21\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"string indices must be integers, not 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\"}",
            "{\"output\": \"0\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['fu', 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"21\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"21\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"5\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"25\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"33\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[5, [3]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[4, [1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.1515202522277832}",
            "{\"execution time\": 0.10599637031555176}",
            "{\"execution time\": 0.13672924041748047}",
            "{\"execution time\": 0.14741253852844238}",
            "{\"execution time\": 0.15604615211486816}",
            "{\"execution time\": 0.1207895278930664}",
            "{\"execution time\": 0.15882349014282227}",
            "{\"execution time\": 0.1526944637298584}",
            "{\"execution time\": 0.1531200408935547}",
            "{\"execution time\": 0.15099596977233887}"
        ],
        [
            "{\"execution time\": 3.1948089599609375e-05}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 3.218650817871094e-05}",
            "{\"execution time\": 3.337860107421875e-05}",
            "{\"execution time\": 3.123283386230469e-05}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[3, 2]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\"}",
            "{\"output\": \"[3, 11]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 2]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 11]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, -3]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 2]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 2]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 2]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 11]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for -: 'set' and 'Counter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for -: 'set' and 'Counter'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [2, 3, 2, 3, 2, 3]]\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"46\", \"inputs\": \"[[10, 12, 13, 14, 15]]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[10, 12, 13, 14, 15]]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"40\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"6\"}",
            "{\"output\": \"7\", \"inputs\": \"[[10, 12, 13, 14, 15]]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"41\", \"inputs\": \"[[10, 12, 13, 14, 15]]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"46\", \"inputs\": \"[[10, 12, 13, 14, 15]]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"46\", \"inputs\": \"[[10, 12, 13, 14, 15]]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[10, 12, 13, 14, 15]]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\"}",
            "{\"execution time\": 4.458427429199219e-05}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 2.8371810913085938e-05}"
        ],
        [
            "{\"execution time\": 0.0543055534362793}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 4, 10, 20], 19]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 4, 10, 20], 19]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.04515337944030762}",
            "{\"execution time\": 0.04888439178466797}",
            "{\"execution time\": 0.0532989501953125}",
            "{\"execution time\": 0.05426430702209473}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 4, 10, 20], 19]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 4, 10, 20], 19]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 4, 10, 20], 19]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"'<=' not supported between instances of 'set' and 'int'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\"}",
            "{\"output\": \"5\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"KeyError('c')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\"}",
            "{\"output\": \"4\", \"inputs\": \"['aabaab', 3]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aabaab', 3]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.000690460205078125}",
            "{\"execution time\": 0.0004909038543701172}",
            "{\"execution time\": 0.0004851818084716797}",
            "{\"execution time\": 0.00045871734619140625}",
            "{\"output\": \"[0]\", \"inputs\": \"[[[2, 3, 3, 10], [3, 3, 3, 1], [6, 1, 1, 4]], 2]\", \"expected\": \"[0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0004954338073730469}",
            "{\"execution time\": 0.0005080699920654297}",
            "{\"execution time\": 0.0008101463317871094}",
            "{\"execution time\": 0.0004787445068359375}",
            "{\"execution time\": 0.0007135868072509766}"
        ],
        [
            "{\"output\": \"-1\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"13\", \"inputs\": \"[[1, 2, 3, 2, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[3, 4, 5, 1, 12, 14, 13]]\", \"expected\": \"15\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[1, 2, 3, 2, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[3, 4, 5, 1, 12, 14, 13]]\", \"expected\": \"15\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[1, 2, 3, 2, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[1, 2, 3, 2, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[1, 2, 3, 2, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[1, 2, 3, 2, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[1, 2, 3, 2, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 2, 3, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"6\", \"inputs\": \"[54, 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[54, 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[54, 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[54, 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[54, 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[54, 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[9, 1]\", \"expected\": \"6\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[9, 1]\", \"expected\": \"6\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[9, 1]\", \"expected\": \"6\"}",
            "{\"output\": \"503906250000993\", \"inputs\": \"[9, 1]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[7, 2]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[9, 1]\", \"expected\": \"6\"}",
            "{\"output\": \"8\", \"inputs\": \"[7, 2]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"503906250000993\", \"inputs\": \"[9, 1]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[9, 1]\", \"expected\": \"6\"}",
            "{\"output\": \"8\", \"inputs\": \"[7, 2]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 4, 3, 1]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[5, 5, 5, 10, 5]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[5, 5, 5, 10, 5]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[5, 5, 5, 10, 5]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[5, 5, 5, 10, 5]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[5, 5, 5, 10, 5]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[5, 5, 5, 10, 5]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 4, 3, 1]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[5, 5, 5, 10, 5]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[5, 5, 5, 10, 5]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"['nfdzqkutfwrticvdrsitfahjfoczojbfaedoeusubdnkvutcooitauqponsmkynkidtehdruswjuglcglpdtwznwvahoarmqbhyfdobjimwoidifyzqveurvvjsfqlpytlppqmagmdwsyryoakvq...(truncated) ...apvafagcsmowuqbawrgjzscpbcomttqwhvqjrphqsuocjcsdvfuqgqtrpxstyiecxyeghdtwxmehgbltyzvditrmhhnmbakvbglywgvgqpgzawlloerleqauknlql', 'u', 'qfzupcn', 92040]\", \"expected\": \"[]\"}",
            "{\"execution time\": 1.8478162288665771}",
            "{\"execution time\": 1.879244327545166}",
            "{\"execution time\": 1.9002230167388916}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"['nfdzqkutfwrticvdrsitfahjfoczojbfaedoeusubdnkvutcooitauqponsmkynkidtehdruswjuglcglpdtwznwvahoarmqbhyfdobjimwoidifyzqveurvvjsfqlpytlppqmagmdwsyryoakvq...(truncated) ...apvafagcsmowuqbawrgjzscpbcomttqwhvqjrphqsuocjcsdvfuqgqtrpxstyiecxyeghdtwxmehgbltyzvditrmhhnmbakvbglywgvgqpgzawlloerleqauknlql', 'u', 'qfzupcn', 92040]\", \"expected\": \"[]\"}",
            "{\"execution time\": 1.0709762573242188}",
            "{\"execution time\": 1.0181818008422852}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"['nfdzqkutfwrticvdrsitfahjfoczojbfaedoeusubdnkvutcooitauqponsmkynkidtehdruswjuglcglpdtwznwvahoarmqbhyfdobjimwoidifyzqveurvvjsfqlpytlppqmagmdwsyryoakvq...(truncated) ...apvafagcsmowuqbawrgjzscpbcomttqwhvqjrphqsuocjcsdvfuqgqtrpxstyiecxyeghdtwxmehgbltyzvditrmhhnmbakvbglywgvgqpgzawlloerleqauknlql', 'u', 'qfzupcn', 92040]\", \"expected\": \"[]\"}",
            "{\"execution time\": 1.0493381023406982}",
            "{\"execution time\": 1.0482194423675537}"
        ],
        [
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"5\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.011291980743408203}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.00010228157043457031}",
            "{\"execution time\": 9.965896606445312e-05}",
            "{\"execution time\": 5.793571472167969e-05}",
            "{\"execution time\": 6.127357482910156e-05}",
            "{\"execution time\": 0.00010156631469726562}",
            "{\"execution time\": 0.00011301040649414062}",
            "{\"execution time\": 5.91278076171875e-05}",
            "{\"execution time\": 6.151199340820312e-05}",
            "{\"execution time\": 5.8650970458984375e-05}",
            "{\"execution time\": 6.079673767089844e-05}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"[[8, 7, 6, 6]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[8, 7, 6, 6]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[8, 7, 6, 6]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[8, 7, 6, 6]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"10\"}",
            "{\"output\": \"4\", \"inputs\": \"[[8, 7, 6, 6]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +: 'range' and 'range'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"10\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[8, 7, 6, 6]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 1, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 1, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"14\", \"inputs\": \"[[10, 3, 1, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[10, 3, 1, 1]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"6\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"21\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"21\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"21\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.0013806819915771484}",
            "{\"output\": \"10\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['abcaba']\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: closing parenthesis ')' does not match opening parenthesis '[' (<string>, line 45)\"}",
            "{\"output\": \"1\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0009362697601318359}",
            "{\"output\": \"1\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"execution time\": 1.6927719116210938e-05}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"execution time\": 1.8596649169921875e-05}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"execution time\": 1.7642974853515625e-05}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}"
        ],
        [
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.4543533325195312e-05}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"True\", \"inputs\": \"[[3, 4, 2, 8, 16]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[8, 4, 2, 30, 15]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[8, 4, 2, 30, 15]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[8, 4, 2, 30, 15]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"True\", \"inputs\": \"[[3, 16, 8, 4, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[2, 3, 4, 8, 16]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[8, 4, 2, 30, 15]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"False\", \"inputs\": \"[[8, 4, 2, 30, 15]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"5\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 0, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 0, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 0, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 2, 1], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 2.8371810913085938e-05}",
            "{\"execution time\": 1.5974044799804688e-05}",
            "{\"output\": \"7\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\"}",
            "{\"output\": \"4\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[2, 1, 5, 1, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[2, 1, 5, 1, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 2, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 2, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 2, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 2, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 4, 1, 2, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 2, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 2, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[5, 5, 8, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 3, 2, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 3, 2, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"aabcbbca\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"ab\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"ab\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"aabcbbca\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"ab\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"aabcbbca\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"ab\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"ccbbbaaa\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"aabbba\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"aabcbbca\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.000484466552734375}",
            "{\"execution time\": 0.00040149688720703125}",
            "{\"execution time\": 0.00040531158447265625}",
            "{\"output\": \"2\", \"inputs\": \"[['e', 'gr', 'oi', 'y', 'yjxnk', 'bnpj', 'e', 'rr']]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[['a', 'aba', 'ababa', 'aa']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[['a', 'aba', 'ababa', 'aa']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0006153583526611328}",
            "{\"output\": \"0\", \"inputs\": \"[['a', 'aba', 'ababa', 'aa']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0005049705505371094}",
            "{\"output\": \"0\", \"inputs\": \"[['a', 'aba', 'ababa', 'aa']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 5.555152893066406e-05}",
            "{\"execution time\": 6.29425048828125e-05}",
            "{\"execution time\": 6.103515625e-05}",
            "{\"execution time\": 6.079673767089844e-05}",
            "{\"execution time\": 4.0531158447265625e-05}",
            "{\"execution time\": 4.124641418457031e-05}",
            "{\"execution time\": 4.124641418457031e-05}",
            "{\"execution time\": 4.124641418457031e-05}",
            "{\"execution time\": 3.9577484130859375e-05}",
            "{\"execution time\": 4.076957702636719e-05}"
        ],
        [
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['AaAaAaaA']\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[['abc', 'ab']]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}"
        ],
        [
            "{\"execution time\": 9.298324584960938e-05}",
            "{\"execution time\": 0.0001347064971923828}",
            "{\"execution time\": 7.963180541992188e-05}",
            "{\"execution time\": 0.00012755393981933594}",
            "{\"execution time\": 0.00012087821960449219}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 8.130073547363281e-05}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 8.559226989746094e-05}",
            "{\"execution time\": 0.000118255615234375}"
        ],
        [
            "{\"error\": \"AttributeError(\\\"'int' object has no attribute 'startswith'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\"}",
            "{\"output\": \"0\", \"inputs\": \"[[25, 26], [65, 22]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[98475448, 2521333, 95986349, 56040125, 63626663, 40624949, 1519155, 73159025, 5996763, 10202273, 93777362, 27942047, 52110445, 29790828, 73155683, 1...(truncated) ..., 928902, 38231140, 34471937, 98638494, 69868709, 67488078, 78034530, 80483577, 63829756, 56064102, 61792340, 10176428, 71393231, 17707721, 88780369]]\", \"expected\": \"8\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[98475448, 2521333, 95986349, 56040125, 63626663, 40624949, 1519155, 73159025, 5996763, 10202273, 93777362, 27942047, 52110445, 29790828, 73155683, 1...(truncated) ..., 928902, 38231140, 34471937, 98638494, 69868709, 67488078, 78034530, 80483577, 63829756, 56064102, 61792340, 10176428, 71393231, 17707721, 88780369]]\", \"expected\": \"8\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[98475448, 2521333, 95986349, 56040125, 63626663, 40624949, 1519155, 73159025, 5996763, 10202273, 93777362, 27942047, 52110445, 29790828, 73155683, 1...(truncated) ..., 928902, 38231140, 34471937, 98638494, 69868709, 67488078, 78034530, 80483577, 63829756, 56064102, 61792340, 10176428, 71393231, 17707721, 88780369]]\", \"expected\": \"8\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\"}"
        ],
        [
            "{\"execution time\": 2.956390380859375e-05}",
            "{\"execution time\": 2.9802322387695312e-05}",
            "{\"execution time\": 1.5735626220703125e-05}",
            "{\"execution time\": 1.7642974853515625e-05}",
            "{\"execution time\": 3.075599670410156e-05}",
            "{\"execution time\": 1.5974044799804688e-05}",
            "{\"execution time\": 1.8358230590820312e-05}",
            "{\"execution time\": 1.7642974853515625e-05}",
            "{\"execution time\": 2.956390380859375e-05}",
            "{\"execution time\": 8.940696716308594e-05}"
        ],
        [
            "{\"execution time\": 4.267692565917969e-05}",
            "{\"execution time\": 4.506111145019531e-05}",
            "{\"execution time\": 7.295608520507812e-05}",
            "{\"execution time\": 5.4836273193359375e-05}",
            "{\"execution time\": 6.723403930664062e-05}",
            "{\"execution time\": 3.9577484130859375e-05}",
            "{\"execution time\": 7.748603820800781e-05}",
            "{\"execution time\": 3.7670135498046875e-05}",
            "{\"execution time\": 4.124641418457031e-05}",
            "{\"execution time\": 5.555152893066406e-05}"
        ],
        [
            "{\"output\": \"A\\n\", \"inputs\": \"6\\nATTATA\\n\", \"expected\": \"T\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: A != T\"}",
            "{\"output\": \"T\\n\", \"inputs\": \"90\\nATTTTATATATTATTAATATATTAATTATTAAATTAAATTATTTATTAATAAAAATATTATTTTAATAAAAATTAAAAAAAATATTTTTT\\n\", \"expected\": \"A\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: T != A\"}",
            "{\"output\": \"A\\n\", \"inputs\": \"6\\nATTATA\\n\", \"expected\": \"T\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: A != T\"}",
            "{\"output\": \"A\\n\", \"inputs\": \"6\\nATTATA\\n\", \"expected\": \"T\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: A != T\"}",
            "{\"output\": \"A\\n\", \"inputs\": \"6\\nATTATA\\n\", \"expected\": \"T\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: A != T\"}",
            "{\"output\": \"T\\n\", \"inputs\": \"90\\nATTTTATATATTATTAATATATTAATTATTAAATTAAATTATTTATTAATAAAAATATTATTTTAATAAAAATTAAAAAAAATATTTTTT\\n\", \"expected\": \"A\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: T != A\"}",
            "{\"output\": \"A\\n\", \"inputs\": \"6\\nATTATA\\n\", \"expected\": \"T\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: A != T\"}",
            "{\"output\": \"T\\n\", \"inputs\": \"90\\nATTTTATATATTATTAATATATTAATTATTAAATTAAATTATTTATTAATAAAAATATTATTTTAATAAAAATTAAAAAAAATATTTTTT\\n\", \"expected\": \"A\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: T != A\"}",
            "{\"output\": \"T\\n\", \"inputs\": \"90\\nATTTTATATATTATTAATATATTAATTATTAAATTAAATTATTTATTAATAAAAATATTATTTTAATAAAAATTAAAAAAAATATTTTTT\\n\", \"expected\": \"A\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: T != A\"}",
            "{\"output\": \"A\\n\", \"inputs\": \"6\\nATTATA\\n\", \"expected\": \"T\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: A != T\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"output\": \"2 3 4 3 2 1 2\\n\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 3 4 3 2 1 2 != 2 3 4 5 4 3 2 1 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"output\": \"2 3 4 3 2 2\\n\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 3 4 3 2 2 != 2 3 4 5 4 3 2 1 2\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"@\\nb\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}",
            "{\"output\": \"\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != 1\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"?????????????????????????????????\\n646626281163009046\\n\", \"expected\": \"8589934591\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 2: '00?'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 2: '00?'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}"
        ],
        [
            "{\"output\": \"\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != 1\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}",
            "{\"error\": \"NameError(\\\"name 'H' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"1 3 2000000\\noGS\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"error\": \"TypeError(\\\"'>' not supported between instances of 'dict' and 'int'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'S.G'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"5 10 2000000\\nS.o..ooo..\\n..o..o.o..\\n..o..ooo..\\n..o..o.o..\\n..o..ooo.G\\n\", \"expected\": \"18\\n\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 676\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: Generator expression must be parenthesized (<string>, line 7)\"}",
            "{\"output\": \"35152\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 35152 != 676\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 676\"}",
            "{\"output\": \"53\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 53 != 676\"}",
            "{\"output\": \"2028\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2028 != 676\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 676\"}",
            "{\"output\": \"335590820\\n\", \"inputs\": \"????????????????????????????????????????\\n\", \"expected\": \"858572093\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 335590820 != 858572093\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 676\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 676\"}"
        ],
        [
            "{\"execution time\": 0.025086402893066406}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"123456789123456789 987654321\\n\", \"expected\": \"124999999\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"802035354240686040 925744958032207328\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"execution time\": 0.020648717880249023}",
            "{\"execution time\": 0.020359039306640625}",
            "{\"output\": \"0\\n\", \"inputs\": \"802035354240686040 925744958032207328\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"123456789123456789 987654321\\n\", \"expected\": \"124999999\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"123456789123456789 987654321\\n\", \"expected\": \"124999999\\n\"}",
            "{\"execution time\": 0.01735067367553711}",
            "{\"output\": \"0\\n\", \"inputs\": \"802035354240686040 925744958032207328\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}"
        ],
        [
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\"}",
            "{\"output\": \"\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\"}",
            "{\"output\": \"\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ],
        [
            "{\"output\": \"Yes\\n\", \"inputs\": \"2 5\\nabcde\\nabced\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"2 5\\nabcde\\nabced\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"2 5\\nabcde\\nabced\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"error\": \"NameError(\\\"name 'is_conforming' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000 1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48...(truncated) ...79 399980 399981 399982 399983 399984 399985 399986 399987 399988 399989 399990 399991 399992 399993 399994 399995 399996 399997 399998 399999 400000\\n\", \"expected\": \"400001\\n\"}",
            "{\"output\": \"18\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 18 != 8\"}",
            "{\"output\": \"25\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 25 != 8\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000 1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48...(truncated) ...79 399980 399981 399982 399983 399984 399985 399986 399987 399988 399989 399990 399991 399992 399993 399994 399995 399996 399997 399998 399999 400000\\n\", \"expected\": \"400001\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000 1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48...(truncated) ...79 399980 399981 399982 399983 399984 399985 399986 399987 399988 399989 399990 399991 399992 399993 399994 399995 399996 399997 399998 399999 400000\\n\", \"expected\": \"400001\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 8\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 8\"}",
            "{\"output\": \"25\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 25 != 8\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 8\"}",
            "{\"output\": \"25\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 25 != 8\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"KeyError(1)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"RuntimeError('Set changed size during iteration')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"IndexError('tuple index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 2\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"execution time\": 0.02775716781616211}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"24\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 24 != 2\"}",
            "{\"output\": \"24\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 24 != 2\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 2\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"4 2 3 1\\nRUDL\\n-1 -1\\n1 0\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 2 3 1\\nRUDL\\n-1 -1\\n1 0\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 2 3 1\\nRUDL\\n-1 -1\\n1 0\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'RUDL'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3 1\\nRUDL\\n-1 -1\\n1 0\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 2 3 1\\nRUDL\\n-1 -1\\n1 0\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 2 3 1\\nRUDL\\n-1 -1\\n1 0\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 2 3 1\\nRUDL\\n-1 -1\\n1 0\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 9\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 9\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 9\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"1 1 100\\naAaAaA\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 6\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 9\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 9\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 9\"}",
            "{\"output\": \"23\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 9\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'AAaA'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\"}"
        ],
        [
            "{\"output\": \"\\n\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != 2 2\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"error\": \"NameError(\\\"name 'N' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"output\": \"\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != 2 2\"}",
            "{\"output\": \"1 \", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2 2\"}",
            "{\"error\": \"NameError(\\\"name 'parent' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"output\": \"6 \\n\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 2 2\"}"
        ],
        [
            "{\"output\": \"carol\\nalice\\nbob\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: alice != dave\"}",
            "{\"output\": \"carol\\nalice\\nbob\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: alice != dave\"}",
            "{\"output\": \"alice\\nbob\\ncarol\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: alice != carol\"}",
            "{\"output\": \"carol\\nalice\\nbob\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: alice != dave\"}",
            "{\"output\": \"alice\\nbob\\ncarol\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: alice != carol\"}",
            "{\"output\": \"carol\\nalice\\nbob\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: alice != dave\"}",
            "{\"output\": \"carol\\nalice\\nbob\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: alice != dave\"}",
            "{\"output\": \"carol\\nalice\\nbob\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: alice != dave\"}",
            "{\"output\": \"alice\\nbob\\ncarol\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: alice != carol\"}",
            "{\"output\": \"carol\\nalice\\nbob\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: alice != dave\"}"
        ],
        [
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n2 -1\\n3 1\\n8 8\\n0 5\\n\", \"expected\": \"Yes\\nYes\\nNo\\nYes\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n2 -1\\n3 1\\n8 8\\n0 5\\n\", \"expected\": \"Yes\\nYes\\nNo\\nYes\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n2 -1\\n3 1\\n8 8\\n0 5\\n\", \"expected\": \"Yes\\nYes\\nNo\\nYes\\n\"}",
            "{\"output\": \"No\\nNo\\nNo\\n\", \"inputs\": \"3 1\\n0 0\\n-1000 -1000\\n1000 1000\\n\", \"expected\": \"Yes\\nNo\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n2 -1\\n3 1\\n8 8\\n0 5\\n\", \"expected\": \"Yes\\nYes\\nNo\\nYes\\n\"}",
            "{\"output\": \"No\\nNo\\nNo\\n\", \"inputs\": \"3 1\\n0 0\\n-1000 -1000\\n1000 1000\\n\", \"expected\": \"Yes\\nNo\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\nNo\\nNo\\n\", \"inputs\": \"3 1\\n0 0\\n-1000 -1000\\n1000 1000\\n\", \"expected\": \"Yes\\nNo\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n2 -1\\n3 1\\n8 8\\n0 5\\n\", \"expected\": \"Yes\\nYes\\nNo\\nYes\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n2 -1\\n3 1\\n8 8\\n0 5\\n\", \"expected\": \"Yes\\nYes\\nNo\\nYes\\n\"}",
            "{\"output\": \"Yes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"4 5\\n2 -1\\n3 1\\n8 8\\n0 5\\n\", \"expected\": \"Yes\\nYes\\nNo\\nYes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=2: Yes != No\"}"
        ],
        [
            "{\"output\": \"34 25\\n\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 34 25 != 0 2\"}",
            "{\"output\": \"5 5\\n\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 5 != 0 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\"}",
            "{\"output\": \"5 5\\n\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 5 != 0 2\"}",
            "{\"output\": \"3 3\\n\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 3 != 0 2\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\"}",
            "{\"output\": \"6 -3\\n\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 -3 != 0 2\"}",
            "{\"output\": \"34 25\\n\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 34 25 != 0 2\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\"}",
            "{\"output\": \"5 5\\n\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 5 != 0 2\"}"
        ],
        [
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"IndexError('pop from empty list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"output\": \"Yes\\nYes\\nYes\\n\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ],
        [
            "{\"output\": \"-32\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -32 != 55\"}",
            "{\"output\": \"58\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 58 != 55\"}",
            "{\"output\": \"58\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 58 != 55\"}",
            "{\"output\": \"58\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 58 != 55\"}",
            "{\"execution time\": 0.01996159553527832}",
            "{\"output\": \"55\\n\", \"inputs\": \"21\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 55 != 20\"}",
            "{\"output\": \"50\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 50 != 55\"}",
            "{\"output\": \"58\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 58 != 55\"}",
            "{\"output\": \"58\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 58 != 55\"}",
            "{\"output\": \"55\\n\", \"inputs\": \"21\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 55 != 20\"}"
        ],
        [
            "{\"output\": \"7\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"\", \"inputs\": \"G B\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != 20\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 4\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 4\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 4\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"G B\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 20\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}"
        ],
        [
            "{\"output\": \"No cookie found\\n\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No cookie found != 2 4\"}",
            "{\"output\": \"No cookie found\\n\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No cookie found != 2 4\"}",
            "{\"output\": \"No cookie found\\n\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No cookie found != 2 4\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '......'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}",
            "{\"output\": \"1 2\\n\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 != 2 4\"}",
            "{\"output\": \"No cookie found\\n\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No cookie found != 2 4\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}",
            "{\"output\": \"1 2\\n\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 != 2 4\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}",
            "{\"output\": \"No cookie found\\n\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No cookie found != 2 4\"}"
        ],
        [
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"output\": \"240\\n0\\n0\\n\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 240 != 480\"}",
            "{\"output\": \"0\\n0\\n0\\n\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 480\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}"
        ],
        [
            "{\"output\": \"3\\n1 3 4\\n\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"output\": \"2\\n2 5\\n\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"error\": \"ValueError('min() iterable argument is empty')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"output\": \"1\\n1\\n\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"1\\n1\\n\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"output\": \"1\\n1\\n\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}"
        ],
        [
            "{\"output\": \"beginnerbeginner\\n\", \"inputs\": \"8\\nbeginner\\n\", \"expected\": \"bbeeggiinnnneerr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: beginnerbeginner != bbeeggiinnnneerr\"}",
            "{\"output\": \"bbeeggiinnnneerrrrrrrrrr\\n\", \"inputs\": \"8\\nbeginner\\n\", \"expected\": \"bbeeggiinnnneerr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: bbeeggiinnnneerrrrrrrrrr != bbeeggiinnnneerr\"}",
            "{\"execution time\": 0.013361930847167969}",
            "{\"execution time\": 0.015168190002441406}",
            "{\"output\": \"bbeeggiinnnneerrrrrrrrrr\\n\", \"inputs\": \"8\\nbeginner\\n\", \"expected\": \"bbeeggiinnnneerr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: bbeeggiinnnneerrrrrrrrrr != bbeeggiinnnneerr\"}",
            "{\"output\": \"beginnerbeginner\\n\", \"inputs\": \"8\\nbeginner\\n\", \"expected\": \"bbeeggiinnnneerr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: beginnerbeginner != bbeeggiinnnneerr\"}",
            "{\"output\": \"bbeeggiinnnneerrrrrrrrrr\\n\", \"inputs\": \"8\\nbeginner\\n\", \"expected\": \"bbeeggiinnnneerr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: bbeeggiinnnneerrrrrrrrrr != bbeeggiinnnneerr\"}",
            "{\"output\": \"beginnerbeginner\\n\", \"inputs\": \"8\\nbeginner\\n\", \"expected\": \"bbeeggiinnnneerr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: beginnerbeginner != bbeeggiinnnneerr\"}",
            "{\"output\": \"beginnerrennigeb\\n\", \"inputs\": \"8\\nbeginner\\n\", \"expected\": \"bbeeggiinnnneerr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: beginnerrennigeb != bbeeggiinnnneerr\"}",
            "{\"output\": \"beginnerrennigeb\\n\", \"inputs\": \"8\\nbeginner\\n\", \"expected\": \"bbeeggiinnnneerr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: beginnerrennigeb != bbeeggiinnnneerr\"}"
        ],
        [
            "{\"execution time\": 0.01721930503845215}",
            "{\"execution time\": 0.01657843589782715}",
            "{\"execution time\": 0.01928257942199707}",
            "{\"execution time\": 0.020464181900024414}",
            "{\"execution time\": 0.021814346313476562}",
            "{\"execution time\": 0.0254209041595459}",
            "{\"execution time\": 0.01917576789855957}",
            "{\"execution time\": 0.024518728256225586}",
            "{\"execution time\": 0.016869544982910156}",
            "{\"execution time\": 0.016190052032470703}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"1\\n1 1 1\\n\", \"expected\": \"1\\n\"}",
            "{\"output\": \"3 2 1 \", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 2 1 != 1 3 2\"}",
            "{\"output\": \"1 4 5 \", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 4 5 != 1 3 2\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"22347\\n14677 20235 1294 351 7862 12338 8283 3984 11310 8379 16838 4744 845 20829 20887 3475 2232 6034 11947 9772 2062 19021 3153 12071 18960 313 11187 ...(truncated) ...83 7090 14046 18922 265 6270 15480 15228 12337 3476 11330 939 1433 5193 16612 16572 2660 20506 11343 21443 3500 5106 11142 5801 20802 6324 9567 10753\\n\", \"expected\": \"3645 1294 18897 13193 9201 2062 9877 16838 11997 19997 2320 13075 9078 16548 1025 6947 19217 15100 10025 9066 6119 16230 2439 4597 4821 3983 4487 1170...(truncated) ...9 19561 19008 4831 21500 11237 21682 3058 6822 6031 7393 8774 3133 21227 11220 11949 16810 2007 3291 16736 15994 9567 19457 7000 17838 7005 19736 986\\n\"}",
            "{\"output\": \"1 2 3\\n\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 3 != 1 3 2\"}",
            "{\"output\": \"1 4 5\\n\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 4 5 != 1 3 2\"}",
            "{\"output\": \"1 4 5\\n\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 4 5 != 1 3 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\"}",
            "{\"output\": \"1 2 3\\n\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 3 != 1 3 2\"}",
            "{\"output\": \"1 2 3 \\n\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 3 != 1 3 2\"}"
        ],
        [
            "{\"output\": \"-200\\n\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -200 != 600\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 600\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}"
        ],
        [
            "{\"execution time\": 0.01279592514038086}",
            "{\"execution time\": 0.021420717239379883}",
            "{\"execution time\": 0.010927677154541016}",
            "{\"execution time\": 0.01646566390991211}",
            "{\"execution time\": 0.011464595794677734}",
            "{\"output\": \"3000 0\\n\", \"inputs\": \"2\\n1000 2000 3000 4000 5000 6000 7000 2000 3000 4000 5000 6000 7000 8000\\n\", \"expected\": \"28000 35000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3000 0 != 28000 35000\"}",
            "{\"output\": \"28000\\n35000\\n\", \"inputs\": \"2\\n1000 2000 3000 4000 5000 6000 7000 2000 3000 4000 5000 6000 7000 8000\\n\", \"expected\": \"28000 35000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"execution time\": 0.012688636779785156}",
            "{\"output\": \"3000 7000 11000 9000 7000 11000 15000 \", \"inputs\": \"2\\n1000 2000 3000 4000 5000 6000 7000 2000 3000 4000 5000 6000 7000 8000\\n\", \"expected\": \"28000 35000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3000 7000 11000 9000 7000 11000 15000 != 28000 35000\"}",
            "{\"output\": \"28000\\n35000\\n\", \"inputs\": \"2\\n1000 2000 3000 4000 5000 6000 7000 2000 3000 4000 5000 6000 7000 8000\\n\", \"expected\": \"28000 35000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"output\": \"\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != Yes\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"TypeError('list indices must be integers or slices, not tuple')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != Yes\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}"
        ],
        [
            "{\"output\": \"553022794\\n\", \"inputs\": \"987654 456789\\n\", \"expected\": \"778634319\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 553022794 != 778634319\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 6\"}",
            "{\"output\": \"27\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 27 != 6\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 6\"}",
            "{\"output\": \"27\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 27 != 6\"}",
            "{\"output\": \"27\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 27 != 6\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 6\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 6\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 6\"}"
        ],
        [
            "{\"output\": \"Yes\\n\", \"inputs\": \"0 23 24 145 301 413 631 632\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"0 23 24 145 301 413 631 632\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"execution time\": 0.019649267196655273}",
            "{\"execution time\": 0.02552056312561035}",
            "{\"execution time\": 0.020669221878051758}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"0 23 24 145 301 413 631 632\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"execution time\": 0.0159299373626709}",
            "{\"execution time\": 0.02227926254272461}",
            "{\"execution time\": 0.01784229278564453}",
            "{\"execution time\": 0.020267963409423828}"
        ],
        [
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}"
        ],
        [
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}",
            "{\"output\": \"2 1 \", \"inputs\": \"2\\n1 3\\n2 6\\n\", \"expected\": \"1 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 != 1 2\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 3, got 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}"
        ],
        [
            "{\"output\": \"2\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"10 5\\n9 7 1 5 2 2 5 5 7 6\\n7 2 7 8 2\\n3 2 4 1 2\\n\", \"expected\": \"37\\n\"}"
        ],
        [
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}"
        ],
        [
            "{\"output\": \"\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != 3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 100\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"1\\n\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}"
        ],
        [
            "{\"output\": \"4\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 5\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 5\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 5\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 5\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 5\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 5\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 5\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 5\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 5\"}"
        ],
        [
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"IndexError('tuple index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"RuntimeError('Set changed size during iteration')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}"
        ],
        [
            "{\"execution time\": 0.015327215194702148}",
            "{\"execution time\": 0.021896839141845703}",
            "{\"execution time\": 0.023389816284179688}",
            "{\"output\": \"100\\n\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100 != 70\"}",
            "{\"output\": \"120\\n\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 120 != 70\"}",
            "{\"output\": \"100\\n\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100 != 70\"}",
            "{\"error\": \"ValueError('min() iterable argument is empty')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\"}",
            "{\"execution time\": 0.020724773406982422}",
            "{\"execution time\": 0.026995182037353516}",
            "{\"output\": \"100\\n\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100 != 70\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '10000 2 1 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '10000 2 1 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"output\": \"4\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"54751\\nqfub\\ndmta\\nmfja\\navx\\ngat\\nmpub\\nxqsb\\nodnb\\nmmzb\\ntfk\\nkyub\\nuuvb\\nmxgb\\ntsxa\\nfzva\\nbfba\\nqay\\ndpb\\numj\\njqeb\\nslfb\\nxmna\\ndima\\nred\\nurn\\nitca\\nroy\\nkhba\\neqkb\\nkvs\\nixia...(truncated) ...xda\\nhidb\\npsl\\ndepb\\nugbb\\nklk\\nfgda\\nqtnb\\nexl\\nnhub\\nrnma\\nqwga\\nfzlb\\nzgm\\nyrta\\ntqaa\\netq\\ntncb\\ntx\\nzmvb\\nxsvb\\nqxha\\nhkmb\\nkcxb\\nnup\\nlhga\\nrnoa\\nrog\\nclac\\nxwla\\nnuac\\nadwb\\n\", \"expected\": \"44547\\n\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}"
        ],
        [
            "{\"output\": \"5\\n\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 4\"}",
            "{\"error\": \"IndexError('tuple index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"IndexError('tuple index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"error\": \"TypeError(\\\"'set' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 942786334\"}",
            "{\"output\": \"45\\n\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 45 != 942786334\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 942786334\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 942786334\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\"}"
        ],
        [
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}"
        ],
        [
            "{\"output\": \"4\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 2\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 2\"}"
        ],
        [
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"output\": \"0\\n\\n\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"output\": \"1\\n2\\n\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"output\": \"0\\n\\n\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"output\": \"1\\n2\\n\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"output\": \"1\\n2\\n\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}"
        ],
        [
            "{\"output\": \"1\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 12\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\"}",
            "{\"output\": \"1000\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1000 != 12\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 12\"}",
            "{\"output\": \"14\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 14 != 12\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\"}",
            "{\"output\": \"28\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 28 != 12\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 12\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +: 'set' and 'set'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3000 3000 0\\n\", \"expected\": \"9004500500\\n\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 6\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 6\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 6\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 6\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3000 3000 0\\n\", \"expected\": \"9004500500\\n\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 6\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 6\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 6\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"EGB\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"execution time\": 0.01815342903137207}",
            "{\"execution time\": 0.025373458862304688}",
            "{\"execution time\": 0.024470090866088867}",
            "{\"execution time\": 0.016950130462646484}",
            "{\"execution time\": 0.017032146453857422}",
            "{\"execution time\": 0.016318082809448242}",
            "{\"execution time\": 0.0256497859954834}",
            "{\"execution time\": 0.020493745803833008}",
            "{\"execution time\": 0.02040243148803711}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"NameError(\\\"name 'top_right' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\"}"
        ],
        [
            "{\"output\": \"10120\\n\", \"inputs\": \"3 4\\n110 90 120\\n100 80 120 10000\\n\", \"expected\": \"110\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10120 != 110\"}",
            "{\"output\": \"10120\\n\", \"inputs\": \"3 4\\n110 90 120\\n100 80 120 10000\\n\", \"expected\": \"110\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10120 != 110\"}",
            "{\"output\": \"1000000000\\n\", \"inputs\": \"3 4\\n110 90 120\\n100 80 120 10000\\n\", \"expected\": \"110\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1000000000 != 110\"}",
            "{\"output\": \"10120\\n\", \"inputs\": \"3 4\\n110 90 120\\n100 80 120 10000\\n\", \"expected\": \"110\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10120 != 110\"}",
            "{\"output\": \"10120\\n\", \"inputs\": \"3 4\\n110 90 120\\n100 80 120 10000\\n\", \"expected\": \"110\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10120 != 110\"}",
            "{\"output\": \"10120\\n\", \"inputs\": \"3 4\\n110 90 120\\n100 80 120 10000\\n\", \"expected\": \"110\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10120 != 110\"}",
            "{\"output\": \"1000000000000000000\\n\", \"inputs\": \"3 4\\n110 90 120\\n100 80 120 10000\\n\", \"expected\": \"110\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1000000000000000000 != 110\"}",
            "{\"output\": \"1000000000\\n\", \"inputs\": \"3 4\\n110 90 120\\n100 80 120 10000\\n\", \"expected\": \"110\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1000000000 != 110\"}",
            "{\"output\": \"1000000000\\n\", \"inputs\": \"3 4\\n110 90 120\\n100 80 120 10000\\n\", \"expected\": \"110\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1000000000 != 110\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"1 1\\n1000000000\\n1000000000\\n\", \"expected\": \"1000000000\\n\"}"
        ],
        [
            "{\"output\": \"1\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"24\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 24 != 2\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 2\"}",
            "{\"output\": \"64\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 64 != 2\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"16\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 16 != 2\"}"
        ],
        [
            "{\"output\": \"0\\n0\\n0\\n0\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"-4\\n0\\n0\\n-4\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -4 != 1\"}",
            "{\"error\": \"NameError(\\\"name 'x2' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"1\\n0\\n1\\n0\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 0 != 1\"}",
            "{\"output\": \"1\\n0\\n1\\n0\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 0 != 1\"}",
            "{\"error\": \"IndexError('tuple index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\"}",
            "{\"error\": \"NameError(\\\"name 'N' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}"
        ],
        [
            "{\"output\": \"20\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 27\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 27\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 27\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 27\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 27\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 27\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 27\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 27\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 27\"}"
        ],
        [
            "{\"output\": \"10\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 11\"}",
            "{\"output\": \"-3\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -3 != 11\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 11\"}",
            "{\"output\": \"14\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 14 != 11\"}",
            "{\"output\": \"14\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 14 != 11\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 11\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 11\"}",
            "{\"output\": \"14\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 14 != 11\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 11\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 11\"}"
        ],
        [
            "{\"output\": \"3\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"None\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: None != 1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}"
        ],
        [
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"4\\n4 7 3 7\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 3\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"4\\n4 7 3 7\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 3\"}"
        ],
        [
            "{\"output\": \"3.1\\n\", \"inputs\": \"2\\n\", \"expected\": \"3.14\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.1 != 3.14\"}",
            "{\"output\": \"3.14159265358979311599796346854419\\n\", \"inputs\": \"32\\n\", \"expected\": \"3.14159265358979323846264338327950\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.14159265358979311599796346854419 != 3.14159265358979323846264338327950\"}",
            "{\"output\": \"3.14159265358979311599796346854419\\n\", \"inputs\": \"32\\n\", \"expected\": \"3.14159265358979323846264338327950\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.14159265358979311599796346854419 != 3.14159265358979323846264338327950\"}",
            "{\"output\": \"3.14159265358979311599796346854419\\n\", \"inputs\": \"32\\n\", \"expected\": \"3.14159265358979323846264338327950\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.14159265358979311599796346854419 != 3.14159265358979323846264338327950\"}",
            "{\"output\": \"3.141592653589793\\n\", \"inputs\": \"32\\n\", \"expected\": \"3.14159265358979323846264338327950\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.141592653589793 != 3.14159265358979323846264338327950\"}",
            "{\"output\": \"3.14159265358979311599796346854419\\n\", \"inputs\": \"32\\n\", \"expected\": \"3.14159265358979323846264338327950\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.14159265358979311599796346854419 != 3.14159265358979323846264338327950\"}",
            "{\"output\": \"3.1\\n\", \"inputs\": \"2\\n\", \"expected\": \"3.14\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.1 != 3.14\"}",
            "{\"output\": \"3.14159265358979311599796346854419\\n\", \"inputs\": \"32\\n\", \"expected\": \"3.14159265358979323846264338327950\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.14159265358979311599796346854419 != 3.14159265358979323846264338327950\"}",
            "{\"output\": \"3.141592653589793\\n\", \"inputs\": \"32\\n\", \"expected\": \"3.14159265358979323846264338327950\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.141592653589793 != 3.14159265358979323846264338327950\"}",
            "{\"output\": \"3.14159265358979311599796346854419\\n\", \"inputs\": \"32\\n\", \"expected\": \"3.14159265358979323846264338327950\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.14159265358979311599796346854419 != 3.14159265358979323846264338327950\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '7 19 20'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '26 10'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\"}",
            "{\"output\": \"0\\n\\n\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '7 19 20'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"TypeError(\\\"'in <string>' requires string as left operand, not int\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\"}"
        ],
        [
            "{\"output\": \"rcsapzbq\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: rcsapzbq != cszapqbr\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\"}",
            "{\"output\": \"pbqarczs\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: pbqarczs != cszapqbr\"}",
            "{\"output\": \"apzbqrcs\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: apzbqrcs != cszapqbr\"}",
            "{\"output\": \"rcsapzbq\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: rcsapzbq != cszapqbr\"}",
            "{\"output\": \"rcsapzbq\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: rcsapzbq != cszapqbr\"}",
            "{\"output\": \"apzbqrcs\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: apzbqrcs != cszapqbr\"}",
            "{\"output\": \"qrcsapzb\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: qrcsapzb != cszapqbr\"}",
            "{\"output\": \"rcsapzbq\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: rcsapzbq != cszapqbr\"}",
            "{\"output\": \"bqrcsapz\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: bqrcsapz != cszapqbr\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"output\": \"atcoYbr\\n\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: atcoYbr != atcYber\"}",
            "{\"error\": \"NameError(\\\"name 'i' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"247320\\nTurGGYOnTuwBtmOZOrbqNYHjMJiiwowXHLgDDTYeCGKWcXsHSuBJhGsFEKykQvaVEIOGxmcCVIKaIDFWRXOETUkxRRawSKKdwiYKSXaqoJWqgCecHSJbdVeHOAleHBgwegkBenmtKEDGrzq...(truncated) ...2 0 a\\n2 0 a\\n2 0 a\\n3 0 a\\n2 0 a\\n3 0 a\\n2 0 a\\n3 0 a\\n3 0 a\\n2 0 a\\n2 0 a\\n2 0 a\\n2 0 a\\n2 0 a\\n2 0 a\\n2 0 a\\n2 0 a\\n2 0 a\\n2 0 a\\n2 0 a\\n2 0 a\\n2 0 a\\n3 0 a\\n2 0 a\\n2 0 a\\n\", \"expected\": \"turggyontuhbemozorxqnyhjmjiiwowxhygdatyecgkwcxshskbjhgsfekyeqvaveiogxmccuikasdfwrxoetukxrxawskkwwiyksxaqojwqgcechsjvivehoalehbgwegkbenmtkedirzqaigoeoz...(truncated) ...tmjzhijycxutkplizizkcrmyjxqikznhzxcnkstrnpzmjfmbydfjtanvolqshfgihufhivwiehoklkljbpocvzgtexswqplkqaydcbwrswgcfijupsdksgfprgbkriiuchobgqnintwtjtwxjnklh\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"output\": \"atcoYbr\\n\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: atcoYbr != atcYber\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"TypeError(\\\"wrapped_function.<locals>.expected_money() missing 3 required positional arguments: 'C', 'P', and 'S'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '100 2 5 9'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_wins' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"output\": \"2.7619047619047614 1.4444444444444444 2.3220663265306123 2.695238095238095 1.2704081632653061 \\n\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2.7619047619047614 1.4444444444444444 2.3220663265306123 2.695238095238095 1.2704081632653061 != 698771048 698771048 964969543 964969543 133099248\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_wins' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_wins' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_wins' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_wins' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_wins' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_wins' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_wins' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}"
        ],
        [
            "{\"execution time\": 0.02145671844482422}",
            "{\"execution time\": 0.018981456756591797}",
            "{\"execution time\": 0.017519474029541016}",
            "{\"execution time\": 0.013914108276367188}",
            "{\"execution time\": 0.02066659927368164}",
            "{\"execution time\": 0.014267683029174805}",
            "{\"execution time\": 0.016236305236816406}",
            "{\"execution time\": 0.01632070541381836}",
            "{\"execution time\": 0.017050504684448242}",
            "{\"execution time\": 0.016344785690307617}"
        ],
        [
            "{\"output\": \"183\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 183 != 7 2\"}",
            "{\"output\": \"1 0\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 0 != 7 2\"}",
            "{\"output\": \"1 1\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 1 != 7 2\"}",
            "{\"output\": \"None\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: None != 7 2\"}",
            "{\"output\": \"1 183\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 183 != 7 2\"}",
            "{\"output\": \"No solution found\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No solution found != 7 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\"}",
            "{\"output\": \"7 -28\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 -28 != 7 2\"}",
            "{\"output\": \"None\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: None != 7 2\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}"
        ],
        [
            "{\"output\": \"6\\n\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}"
        ],
        [
            "{\"output\": \"2.0\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2.0 != 5.82842712474619009753\"}",
            "{\"output\": \"3.82842712474619\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.82842712474619 != 5.82842712474619009753\"}",
            "{\"output\": \"inf\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: inf != 5.82842712474619009753\"}",
            "{\"output\": \"3.82842712474619\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.82842712474619 != 5.82842712474619009753\"}",
            "{\"output\": \"6.478708664619075\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6.478708664619075 != 5.82842712474619009753\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after 'if' statement on line 26 (<string>, line 27)\"}",
            "{\"output\": \"4.82842712474619\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4.82842712474619 != 5.82842712474619009753\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"inf\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: inf != 5.82842712474619009753\"}",
            "{\"output\": \"6.478708664619075\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6.478708664619075 != 5.82842712474619009753\"}"
        ],
        [
            "{\"execution time\": 0.05230998992919922}",
            "{\"output\": \"2\\n\", \"inputs\": \"13 3 5\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"execution time\": 0.038252830505371094}",
            "{\"execution time\": 0.0315251350402832}",
            "{\"execution time\": 0.053728342056274414}",
            "{\"execution time\": 0.052156686782836914}",
            "{\"execution time\": 0.04868006706237793}",
            "{\"execution time\": 0.04462575912475586}",
            "{\"output\": \"2\\n\", \"inputs\": \"13 3 5\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"execution time\": 0.05161428451538086}"
        ],
        [
            "{\"output\": \"31\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 31 != 20\"}",
            "{\"error\": \"IndexError('tuple index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\"}",
            "{\"output\": \"31\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 31 != 20\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 20\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 20\"}",
            "{\"output\": \"25\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 25 != 20\"}",
            "{\"output\": \"31\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 31 != 20\"}",
            "{\"output\": \"31\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 31 != 20\"}",
            "{\"output\": \"31\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 31 != 20\"}"
        ],
        [
            "{\"output\": \"23\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 20\"}",
            "{\"output\": \"23\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 20\"}",
            "{\"output\": \"23\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 20\"}",
            "{\"output\": \"23\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 20\"}",
            "{\"output\": \"53\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 53 != 20\"}",
            "{\"output\": \"23\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 20\"}",
            "{\"output\": \"23\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 20\"}",
            "{\"output\": \"23\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 20\"}",
            "{\"output\": \"23\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 20\"}",
            "{\"output\": \"23\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 20\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +: 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}"
        ],
        [
            "{\"output\": \"1111111111111\\n\", \"inputs\": \"12\\n\", \"expected\": \"1-643-2-346-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1111111111111 != 1-643-2-346-1\"}",
            "{\"error\": \"ZeroDivisionError('integer modulo by zero')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n\", \"expected\": \"1-643-2-346-1\\n\"}",
            "{\"execution time\": 0.017233848571777344}",
            "{\"output\": \"1------------\\n\", \"inputs\": \"12\\n\", \"expected\": \"1-643-2-346-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1------------ != 1-643-2-346-1\"}",
            "{\"execution time\": 0.027612924575805664}",
            "{\"output\": \"1111111111111\\n\", \"inputs\": \"12\\n\", \"expected\": \"1-643-2-346-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1111111111111 != 1-643-2-346-1\"}",
            "{\"output\": \"1-1643-12-1346-11\\n\", \"inputs\": \"12\\n\", \"expected\": \"1-643-2-346-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1-1643-12-1346-11 != 1-643-2-346-1\"}",
            "{\"execution time\": 0.028412818908691406}",
            "{\"output\": \"1-----------11-----1-----11---1---1---11--1--1--1--11-1-1-1-1-1-11-1-1-1-1-1-1111111111111111111111111111111111111111\\n\", \"inputs\": \"12\\n\", \"expected\": \"1-643-2-346-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1-----------11-----1-----11---1---1---11--1--1--1--11-1-1-1-1-1-11-1-1-1-1-1-1111111111111111111111111111111111111111 != 1-643-2-346-1\"}",
            "{\"output\": \"1 1 1 1 1 1 1 1 1 1 1 1 1\\n\", \"inputs\": \"12\\n\", \"expected\": \"1-643-2-346-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 1 1 1 1 1 1 1 1 1 1 1 1 != 1-643-2-346-1\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 0.666666666666666666666666666667\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\"}",
            "{\"output\": \"0.0\\n\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0.0 != 0.666666666666666666666666666667\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\"}",
            "{\"output\": \"18.43621399176955\\n\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 18.43621399176955 != 0.666666666666666666666666666667\"}",
            "{\"output\": \"0.025605852766346592\\n\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0.025605852766346592 != 0.666666666666666666666666666667\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\"}"
        ],
        [
            "{\"output\": \"57\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 57 != 26\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"200000 200000\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...(truncated) ...1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 26\"}",
            "{\"output\": \"49\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 49 != 26\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 26\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 26\"}",
            "{\"output\": \"27\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 27 != 26\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 26\"}",
            "{\"output\": \"57\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 57 != 26\"}",
            "{\"output\": \"57\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 57 != 26\"}"
        ],
        [
            "{\"output\": \"\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"16\\n0\\n710511032\\n136397530\\n763027382\\n644706931\\n447672244\\n\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 16 != 34\"}",
            "{\"output\": \"15\\n1\\n710511030\\n136397528\\n763027380\\n644706928\\n447672231\\n\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 34\"}",
            "{\"output\": \"\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"output\": \"\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"output\": \"\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ],
        [
            "{\"execution time\": 0.016824007034301758}",
            "{\"execution time\": 0.010519742965698242}",
            "{\"execution time\": 0.010513067245483398}",
            "{\"execution time\": 0.015999555587768555}",
            "{\"execution time\": 0.011659622192382812}",
            "{\"execution time\": 0.015231847763061523}",
            "{\"execution time\": 0.013496160507202148}",
            "{\"execution time\": 0.011651754379272461}",
            "{\"execution time\": 0.014541149139404297}",
            "{\"execution time\": 0.013053417205810547}"
        ],
        [
            "{\"output\": \"TOYOT\\n\", \"inputs\": \"TOYOTA\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: TOYOT != 5\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"TOYOTA\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 5\"}",
            "{\"output\": \"9\\n\", \"inputs\": \"AAAAAAAAAA\\n\", \"expected\": \"10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 10\"}",
            "{\"output\": \"35\\n\", \"inputs\": \"YJDXXCCJTGQFBFJJMUEDBHPSYSPHBDEUMJJFBFQVRTRSRFZYZGXRCCNV\\n\", \"expected\": \"29\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 35 != 29\"}",
            "{\"output\": \"35\\n\", \"inputs\": \"YJDXXCCJTGQFBFJJMUEDBHPSYSPHBDEUMJJFBFQVRTRSRFZYZGXRCCNV\\n\", \"expected\": \"29\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 35 != 29\"}",
            "{\"output\": \"35\\n\", \"inputs\": \"YJDXXCCJTGQFBFJJMUEDBHPSYSPHBDEUMJJFBFQVRTRSRFZYZGXRCCNV\\n\", \"expected\": \"29\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 35 != 29\"}",
            "{\"output\": \"35\\n\", \"inputs\": \"YJDXXCCJTGQFBFJJMUEDBHPSYSPHBDEUMJJFBFQVRTRSRFZYZGXRCCNV\\n\", \"expected\": \"29\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 35 != 29\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"TOYOTA\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 5\"}",
            "{\"output\": \"35\\n\", \"inputs\": \"YJDXXCCJTGQFBFJJMUEDBHPSYSPHBDEUMJJFBFQVRTRSRFZYZGXRCCNV\\n\", \"expected\": \"29\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 35 != 29\"}",
            "{\"output\": \"35\\n\", \"inputs\": \"YJDXXCCJTGQFBFJJMUEDBHPSYSPHBDEUMJJFBFQVRTRSRFZYZGXRCCNV\\n\", \"expected\": \"29\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 35 != 29\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 6\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}"
        ],
        [
            "{\"output\": \"undecidable\\nundecidable\\nundecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: undecidable != 0 0\"}",
            "{\"output\": \"undecidable\\nundecidable\\nundecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: undecidable != 0 0\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 4, got 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\"}",
            "{\"output\": \"undecidable\\n2 1\\nundecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: undecidable != 0 0\"}",
            "{\"output\": \"undecidable\\nundecidable\\nundecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: undecidable != 0 0\"}",
            "{\"output\": \"undecidable\\nundecidable\\nundecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: undecidable != 0 0\"}",
            "{\"output\": \"undecidable\\nundecidable\\nundecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: undecidable != 0 0\"}",
            "{\"output\": \"undecidable\\nundecidable\\nundecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: undecidable != 0 0\"}",
            "{\"output\": \"undecidable\\nundecidable\\nundecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: undecidable != 0 0\"}",
            "{\"output\": \"undecidable\\nundecidable\\nundecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: undecidable != 0 0\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\"}",
            "{\"output\": \"11230\\n10230\\n10230\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11230 != 101\"}",
            "{\"output\": \"1\\n11\\n11\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 101\"}",
            "{\"output\": \"-10799\\n-10799\\n-10799\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -10799 != 101\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\"}",
            "{\"output\": \"11230\\n10230\\n10230\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11230 != 101\"}",
            "{\"output\": \"0\\n0\\n0\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 101\"}",
            "{\"output\": \"2000011215\\n2000011214\\n2000011214\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2000011215 != 101\"}",
            "{\"output\": \"-9794\\n-9794\\n-9794\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -9794 != 101\"}"
        ],
        [
            "{\"execution time\": 0.025174856185913086}",
            "{\"execution time\": 0.021054506301879883}",
            "{\"execution time\": 0.018912076950073242}",
            "{\"execution time\": 0.021053075790405273}",
            "{\"execution time\": 0.017059803009033203}",
            "{\"execution time\": 0.020757198333740234}",
            "{\"execution time\": 0.023962974548339844}",
            "{\"execution time\": 0.022049427032470703}",
            "{\"execution time\": 0.022351980209350586}",
            "{\"execution time\": 0.018794536590576172}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 70\"}",
            "{\"output\": \"190\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 190 != 70\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 70\"}",
            "{\"output\": \"190\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 190 != 70\"}",
            "{\"output\": \"100\\n\", \"inputs\": \"3 100\\n100 100\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100 != 0\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 70\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 70\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 70\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 70\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\"}"
        ],
        [
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"967\\n\", \"expected\": \"76543210\\n\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}"
        ],
        [
            "{\"output\": \"1\\n8\\n9\\n17\\n26\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 8 != 3\"}",
            "{\"output\": \"11\\n1\\n0\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 1\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"8\\n1\\n0\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 1\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"10\\n822981260158260522 52 20\\n760713016476190629 2314654 57\\n1312150450968417 1132551176249851 7\\n1000000000000000000 1083770654 79\\n234122432773361868 170...(truncated) ...91890310 61862 14\\n594688604155374934 53288633578 39\\n1000000000000000000 120160810 78\\n89013034180999835 14853481725739 94\\n463213054346948152 825589 73\\n\", \"expected\": \"1556480\\n140703128616960\\n8\\n17732923532771328\\n65536\\n24576\\n2147483640\\n33776997205278720\\n7881299347898368\\n27021597764222976\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1556480\"}",
            "{\"output\": \"1\\n1\\n1\\n1\\n1\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 3\"}",
            "{\"output\": \"1\\n1\\n0\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\"}",
            "{\"output\": \"1\\n2\\n4\\n3\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 3\"}",
            "{\"output\": \"1\\n10\\n9\\n8\\n7\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 10 != 3\"}"
        ],
        [
            "{\"output\": \"2\\n\", \"inputs\": \"8\\nABABCABC\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"8\\nABABCABC\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"8\\nABABCABC\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"execution time\": 0.020056486129760742}",
            "{\"output\": \"2\\n\", \"inputs\": \"8\\nABABCABC\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"8\\nABABCABC\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"8\\nABABCABC\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 3\"}",
            "{\"execution time\": 0.01587963104248047}",
            "{\"output\": \"2\\n\", \"inputs\": \"8\\nABABCABC\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"8\\nABABCABC\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}"
        ],
        [
            "{\"execution time\": 0.026608943939208984}",
            "{\"execution time\": 0.018594741821289062}",
            "{\"execution time\": 0.021246910095214844}",
            "{\"execution time\": 0.02435922622680664}",
            "{\"execution time\": 0.023715972900390625}",
            "{\"execution time\": 0.021601200103759766}",
            "{\"execution time\": 0.019804000854492188}",
            "{\"execution time\": 0.02386021614074707}",
            "{\"execution time\": 0.020056724548339844}",
            "{\"execution time\": 0.024341821670532227}"
        ],
        [
            "{\"output\": \"0\\n0\\n1\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"0\\n0\\n1\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"0\\n0\\n-1\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"0\\n0\\n1\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"0\\n0\\n1\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"0\\n0\\n1\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"0\\n0\\n1\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\"}",
            "{\"output\": \"0\\n1\\n2\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"0\\n1\\n2\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}"
        ],
        [
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != Yes\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"##..\\n#..#\\n####\\n....\\n....\\n##..\\n.##.\\n....\\n.#..\\n.#..\\n.#..\\n.#..\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 9\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"execution time\": 0.025719642639160156}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"execution time\": 0.020930051803588867}",
            "{\"execution time\": 0.02094578742980957}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"execution time\": 0.030545949935913086}",
            "{\"execution time\": 0.025927066802978516}",
            "{\"execution time\": 0.02589702606201172}",
            "{\"output\": \"7 6 5 4 3 2 1\\n\", \"inputs\": \"7\\n-oxoxox\\nx-xxxox\\noo-xoox\\nxoo-ooo\\nooxx-ox\\nxxxxx-x\\noooxoo-\\n\", \"expected\": \"4 7 3 1 5 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 6 5 4 3 2 1 != 4 7 3 1 5 2 6\"}",
            "{\"execution time\": 0.03182697296142578}",
            "{\"execution time\": 0.02864813804626465}",
            "{\"execution time\": 0.02214670181274414}",
            "{\"execution time\": 0.02643752098083496}",
            "{\"execution time\": 0.027857065200805664}",
            "{\"execution time\": 0.026517152786254883}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"output\": \"-2\\n-1\\n-1\\n\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -2 != 0\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'xxxo'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'xxxo'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'xxxo'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"output\": \"2\\n2\\n2\\n\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 0\"}",
            "{\"output\": \"0\\n0\\n0\\n\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 0 != 1\"}",
            "{\"output\": \"0\\n0\\n0\\n\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 0 != 1\"}",
            "{\"output\": \"500 0 200\\n\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"output\": \"5\\n\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"error\": \"NameError(\\\"name 'slime' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"1\\n1000000000 1000000000\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 13\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"KeyError(0)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"14\\n\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 14 != 3\"}",
            "{\"error\": \"ValueError('list.remove(x): x not in list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3\\n1 1\\n2 1\\n3 1\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3\\n1 1\\n2 1\\n3 1\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}"
        ],
        [
            "{\"output\": \"6.5\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6.5 != 369720131\"}",
            "{\"output\": \"463470592\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 463470592 != 369720131\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 369720131\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 369720131\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"1.0\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1.0 != 369720131\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 369720131\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 369720131\"}",
            "{\"output\": \"6.5\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6.5 != 369720131\"}"
        ],
        [
            "{\"execution time\": 0.02312016487121582}",
            "{\"execution time\": 0.02779388427734375}",
            "{\"execution time\": 0.020823001861572266}",
            "{\"execution time\": 0.020109176635742188}",
            "{\"execution time\": 0.02364492416381836}",
            "{\"execution time\": 0.022295713424682617}",
            "{\"execution time\": 0.025416135787963867}",
            "{\"execution time\": 0.021655559539794922}",
            "{\"execution time\": 0.023195981979370117}",
            "{\"execution time\": 0.02461981773376465}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"execution time\": 0.020828723907470703}"
        ],
        [
            "{\"output\": \"2\\n1 2\\n\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"1 1\\n\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}",
            "{\"output\": \"1\\n1\\n\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"2 [0, 4]\\n\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}",
            "{\"output\": \"5\\n1 2 3 4 5 \\n\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}"
        ],
        [
            "{\"output\": \"4\\n\", \"inputs\": \"3\\n010\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after 'if' statement on line 26 (<string>, line 27)\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3\\n010\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3\\n010\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n4320\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"OverflowError('int too large to convert to float')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n4320\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3\\n010\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after 'if' statement on line 26 (<string>, line 27)\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"5 xx\\nx\\nx\\nx\\nx\\nx\\n\", \"expected\": \"25\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 25\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'input' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}"
        ],
        [
            "{\"output\": \"0.47368421052631576\\n\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0.47368421052631576 != 0.7500000000000000\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'beauty' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"output\": \"0.23076923076923078\\n\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0.23076923076923078 != 0.7500000000000000\"}",
            "{\"output\": \"0.5\\n\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0.5 != 0.7500000000000000\"}",
            "{\"error\": \"ZeroDivisionError('division by zero')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"20 200000\\n9 10 5709 9732\\n18 19 9102 6857\\n2 3 6877 4154\\n2 3 3846 1887\\n11 12 7454 5547\\n11 12 8332 6318\\n13 14 2780 9455\\n19 20 9626 3459\\n16 17 9607 4927\\n1...(truncated) ...26\\n13 14 2342 1940\\n7 8 3692 6878\\n3 4 436 6866\\n10 11 9079 1336\\n18 19 9904 779\\n3 4 9240 6341\\n16 17 2332 6045\\n3 4 5656 3560\\n2 3 8853 8287\\n11 12 711 9902\\n\", \"expected\": \"5190.6538461538461538\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 4, got 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"error\": \"ZeroDivisionError('division by zero')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}"
        ],
        [
            "{\"execution time\": 0.01214289665222168}",
            "{\"execution time\": 0.01245260238647461}",
            "{\"execution time\": 0.01349020004272461}",
            "{\"execution time\": 0.014677047729492188}",
            "{\"execution time\": 0.014920949935913086}",
            "{\"execution time\": 0.013700246810913086}",
            "{\"execution time\": 0.017343997955322266}",
            "{\"execution time\": 0.019883394241333008}",
            "{\"execution time\": 0.018101215362548828}",
            "{\"execution time\": 0.013669013977050781}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"output\": \"17\\n\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 17 != 8\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 8\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"error\": \"TypeError('cannot unpack non-iterable int object')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 8\"}"
        ],
        [
            "{\"output\": \"13\\n\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 13 != 3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"912 912\\n#.############################################################################################################################################...(truncated) ...#####################################################################################################################################################\\n\", \"expected\": \"1\\n\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 3\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 3\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"912 912\\n#.############################################################################################################################################...(truncated) ...#####################################################################################################################################################\\n\", \"expected\": \"1\\n\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 3\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"error\": \"AttributeError(\\\"'collections.deque' object has no attribute 'sort'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"[(1, 1), (1, 1), (1, 2), (1, 4), (2, 1)]\\n1\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}"
        ],
        [
            "{\"output\": \"80\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 80 != 78\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 78\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\"}",
            "{\"output\": \"80\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 80 != 78\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 78\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 78\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 78\"}",
            "{\"output\": \"149\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 149 != 78\"}",
            "{\"output\": \"149\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 149 != 78\"}",
            "{\"output\": \"450155887975\\n\", \"inputs\": \"915 565710 565709 301844\\n0 17257 603392 201513 308725 202309 387165 265559 520603 119398 663604 630433 500107 338971 486398 658492 234300 4495 303926 ...(truncated) ...3 647424 759241 62577 146387 667341 380735 475057 344586 811315 593625 383834 160971 446016 658449 102037 781664 481681 668686 736413 578114 590541 0\\n\", \"expected\": \"450156378270\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 450155887975 != 450156378270\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"output\": \"15\\n\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 17\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '4 3 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '4 3 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 17\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"99 96\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"99 96\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"99 96\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"99 96\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}"
        ],
        [
            "{\"execution time\": 0.02167987823486328}",
            "{\"output\": \"155\\n\", \"inputs\": \"144\\n\", \"expected\": \"144\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 155 != 144\"}",
            "{\"execution time\": 0.026241779327392578}",
            "{\"output\": \"155\\n\", \"inputs\": \"144\\n\", \"expected\": \"144\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 155 != 144\"}",
            "{\"execution time\": 0.01829695701599121}",
            "{\"execution time\": 0.021576642990112305}",
            "{\"execution time\": 0.02287435531616211}",
            "{\"execution time\": 0.025363445281982422}",
            "{\"execution time\": 0.02414989471435547}",
            "{\"execution time\": 0.018560171127319336}"
        ],
        [
            "{\"output\": \"3\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 4\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 4\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 4\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 4\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 4\"}",
            "{\"execution time\": 0.5227587223052979}",
            "{\"output\": \"7\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 4\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 4\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"inputs\": \"3\\nBCB\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"inputs\": \"3\\nBCB\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"Yes\\nACAAB\\nBCCCC\\nCAAAA\\nBCCCC\\nCAAAA\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: ACAAB != AC..B\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 776412280\"}",
            "{\"output\": \"17\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 17 != 776412280\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 776412280\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 776412280\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 776412280\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 776412280\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 776412280\"}",
            "{\"output\": \"91\\n1\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"17\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 17 != 776412280\"}"
        ],
        [
            "{\"execution time\": 0.02225518226623535}",
            "{\"execution time\": 0.0208127498626709}",
            "{\"execution time\": 0.020150184631347656}",
            "{\"execution time\": 0.02301764488220215}",
            "{\"execution time\": 0.01986527442932129}",
            "{\"execution time\": 0.019780635833740234}",
            "{\"execution time\": 0.02185678482055664}",
            "{\"execution time\": 0.021088838577270508}",
            "{\"execution time\": 0.01818084716796875}",
            "{\"execution time\": 0.021834850311279297}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}"
        ],
        [
            "{\"execution time\": 0.020831823348999023}",
            "{\"execution time\": 0.02077198028564453}",
            "{\"execution time\": 0.016637325286865234}",
            "{\"execution time\": 0.02155137062072754}",
            "{\"execution time\": 0.021343469619750977}",
            "{\"execution time\": 0.021974802017211914}",
            "{\"execution time\": 0.020789146423339844}",
            "{\"execution time\": 0.024772167205810547}",
            "{\"execution time\": 0.017789125442504883}",
            "{\"execution time\": 0.015856504440307617}"
        ],
        [
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}"
        ],
        [
            "{\"output\": \"248.13908656654496\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 248.13908656654496 != 256.735020470879931\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"248.13908656654496\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 248.13908656654496 != 256.735020470879931\"}",
            "{\"output\": \"307.1796769724489\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 307.1796769724489 != 256.735020470879931\"}",
            "{\"output\": \"307.1796769724489\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 307.1796769724489 != 256.735020470879931\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"307.1796769724489\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 307.1796769724489 != 256.735020470879931\"}",
            "{\"output\": \"307.1796769724489\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 307.1796769724489 != 256.735020470879931\"}",
            "{\"output\": \"307.1796769724489\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 307.1796769724489 != 256.735020470879931\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"execution time\": 0.020108699798583984}",
            "{\"execution time\": 0.01721048355102539}",
            "{\"execution time\": 0.017353534698486328}",
            "{\"execution time\": 0.015111684799194336}",
            "{\"execution time\": 0.020902633666992188}",
            "{\"execution time\": 0.020050048828125}",
            "{\"execution time\": 0.019402027130126953}",
            "{\"execution time\": 0.021112918853759766}",
            "{\"execution time\": 0.02132248878479004}",
            "{\"execution time\": 0.021563053131103516}"
        ],
        [
            "{\"output\": \"37\\n\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 37 != 13\"}",
            "{\"output\": \"37\\n\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 37 != 13\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 13\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"AttributeError(\\\"'int' object has no attribute 'count'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '31 29 31 30 31 30 31 31 30 31 30 31'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 13\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 13\"}",
            "{\"output\": \"37\\n\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 37 != 13\"}",
            "{\"output\": \"37\\n\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 37 != 13\"}"
        ],
        [
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"11 4\\nmississippi\\n3 9\\n4 10\\n4 6\\n7 7\\n\", \"expected\": \"2\\n2\\n0\\n0\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"11 4\\nmississippi\\n3 9\\n4 10\\n4 6\\n7 7\\n\", \"expected\": \"2\\n2\\n0\\n0\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"11 4\\nmississippi\\n3 9\\n4 10\\n4 6\\n7 7\\n\", \"expected\": \"2\\n2\\n0\\n0\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"ABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABAB...(truncated) ...CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"ABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABAB...(truncated) ...CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"ABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABAB...(truncated) ...CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}"
        ],
        [
            "{\"output\": \"678763683900595\\n\", \"inputs\": \"8 28 936294041850197\\n1 2 473294720906780\\n1 3 743030800139244\\n1 4 709363019414774\\n1 5 383643612490312\\n1 6 557102781022861\\n1 7 623179288538138\\n1 8 73961...(truncated) ...3818615687\\n4 8 549007536393172\\n5 6 779230871080408\\n5 7 825982583786498\\n5 8 713928998174272\\n6 7 751331074538826\\n6 8 449873635430228\\n7 8 11298381761479\\n\", \"expected\": \"11360716373\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 678763683900595 != 11360716373\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6 328\\n1 2 99\\n1 3 102\\n2 3 86\\n2 4 94\\n2 5 95\\n3 4 81\\n\", \"expected\": \"33\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 3, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6 328\\n1 2 99\\n1 3 102\\n2 3 86\\n2 4 94\\n2 5 95\\n3 4 81\\n\", \"expected\": \"33\\n\"}",
            "{\"output\": \"678763683900595\\n\", \"inputs\": \"8 28 936294041850197\\n1 2 473294720906780\\n1 3 743030800139244\\n1 4 709363019414774\\n1 5 383643612490312\\n1 6 557102781022861\\n1 7 623179288538138\\n1 8 73961...(truncated) ...3818615687\\n4 8 549007536393172\\n5 6 779230871080408\\n5 7 825982583786498\\n5 8 713928998174272\\n6 7 751331074538826\\n6 8 449873635430228\\n7 8 11298381761479\\n\", \"expected\": \"11360716373\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 678763683900595 != 11360716373\"}",
            "{\"output\": \"678763683900595\\n\", \"inputs\": \"8 28 936294041850197\\n1 2 473294720906780\\n1 3 743030800139244\\n1 4 709363019414774\\n1 5 383643612490312\\n1 6 557102781022861\\n1 7 623179288538138\\n1 8 73961...(truncated) ...3818615687\\n4 8 549007536393172\\n5 6 779230871080408\\n5 7 825982583786498\\n5 8 713928998174272\\n6 7 751331074538826\\n6 8 449873635430228\\n7 8 11298381761479\\n\", \"expected\": \"11360716373\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 678763683900595 != 11360716373\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6 328\\n1 2 99\\n1 3 102\\n2 3 86\\n2 4 94\\n2 5 95\\n3 4 81\\n\", \"expected\": \"33\\n\"}",
            "{\"output\": \"678763683900595\\n\", \"inputs\": \"8 28 936294041850197\\n1 2 473294720906780\\n1 3 743030800139244\\n1 4 709363019414774\\n1 5 383643612490312\\n1 6 557102781022861\\n1 7 623179288538138\\n1 8 73961...(truncated) ...3818615687\\n4 8 549007536393172\\n5 6 779230871080408\\n5 7 825982583786498\\n5 8 713928998174272\\n6 7 751331074538826\\n6 8 449873635430228\\n7 8 11298381761479\\n\", \"expected\": \"11360716373\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 678763683900595 != 11360716373\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 5 998244353\\n1 2 337361568\\n1 6 450343304\\n2 3 61477244\\n2 5 745383438\\n4 5 727360840\\n\", \"expected\": \"325437688\\n\"}",
            "{\"output\": \"678763683900595\\n\", \"inputs\": \"8 28 936294041850197\\n1 2 473294720906780\\n1 3 743030800139244\\n1 4 709363019414774\\n1 5 383643612490312\\n1 6 557102781022861\\n1 7 623179288538138\\n1 8 73961...(truncated) ...3818615687\\n4 8 549007536393172\\n5 6 779230871080408\\n5 7 825982583786498\\n5 8 713928998174272\\n6 7 751331074538826\\n6 8 449873635430228\\n7 8 11298381761479\\n\", \"expected\": \"11360716373\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 678763683900595 != 11360716373\"}",
            "{\"output\": \"678763683900595\\n\", \"inputs\": \"8 28 936294041850197\\n1 2 473294720906780\\n1 3 743030800139244\\n1 4 709363019414774\\n1 5 383643612490312\\n1 6 557102781022861\\n1 7 623179288538138\\n1 8 73961...(truncated) ...3818615687\\n4 8 549007536393172\\n5 6 779230871080408\\n5 7 825982583786498\\n5 8 713928998174272\\n6 7 751331074538826\\n6 8 449873635430228\\n7 8 11298381761479\\n\", \"expected\": \"11360716373\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 678763683900595 != 11360716373\"}"
        ],
        [
            "{\"execution time\": 0.016622304916381836}",
            "{\"execution time\": 0.01425313949584961}",
            "{\"execution time\": 0.01317739486694336}",
            "{\"execution time\": 0.013343095779418945}",
            "{\"execution time\": 0.01229405403137207}",
            "{\"execution time\": 0.013908624649047852}",
            "{\"execution time\": 0.011151313781738281}",
            "{\"execution time\": 0.010025262832641602}",
            "{\"execution time\": 0.011314868927001953}",
            "{\"execution time\": 0.01035618782043457}"
        ],
        [
            "{\"execution time\": 0.01895761489868164}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 1 3 3 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"execution time\": 0.01570439338684082}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 1 3 3 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"70\\n\", \"inputs\": \"9\\n70 27 85 85 33 87 94 92 14\\n\", \"expected\": \"92\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 70 != 92\"}",
            "{\"execution time\": 0.025907039642333984}",
            "{\"execution time\": 0.018515586853027344}",
            "{\"execution time\": 0.027348041534423828}",
            "{\"execution time\": 0.01691746711730957}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 1 3 3 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}"
        ],
        [
            "{\"output\": \"10\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 4\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000\\n1 2 2 3 3 3 4 4 4 4 5 5 5 5 5 6 6 6 6 6 6 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 10 10 10 10 10 10 10 10 10 10 11 11 11 11 11 1...(truncated) ...2 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632\\n\", \"expected\": \"1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n11\\n11\\n11\\n...(truncated) ...1\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}",
            "{\"execution time\": 1.3240444660186768}",
            "{\"output\": \"1\\n2\\n2\\n2\\n1\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 1\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000\\n1 2 2 3 3 3 4 4 4 4 5 5 5 5 5 6 6 6 6 6 6 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 10 10 10 10 10 10 10 10 10 10 11 11 11 11 11 1...(truncated) ...2 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632\\n\", \"expected\": \"1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n11\\n11\\n11\\n...(truncated) ...1\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000\\n1 2 2 3 3 3 4 4 4 4 5 5 5 5 5 6 6 6 6 6 6 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 10 10 10 10 10 10 10 10 10 10 11 11 11 11 11 1...(truncated) ...2 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632\\n\", \"expected\": \"1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n11\\n11\\n11\\n...(truncated) ...1\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000\\n1 2 2 3 3 3 4 4 4 4 5 5 5 5 5 6 6 6 6 6 6 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 10 10 10 10 10 10 10 10 10 10 11 11 11 11 11 1...(truncated) ...2 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632 632\\n\", \"expected\": \"1\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n11\\n11\\n11\\n...(truncated) ...1\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n631\\n\"}"
        ],
        [
            "{\"output\": \"Yes\\n\", \"inputs\": \"7 3\\nABBCABC\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"7 3\\nABBCABC\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"7 3\\nABBCABC\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"7 3\\nABBCABC\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"7 3\\nABCBABC\\nABC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"7 3\\nABBCABC\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"7 3\\nABBCABC\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"7 3\\nABBCABC\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"7 3\\nABBCABC\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"7 3\\nABBCABC\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}"
        ],
        [
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000\\n113851 163936 189980 6140 66303 29285 4364 42493 75571 160334 9103 99418 130120 147209 22449 13408 17845 198097 195025 63499 56495 4719 ...(truncated) ...360\\n136360 40737\\n40737 18688\\n18688 66703\\n66703 53857\\n53857 63291\\n63291 139543\\n139543 40777\\n40777 21925\\n21925 232\\n232 129973\\n129973 124047\\n67444 77437\\n\", \"expected\": \"2\\n3\\n4\\n5\\n2\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n2\\n25\\n26\\n2\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n2\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n...(truncated) ...8\\n35848\\n35850\\n0\\n35850\\n35850\\n35851\\n35851\\n35852\\n35853\\n35854\\n35855\\n35856\\n35857\\n35857\\n35858\\n35859\\n35860\\n35861\\n35861\\n35862\\n35863\\n35864\\n35865\\n35865\\n35866\\n0\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000\\n113851 163936 189980 6140 66303 29285 4364 42493 75571 160334 9103 99418 130120 147209 22449 13408 17845 198097 195025 63499 56495 4719 ...(truncated) ...360\\n136360 40737\\n40737 18688\\n18688 66703\\n66703 53857\\n53857 63291\\n63291 139543\\n139543 40777\\n40777 21925\\n21925 232\\n232 129973\\n129973 124047\\n67444 77437\\n\", \"expected\": \"2\\n3\\n4\\n5\\n2\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n2\\n25\\n26\\n2\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n2\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n...(truncated) ...8\\n35848\\n35850\\n0\\n35850\\n35850\\n35851\\n35851\\n35852\\n35853\\n35854\\n35855\\n35856\\n35857\\n35857\\n35858\\n35859\\n35860\\n35861\\n35861\\n35862\\n35863\\n35864\\n35865\\n35865\\n35866\\n0\\n\"}",
            "{\"output\": \"5\\n0\\n0\\n1\\n1\\n\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"output\": \"5\\n0\\n0\\n1\\n1\\n\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000\\n113851 163936 189980 6140 66303 29285 4364 42493 75571 160334 9103 99418 130120 147209 22449 13408 17845 198097 195025 63499 56495 4719 ...(truncated) ...360\\n136360 40737\\n40737 18688\\n18688 66703\\n66703 53857\\n53857 63291\\n63291 139543\\n139543 40777\\n40777 21925\\n21925 232\\n232 129973\\n129973 124047\\n67444 77437\\n\", \"expected\": \"2\\n3\\n4\\n5\\n2\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n2\\n25\\n26\\n2\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n2\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n...(truncated) ...8\\n35848\\n35850\\n0\\n35850\\n35850\\n35851\\n35851\\n35852\\n35853\\n35854\\n35855\\n35856\\n35857\\n35857\\n35858\\n35859\\n35860\\n35861\\n35861\\n35862\\n35863\\n35864\\n35865\\n35865\\n35866\\n0\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000\\n113851 163936 189980 6140 66303 29285 4364 42493 75571 160334 9103 99418 130120 147209 22449 13408 17845 198097 195025 63499 56495 4719 ...(truncated) ...360\\n136360 40737\\n40737 18688\\n18688 66703\\n66703 53857\\n53857 63291\\n63291 139543\\n139543 40777\\n40777 21925\\n21925 232\\n232 129973\\n129973 124047\\n67444 77437\\n\", \"expected\": \"2\\n3\\n4\\n5\\n2\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n2\\n25\\n26\\n2\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n2\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n...(truncated) ...8\\n35848\\n35850\\n0\\n35850\\n35850\\n35851\\n35851\\n35852\\n35853\\n35854\\n35855\\n35856\\n35857\\n35857\\n35858\\n35859\\n35860\\n35861\\n35861\\n35862\\n35863\\n35864\\n35865\\n35865\\n35866\\n0\\n\"}",
            "{\"output\": \"5\\n0\\n0\\n1\\n1\\n\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\"}"
        ],
        [
            "{\"execution time\": 0.019947290420532227}",
            "{\"execution time\": 0.025360584259033203}",
            "{\"execution time\": 0.02327108383178711}",
            "{\"execution time\": 0.02143716812133789}",
            "{\"execution time\": 0.01638317108154297}",
            "{\"execution time\": 0.018873214721679688}",
            "{\"execution time\": 0.017282962799072266}",
            "{\"execution time\": 0.015912771224975586}",
            "{\"execution time\": 0.016185283660888672}",
            "{\"execution time\": 0.022205829620361328}"
        ],
        [
            "{\"output\": \"3 1 4 9 7\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 4 9 7 != 4 4 4 7 7\"}",
            "{\"execution time\": 0.931535005569458}",
            "{\"execution time\": 0.9418885707855225}",
            "{\"output\": \"3 1 4 9 7\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 4 9 7 != 4 4 4 7 7\"}",
            "{\"execution time\": 0.9017252922058105}",
            "{\"output\": \"3 1 4 7 7\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 4 7 7 != 4 4 4 7 7\"}",
            "{\"output\": \"3 1 4 9 7 \", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 4 9 7 != 4 4 4 7 7\"}",
            "{\"output\": \"3 1 4 9 7 \", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 4 9 7 != 4 4 4 7 7\"}",
            "{\"output\": \"3 1 4 7 7 \", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 4 7 7 != 4 4 4 7 7\"}",
            "{\"output\": \"3 1 4 9 7\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 4 9 7 != 4 4 4 7 7\"}"
        ],
        [
            "{\"output\": \"20\\n\", \"inputs\": \"21\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 1\"}",
            "{\"output\": \"inf\\n\", \"inputs\": \"21\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: inf != 1\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"998244353\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 0\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"998244353\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 0\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"21\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 1\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"998244353\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 0\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"998244353\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 0\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"21\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 1\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"998244353\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 0\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"998244353\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 0\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}"
        ],
        [
            "{\"error\": \"ValueError('min() iterable argument is empty')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"1 1\\n1000000000\\n1 0\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError('min() iterable argument is empty')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"1 1\\n1000000000\\n1 0\\n\", \"expected\": \"1\\n\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"199997 199994\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...(truncated) ...0825 0\\n137390 0\\n57843 0\\n33823 0\\n91089 0\\n93618 0\\n140051 0\\n186752 0\\n176320 0\\n46372 0\\n69369 0\\n193374 0\\n104700 0\\n51274 0\\n54863 0\\n24547 0\\n151736 0\\n66715 0\\n\", \"expected\": \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n...(truncated) ...1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"199997 199994\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...(truncated) ...0825 0\\n137390 0\\n57843 0\\n33823 0\\n91089 0\\n93618 0\\n140051 0\\n186752 0\\n176320 0\\n46372 0\\n69369 0\\n193374 0\\n104700 0\\n51274 0\\n54863 0\\n24547 0\\n151736 0\\n66715 0\\n\", \"expected\": \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n...(truncated) ...1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"199997 199994\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...(truncated) ...0825 0\\n137390 0\\n57843 0\\n33823 0\\n91089 0\\n93618 0\\n140051 0\\n186752 0\\n176320 0\\n46372 0\\n69369 0\\n193374 0\\n104700 0\\n51274 0\\n54863 0\\n24547 0\\n151736 0\\n66715 0\\n\", \"expected\": \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n...(truncated) ...1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\"}",
            "{\"error\": \"ValueError('min() iterable argument is empty')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"1 1\\n1000000000\\n1 0\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -5, \"error_message\": \"TestRunnerError\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"199997 199994\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ...(truncated) ...0825 0\\n137390 0\\n57843 0\\n33823 0\\n91089 0\\n93618 0\\n140051 0\\n186752 0\\n176320 0\\n46372 0\\n69369 0\\n193374 0\\n104700 0\\n51274 0\\n54863 0\\n24547 0\\n151736 0\\n66715 0\\n\", \"expected\": \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n...(truncated) ...1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\"}"
        ],
        [
            "{\"execution time\": 0.014602899551391602}",
            "{\"execution time\": 0.015667438507080078}",
            "{\"output\": \"2025 1 1\\n\", \"inputs\": \"12 30\\n2023 12 30\\n\", \"expected\": \"2024 1 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2025 1 1 != 2024 1 1\"}",
            "{\"execution time\": 0.013328313827514648}",
            "{\"execution time\": 0.021903038024902344}",
            "{\"execution time\": 0.016681432723999023}",
            "{\"execution time\": 0.01515960693359375}",
            "{\"execution time\": 0.02052760124206543}",
            "{\"execution time\": 0.014470577239990234}",
            "{\"output\": \"2025 1 1\\n\", \"inputs\": \"12 30\\n2023 12 30\\n\", \"expected\": \"2024 1 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2025 1 1 != 2024 1 1\"}"
        ],
        [
            "{\"output\": \"200\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 200 != 300\"}",
            "{\"output\": \"920\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 920 != 300\"}",
            "{\"output\": \"4320\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4320 != 300\"}",
            "{\"output\": \"3000\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3000 != 300\"}",
            "{\"output\": \"492\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 492 != 300\"}",
            "{\"output\": \"200\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 200 != 300\"}",
            "{\"output\": \"200\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 200 != 300\"}",
            "{\"output\": \"200\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 200 != 300\"}",
            "{\"output\": \"200\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 200 != 300\"}",
            "{\"output\": \"200\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 200 != 300\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"25549\\n992916 427315 523160 510424 79893 81257 747153 125244 696791 189612 773858 85240 36318 405884 582065 369867 200305 218175 585847 528383 951591 4...(truncated) ...99 610255 24683 297197 554994 574248 706371 315124 67235 49677 497008 27058 704757 343470 683412 455839 5956 721296 28449 893044 573799 942055 772308\\n\", \"expected\": \"181342033 10390487792 9203525543 9374127560 12654571819 12652234991 5602486016 12532980462 6534659647 12275038606 5080816213 12643908665 12720326510 1...(truncated) ...3 9564036698 12727488923 6387479573 11210151596 6761007536 10081122644 12736427840 6095071862 12726685678 2569450086 8518914316 1429217038 5108648558\\n\"}",
            "{\"output\": \"3 0 3 0 2\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 0 3 0 2 != 10 0 10 0 8\"}",
            "{\"output\": \"3 0 3 0 2\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 0 3 0 2 != 10 0 10 0 8\"}",
            "{\"output\": \"11 7 6 2 0\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 7 6 2 0 != 10 0 10 0 8\"}",
            "{\"output\": \"11 7 6 2 0\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 7 6 2 0 != 10 0 10 0 8\"}",
            "{\"output\": \"11 7 6 2 0\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 7 6 2 0 != 10 0 10 0 8\"}",
            "{\"output\": \"11 7 6 2 0\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 7 6 2 0 != 10 0 10 0 8\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"25549\\n992916 427315 523160 510424 79893 81257 747153 125244 696791 189612 773858 85240 36318 405884 582065 369867 200305 218175 585847 528383 951591 4...(truncated) ...99 610255 24683 297197 554994 574248 706371 315124 67235 49677 497008 27058 704757 343470 683412 455839 5956 721296 28449 893044 573799 942055 772308\\n\", \"expected\": \"181342033 10390487792 9203525543 9374127560 12654571819 12652234991 5602486016 12532980462 6534659647 12275038606 5080816213 12643908665 12720326510 1...(truncated) ...3 9564036698 12727488923 6387479573 11210151596 6761007536 10081122644 12736427840 6095071862 12726685678 2569450086 8518914316 1429217038 5108648558\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"25549\\n992916 427315 523160 510424 79893 81257 747153 125244 696791 189612 773858 85240 36318 405884 582065 369867 200305 218175 585847 528383 951591 4...(truncated) ...99 610255 24683 297197 554994 574248 706371 315124 67235 49677 497008 27058 704757 343470 683412 455839 5956 721296 28449 893044 573799 942055 772308\\n\", \"expected\": \"181342033 10390487792 9203525543 9374127560 12654571819 12652234991 5602486016 12532980462 6534659647 12275038606 5080816213 12643908665 12720326510 1...(truncated) ...3 9564036698 12727488923 6387479573 11210151596 6761007536 10081122644 12736427840 6095071862 12726685678 2569450086 8518914316 1429217038 5108648558\\n\"}",
            "{\"output\": \"11 7 6 2 0\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 7 6 2 0 != 10 0 10 0 8\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"10 5\\nBBBWWWBBBW\\nWWWWWBBBWB\\nBBBWBBWBBB\\nBBBWWBWWWW\\nWWWWBWBWBW\\nWBBWBWBBBB\\nWWBBBWWBWB\\nWBWBWWBBBB\\nWBWBWBBWWW\\nWWWBWWBWWB\\n5 21 21 93\\n35 35 70 43\\n55 72 61 84\\n36 33 46 95\\n0 0 999999999 999999999\\n\", \"expected\": \"621\\n167\\n44\\n344\\n500000000000000000\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 4, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"10 5\\nBBBWWWBBBW\\nWWWWWBBBWB\\nBBBWBBWBBB\\nBBBWWBWWWW\\nWWWWBWBWBW\\nWBBWBWBBBB\\nWWBBBWWBWB\\nWBWBWWBBBB\\nWBWBWBBWWW\\nWWWBWWBWWB\\n5 21 21 93\\n35 35 70 43\\n55 72 61 84\\n36 33 46 95\\n0 0 999999999 999999999\\n\", \"expected\": \"621\\n167\\n44\\n344\\n500000000000000000\\n\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 4, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 4, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"10 5\\nBBBWWWBBBW\\nWWWWWBBBWB\\nBBBWBBWBBB\\nBBBWWBWWWW\\nWWWWBWBWBW\\nWBBWBWBBBB\\nWWBBBWWBWB\\nWBWBWWBBBB\\nWBWBWBBWWW\\nWWWBWWBWWB\\n5 21 21 93\\n35 35 70 43\\n55 72 61 84\\n36 33 46 95\\n0 0 999999999 999999999\\n\", \"expected\": \"621\\n167\\n44\\n344\\n500000000000000000\\n\"}"
        ],
        [
            "{\"error\": \"ValueError('max() iterable argument is empty')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 1 0\\n1000000000 1\\n1000000000\\n\", \"expected\": \"2000000000\\n\"}",
            "{\"error\": \"KeyError(2)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'd' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\"}",
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 31\"}",
            "{\"output\": \"32\\n\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 32 != 31\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 31\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 31\"}"
        ],
        [
            "{\"execution time\": 0.023505687713623047}",
            "{\"execution time\": 0.028719186782836914}",
            "{\"output\": \"1600\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1600 != 2100\"}",
            "{\"output\": \"1600\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1600 != 2100\"}",
            "{\"execution time\": 0.028084516525268555}",
            "{\"execution time\": 0.027670860290527344}",
            "{\"output\": \"1600\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1600 != 2100\"}",
            "{\"execution time\": 0.02570962905883789}",
            "{\"output\": \"1600\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1600 != 2100\"}",
            "{\"output\": \"1600\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1600 != 2100\"}"
        ],
        [
            "{\"output\": \"0 500\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 500 != 200 500\"}",
            "{\"output\": \"300 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 300 300 != 200 500\"}",
            "{\"output\": \"300 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 300 300 != 200 500\"}",
            "{\"output\": \"300 0\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 300 0 != 200 500\"}",
            "{\"output\": \"700 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 700 300 != 200 500\"}",
            "{\"output\": \"300 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 300 300 != 200 500\"}",
            "{\"output\": \"300 -300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 300 -300 != 200 500\"}",
            "{\"output\": \"900 0\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 900 0 != 200 500\"}",
            "{\"output\": \"300 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 300 300 != 200 500\"}",
            "{\"output\": \"300 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 300 300 != 200 500\"}"
        ],
        [
            "{\"output\": \"3\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}"
        ],
        [
            "{\"error\": \"TypeError('list indices must be integers or slices, not tuple')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"18\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 18 != 3\"}",
            "{\"error\": \"TypeError('list indices must be integers or slices, not tuple')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"TypeError('list indices must be integers or slices, not tuple')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 3\"}",
            "{\"error\": \"TypeError('list indices must be integers or slices, not tuple')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"TypeError('list indices must be integers or slices, not tuple')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"error\": \"TypeError('list indices must be integers or slices, not tuple')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\"}"
        ],
        [
            "{\"execution time\": 0.014248132705688477}",
            "{\"execution time\": 0.017412900924682617}",
            "{\"execution time\": 0.01406407356262207}",
            "{\"execution time\": 0.013924360275268555}",
            "{\"execution time\": 0.014229059219360352}",
            "{\"execution time\": 0.017019987106323242}",
            "{\"execution time\": 0.011190176010131836}",
            "{\"execution time\": 0.015486717224121094}",
            "{\"execution time\": 0.015930891036987305}",
            "{\"execution time\": 0.012749433517456055}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 4, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 4, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\"}"
        ],
        [
            "{\"output\": \"12345\\n\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12345 != 113\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\"}",
            "{\"error\": \"NameError(\\\"name 'repusits' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\"}",
            "{\"output\": \"12345\\n\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12345 != 113\"}",
            "{\"output\": \"12345\\n\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12345 != 113\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\"}",
            "{\"output\": \"1233333\\n\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1233333 != 113\"}"
        ],
        [
            "{\"output\": \"8\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 5\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 5\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 5\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 5\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 5\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 5\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 5\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 5\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 5\"}"
        ],
        [
            "{\"error\": \"TypeError('cannot unpack non-iterable int object')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\"}",
            "{\"output\": \"3\\n0 0 1 1 0 0 0 0 0 0 0 0 0 0 \", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 0 0 1 1 0 0 0 0 0 0 0 0 0 0 != 1 1 1 0 0 1 0 1\"}",
            "{\"output\": \"3\\n0 0 1 1 0 0 0 0 0 0 0 0 0 0 \\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 0 0 1 1 0 0 0 0 0 0 0 0 0 0 != 1 1 1 0 0 1 0 1\"}",
            "{\"error\": \"TypeError('print() argument after * must be an iterable, not int')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\"}",
            "{\"output\": \"3 [0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0\\n1 1 1 0 0 1 0 1 \\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"inf\\n\\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"TypeError('cannot unpack non-iterable int object')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\"}",
            "{\"output\": \"1 1 1 0 0 0 0 0 \\n2\\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 1 1 0 0 0 0 0 != 3\"}",
            "{\"error\": \"TypeError('cannot unpack non-iterable int object')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\"}"
        ],
        [
            "{\"execution time\": 0.02450728416442871}",
            "{\"execution time\": 0.019356966018676758}",
            "{\"execution time\": 0.022162437438964844}",
            "{\"execution time\": 0.024193763732910156}",
            "{\"execution time\": 0.015021800994873047}",
            "{\"execution time\": 0.01853156089782715}",
            "{\"execution time\": 0.025438547134399414}",
            "{\"execution time\": 0.018517494201660156}",
            "{\"execution time\": 0.025754928588867188}",
            "{\"execution time\": 0.0229799747467041}"
        ],
        [
            "{\"output\": \"1\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"-2 2 1 1\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 0\"}"
        ],
        [
            "{\"output\": \"4\\n\", \"inputs\": \"5 1\\n2\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 0\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 1\\n2\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 0\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 1\\n2\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 0\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}"
        ],
        [
            "{\"output\": \"3\\n2\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 1\"}",
            "{\"output\": \"3\\n2\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 1\"}",
            "{\"output\": \"4\\n2\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"3\\n2\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 1\"}",
            "{\"output\": \"4\\n2\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\"}",
            "{\"output\": \"0\\n2\\n0\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"3\\n2\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 1\"}",
            "{\"output\": \"3\\n2\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 1\"}",
            "{\"output\": \"3\\n2\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 1\"}"
        ],
        [
            "{\"output\": \"5\\n\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 499122178\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 499122178\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}",
            "{\"output\": \"998244349.0\\n\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 998244349.0 != 499122178\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}"
        ],
        [
            "{\"execution time\": 0.24287652969360352}",
            "{\"execution time\": 0.0789649486541748}",
            "{\"execution time\": 0.13315510749816895}",
            "{\"execution time\": 0.26010894775390625}",
            "{\"execution time\": 0.07749533653259277}",
            "{\"execution time\": 0.02779698371887207}",
            "{\"execution time\": 0.024580001831054688}",
            "{\"execution time\": 0.020429611206054688}",
            "{\"execution time\": 0.02696514129638672}",
            "{\"execution time\": 0.026065826416015625}"
        ],
        [
            "{\"execution time\": 0.023845195770263672}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"'int' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'U'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'U'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'U'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'U'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'U'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"NameError(\\\"name 'parts' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'U'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}"
        ],
        [
            "{\"output\": \"0 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 2 3 4 5 != 1 2 3 4 5\"}",
            "{\"output\": \"0 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 2 3 4 5 != 1 2 3 4 5\"}",
            "{\"output\": \"0 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 2 3 4 5 != 1 2 3 4 5\"}",
            "{\"output\": \"0 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 2 3 4 5 != 1 2 3 4 5\"}",
            "{\"error\": \"TypeError('sequence item 0: expected str instance, NoneType found')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\"}",
            "{\"output\": \"\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 2 3 4 5 != 1 2 3 4 5\"}",
            "{\"output\": \"0 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 2 3 4 5 != 1 2 3 4 5\"}",
            "{\"output\": \"\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"T 1 2 3 4\\n5 6 7 8 9\\n10 11 12 13 14\\n15 16 17 18 19\\n20 21 22 23 24\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: T 1 2 3 4 != 1 2 3 4 5\"}"
        ],
        [
            "{\"execution time\": 0.021442174911499023}",
            "{\"execution time\": 0.020374059677124023}",
            "{\"execution time\": 0.013195991516113281}",
            "{\"execution time\": 0.013495922088623047}",
            "{\"execution time\": 0.015892744064331055}",
            "{\"execution time\": 0.022269248962402344}",
            "{\"execution time\": 0.014061212539672852}",
            "{\"execution time\": 0.01756906509399414}",
            "{\"execution time\": 0.019942760467529297}",
            "{\"execution time\": 0.014032363891601562}"
        ],
        [
            "{\"execution time\": 0.024243593215942383}",
            "{\"execution time\": 0.019986629486083984}",
            "{\"execution time\": 0.020873546600341797}",
            "{\"execution time\": 0.01596522331237793}",
            "{\"execution time\": 0.022094011306762695}",
            "{\"execution time\": 0.02613377571105957}",
            "{\"execution time\": 0.01639270782470703}",
            "{\"execution time\": 0.019371509552001953}",
            "{\"execution time\": 0.01960301399230957}",
            "{\"execution time\": 0.022026538848876953}"
        ],
        [
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"31415926535\\n\", \"expected\": \"2006628868244228\\n\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"31415926535\\n\", \"expected\": \"2006628868244228\\n\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}"
        ],
        [
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\n1 2 3 4 5\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}"
        ],
        [
            "{\"execution time\": 0.1535806655883789}",
            "{\"output\": \"Aoki\\n\", \"inputs\": \"4\\n10 2\\n10 1\\n10 2\\n3 2\\n\", \"expected\": \"Takahashi\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Aoki != Takahashi\"}",
            "{\"execution time\": 0.1533355712890625}",
            "{\"output\": \"Aoki\\n\", \"inputs\": \"4\\n10 2\\n10 1\\n10 2\\n3 2\\n\", \"expected\": \"Takahashi\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Aoki != Takahashi\"}",
            "{\"output\": \"Aoki\\n\", \"inputs\": \"4\\n10 2\\n10 1\\n10 2\\n3 2\\n\", \"expected\": \"Takahashi\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Aoki != Takahashi\"}",
            "{\"output\": \"Aoki\\n\", \"inputs\": \"4\\n10 2\\n10 1\\n10 2\\n3 2\\n\", \"expected\": \"Takahashi\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Aoki != Takahashi\"}",
            "{\"execution time\": 0.2205667495727539}",
            "{\"execution time\": 0.08474016189575195}",
            "{\"execution time\": 0.07101154327392578}",
            "{\"execution time\": 0.15324854850769043}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"ACABABCBC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"ACABABCBC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"ACABABCBC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"ACABABCBC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"ACABABCBC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"output\": \"3 6 5 1 4 0 \\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 6 5 1 4 0 != 3 5 4 1 2 6\"}",
            "{\"output\": \"3 6 5 1 4 0 \\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 6 5 1 4 0 != 3 5 4 1 2 6\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"3 6 5 1 4 0\\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 6 5 1 4 0 != 3 5 4 1 2 6\"}",
            "{\"output\": \"2 6 1 5 3 4\\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 6 1 5 3 4 != 3 5 4 1 2 6\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"3 1 2 4 5 6\\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 2 4 5 6 != 3 5 4 1 2 6\"}",
            "{\"output\": \"5 2 4 1 6 3\\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 2 4 1 6 3 != 3 5 4 1 2 6\"}",
            "{\"output\": \"3 6 5 1 4 0 \\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 6 5 1 4 0 != 3 5 4 1 2 6\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}"
        ],
        [
            "{\"execution time\": 0.04086923599243164}",
            "{\"execution time\": 0.03339385986328125}",
            "{\"execution time\": 0.033744096755981445}",
            "{\"execution time\": 0.0745241641998291}",
            "{\"execution time\": 0.0821065902709961}",
            "{\"execution time\": 0.06766700744628906}",
            "{\"execution time\": 0.03719449043273926}",
            "{\"execution time\": 0.05942535400390625}",
            "{\"execution time\": 0.06581568717956543}",
            "{\"execution time\": 0.02662038803100586}"
        ],
        [
            "{\"execution time\": 0.04678010940551758}",
            "{\"execution time\": 0.020714521408081055}",
            "{\"execution time\": 0.020728588104248047}",
            "{\"execution time\": 0.01999688148498535}",
            "{\"execution time\": 0.018952369689941406}",
            "{\"execution time\": 0.021692991256713867}",
            "{\"execution time\": 0.01857137680053711}",
            "{\"execution time\": 0.01897883415222168}",
            "{\"execution time\": 0.01858067512512207}",
            "{\"execution time\": 0.023589134216308594}"
        ],
        [
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 5\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 5\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"output\": \"110\\n\", \"inputs\": \"2\\n800 300\\n100 0\\n0 10\\n\", \"expected\": \"38\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 110 != 38\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"4 5\\n2 4 2 4 2\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 8\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n6 1\\n4 3\\n2 5\\n\", \"expected\": \"No\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n4 2\\n5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3\\n6 1\\n4 3\\n2 5\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\n1 3\\n4 2\\n5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\n1 3\\n4 2\\n5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n4 2\\n5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\n1 3\\n4 2\\n5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\n1 3\\n4 2\\n5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\n1 3\\n4 2\\n5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"error\": \"ValueError('not enough values to unpack (expected 3, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 3, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != -2\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != -2\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != -2\"}"
        ],
        [
            "{\"execution time\": 0.032939910888671875}",
            "{\"execution time\": 0.02255868911743164}",
            "{\"execution time\": 0.036476850509643555}",
            "{\"execution time\": 0.030429363250732422}",
            "{\"execution time\": 0.03011775016784668}",
            "{\"execution time\": 0.0339510440826416}",
            "{\"execution time\": 0.03166627883911133}",
            "{\"execution time\": 0.0351557731628418}",
            "{\"execution time\": 0.03151655197143555}",
            "{\"execution time\": 0.03076314926147461}"
        ],
        [
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"#...\\n#..#\\n..##\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: #... != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \".#..\\n....\\n##..\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: .... != ##..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \".#..\\n....\\n##..\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: .... != ##..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}"
        ],
        [
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}"
        ],
        [
            "{\"output\": \"-1\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"error\": \"NameError(\\\"name 'y1' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for -: 'tuple' and 'int'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for -: 'tuple' and 'int'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"NameError(\\\"name 'y1' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 3\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}"
        ],
        [
            "{\"execution time\": 0.02180790901184082}",
            "{\"execution time\": 0.022410869598388672}",
            "{\"execution time\": 0.022195816040039062}",
            "{\"execution time\": 0.022721529006958008}",
            "{\"execution time\": 0.02105545997619629}",
            "{\"execution time\": 0.02519512176513672}",
            "{\"execution time\": 0.021198511123657227}",
            "{\"execution time\": 0.019959211349487305}",
            "{\"execution time\": 0.023899078369140625}",
            "{\"execution time\": 0.020893335342407227}"
        ],
        [
            "{\"execution time\": 0.025490760803222656}",
            "{\"execution time\": 0.025066137313842773}",
            "{\"execution time\": 0.024858951568603516}",
            "{\"execution time\": 0.02777576446533203}",
            "{\"execution time\": 0.03428983688354492}",
            "{\"execution time\": 0.028559207916259766}",
            "{\"execution time\": 0.02367377281188965}",
            "{\"execution time\": 0.02497386932373047}",
            "{\"execution time\": 0.0252225399017334}",
            "{\"execution time\": 0.023685455322265625}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\"}",
            "{\"output\": \"2 2 1 2 2\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 2 1 2 2 != 0 4 2 7 2\"}",
            "{\"output\": \"2 1 2 0 1\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 2 0 1 != 0 4 2 7 2\"}",
            "{\"output\": \"2 1 2 0 1\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 2 0 1 != 0 4 2 7 2\"}",
            "{\"output\": \"2 1 2 0 1\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 2 0 1 != 0 4 2 7 2\"}",
            "{\"output\": \"2 1 2 0 1\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 2 0 1 != 0 4 2 7 2\"}",
            "{\"output\": \"2 1 2 0 1\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 2 0 1 != 0 4 2 7 2\"}",
            "{\"output\": \"0 5 2 7 1 \\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 5 2 7 1 != 0 4 2 7 2\"}",
            "{\"output\": \"2 1 2 0 1\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 2 0 1 != 0 4 2 7 2\"}",
            "{\"output\": \"2 1 2 0 1\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 2 0 1 != 0 4 2 7 2\"}"
        ],
        [
            "{\"execution time\": 0.017920255661010742}",
            "{\"execution time\": 0.01990509033203125}",
            "{\"execution time\": 0.03162074089050293}",
            "{\"execution time\": 0.025516510009765625}",
            "{\"execution time\": 0.02200007438659668}",
            "{\"output\": \"100001\\n\", \"inputs\": \"4\\n\", \"expected\": \"101010101\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100001 != 101010101\"}",
            "{\"execution time\": 0.027155637741088867}",
            "{\"execution time\": 0.020112276077270508}",
            "{\"execution time\": 0.018785715103149414}",
            "{\"execution time\": 0.0166628360748291}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}"
        ],
        [
            "{\"output\": \"15\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 9\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"1 2 3\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"100000000 99999999 10000000000\\n\", \"expected\": \"500000002500000000\\n\"}",
            "{\"output\": \"\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != 9\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: invalid syntax (<string>, line 17)\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\"}"
        ],
        [
            "{\"output\": \"Yes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nNo\\nNo\\nNo\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=2: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"Yes\\nYes\\nNo\\nNo\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 5\"}",
            "{\"output\": \"\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != 5\"}",
            "{\"output\": \"\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != 5\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 5\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 5\"}",
            "{\"output\": \"\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != 5\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\"}"
        ],
        [
            "{\"output\": \"1\\n\", \"inputs\": \"yay\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"yay\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"yay\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"yay\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"yay\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"yay\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"egg\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"yay\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"yay\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"yay\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\"}",
            "{\"output\": \"0\\n0\\n1\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\"}",
            "{\"output\": \"True\\nFalse\\nTrue\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: True != 2\"}",
            "{\"output\": \"True\\nFalse\\nTrue\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: True != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\"}",
            "{\"output\": \"True\\nFalse\\nTrue\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: True != 2\"}",
            "{\"output\": \"1\\n1\\n2\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 4)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 4)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 4)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 55\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 4)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 55\"}",
            "{\"output\": \"0\\n7\\n0\\n0\\n0\\n\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 55\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 55\"}",
            "{\"error\": \"TypeError(\\\"'<=' not supported between instances of 'tuple' and 'int'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\"}"
        ],
        [
            "{\"output\": \"1\\n\", \"inputs\": \"7 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"7 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"7 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"7 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"7 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"7 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"7 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"7 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"7 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"7 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}"
        ],
        [
            "{\"execution time\": 0.06478619575500488}",
            "{\"execution time\": 0.05787205696105957}",
            "{\"execution time\": 0.07032918930053711}",
            "{\"execution time\": 0.07333254814147949}",
            "{\"execution time\": 0.04350757598876953}",
            "{\"output\": \"1 2\\n0 3\\n0\\n1\\n\", \"inputs\": \"4\\n0 1 1 0\\n1 0 0 1\\n1 0 0 0\\n0 1 0 0\\n\", \"expected\": \"2 3\\n1 4\\n1\\n2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 != 2 3\"}",
            "{\"output\": \"1 2\\n0 3\\n0\\n1\\n\", \"inputs\": \"4\\n0 1 1 0\\n1 0 0 1\\n1 0 0 0\\n0 1 0 0\\n\", \"expected\": \"2 3\\n1 4\\n1\\n2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 != 2 3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0 1 1 0\\n1 0 0 1\\n1 0 0 0\\n0 1 0 0\\n\", \"expected\": \"2 3\\n1 4\\n1\\n2\\n\"}",
            "{\"execution time\": 0.06615924835205078}",
            "{\"output\": \"2 3\\n1\\n0 1\\n2\\n\", \"inputs\": \"4\\n0 1 1 0\\n1 0 0 1\\n1 0 0 0\\n0 1 0 0\\n\", \"expected\": \"2 3\\n1 4\\n1\\n2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 1 4\"}"
        ],
        [
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"execution time\": 0.4431605339050293}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"output\": \"2\\n2\\n2\\n2\\n\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 3\"}",
            "{\"output\": \"2\\n2\\n2\\n2\\n\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"NameError(\\\"name 'x' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"error\": \"NameError(\\\"name 'x' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"error\": \"NameError(\\\"name 'x' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}"
        ]
    ]
]