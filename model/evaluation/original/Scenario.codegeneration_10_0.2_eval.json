[
    {
        "pass@1": 0.16449999999999998,
        "pass@5": 0.22463293650793648,
        "pass@10": 0.2425,
        "detail": {
            "pass@1": {
                "0": 0.0,
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 1.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 1.0,
                "14": 1.0,
                "15": 0.0,
                "16": 0.0,
                "17": 0.0,
                "18": 0.0,
                "19": 0.0,
                "20": 0.0,
                "21": 0.0,
                "22": 0.0,
                "23": 1.0,
                "24": 0.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 0.5999999999999999,
                "30": 0.0,
                "31": 1.0,
                "32": 1.0,
                "33": 1.0,
                "34": 0.0,
                "35": 0.0,
                "36": 1.0,
                "37": 0.0,
                "38": 0.0,
                "39": 0.09999999999999998,
                "40": 0.0,
                "41": 0.0,
                "42": 0.7999999999999999,
                "43": 0.30000000000000004,
                "44": 1.0,
                "45": 0.4,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 0.4,
                "50": 0.0,
                "51": 0.5,
                "52": 0.0,
                "53": 0.0,
                "54": 0.0,
                "55": 0.0,
                "56": 0.0,
                "57": 0.0,
                "58": 0.0,
                "59": 1.0,
                "60": 0.0,
                "61": 0.0,
                "62": 0.0,
                "63": 0.0,
                "64": 0.0,
                "65": 0.0,
                "66": 0.0,
                "67": 0.9,
                "68": 1.0,
                "69": 0.0,
                "70": 0.5,
                "71": 0.0,
                "72": 0.7999999999999999,
                "73": 0.30000000000000004,
                "74": 0.0,
                "75": 0.0,
                "76": 1.0,
                "77": 0.0,
                "78": 0.0,
                "79": 0.0,
                "80": 0.0,
                "81": 0.0,
                "82": 0.20000000000000007,
                "83": 1.0,
                "84": 0.0,
                "85": 0.0,
                "86": 0.7999999999999999,
                "87": 0.0,
                "88": 0.0,
                "89": 0.0,
                "90": 0.0,
                "91": 0.20000000000000007,
                "92": 0.0,
                "93": 0.0,
                "94": 0.09999999999999998,
                "95": 0.0,
                "96": 0.0,
                "97": 0.0,
                "98": 0.0,
                "99": 0.0,
                "100": 0.0,
                "101": 0.0,
                "102": 0.5999999999999999,
                "103": 0.0,
                "104": 0.0,
                "105": 0.0,
                "106": 1.0,
                "107": 0.0,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0,
                "111": 0.0,
                "112": 0.0,
                "113": 0.0,
                "114": 0.0,
                "115": 0.0,
                "116": 1.0,
                "117": 0.0,
                "118": 0.0,
                "119": 0.0,
                "120": 0.20000000000000007,
                "121": 1.0,
                "122": 0.0,
                "123": 0.30000000000000004,
                "124": 0.0,
                "125": 1.0,
                "126": 0.0,
                "127": 0.0,
                "128": 1.0,
                "129": 1.0,
                "130": 0.0,
                "131": 0.0,
                "132": 0.0,
                "133": 0.0,
                "134": 0.0,
                "135": 0.0,
                "136": 0.5999999999999999,
                "137": 0.0,
                "138": 0.7999999999999999,
                "139": 0.0,
                "140": 0.0,
                "141": 0.0,
                "142": 0.0,
                "143": 1.0,
                "144": 1.0,
                "145": 0.0,
                "146": 0.0,
                "147": 1.0,
                "148": 0.0,
                "149": 0.0,
                "150": 0.0,
                "151": 0.20000000000000007,
                "152": 0.30000000000000004,
                "153": 0.09999999999999998,
                "154": 0.0,
                "155": 0.7,
                "156": 0.0,
                "157": 0.0,
                "158": 0.0,
                "159": 0.0,
                "160": 0.09999999999999998,
                "161": 0.0,
                "162": 0.0,
                "163": 0.5999999999999999,
                "164": 0.0,
                "165": 0.0,
                "166": 1.0,
                "167": 0.0,
                "168": 0.0,
                "169": 0.0,
                "170": 0.0,
                "171": 0.0,
                "172": 0.0,
                "173": 0.09999999999999998,
                "174": 0.0,
                "175": 0.0,
                "176": 0.0,
                "177": 0.09999999999999998,
                "178": 0.0,
                "179": 0.0,
                "180": 0.0,
                "181": 0.9,
                "182": 0.5999999999999999,
                "183": 0.0,
                "184": 0.0,
                "185": 0.20000000000000007,
                "186": 0.0,
                "187": 0.0,
                "188": 1.0,
                "189": 1.0,
                "190": 0.0,
                "191": 0.0,
                "192": 0.0,
                "193": 0.0,
                "194": 0.0,
                "195": 0.0,
                "196": 0.30000000000000004,
                "197": 0.0,
                "198": 0.0,
                "199": 0.0,
                "200": 0.0,
                "201": 0.0,
                "202": 0.0,
                "203": 0.0,
                "204": 0.0,
                "205": 0.0,
                "206": 0.0,
                "207": 0.09999999999999998,
                "208": 0.0,
                "209": 0.0,
                "210": 0.0,
                "211": 0.0,
                "212": 0.0,
                "213": 0.0,
                "214": 0.0,
                "215": 0.0,
                "216": 0.0,
                "217": 0.0,
                "218": 0.5999999999999999,
                "219": 0.0,
                "220": 0.0,
                "221": 0.0,
                "222": 0.5999999999999999,
                "223": 0.0,
                "224": 0.0,
                "225": 0.0,
                "226": 0.0,
                "227": 1.0,
                "228": 0.0,
                "229": 0.0,
                "230": 0.0,
                "231": 0.0,
                "232": 0.0,
                "233": 0.0,
                "234": 0.0,
                "235": 0.0,
                "236": 0.0,
                "237": 0.0,
                "238": 0.20000000000000007,
                "239": 0.0,
                "240": 0.0,
                "241": 0.0,
                "242": 0.0,
                "243": 0.0,
                "244": 0.0,
                "245": 0.0,
                "246": 0.0,
                "247": 0.0,
                "248": 0.0,
                "249": 1.0,
                "250": 0.0,
                "251": 0.9,
                "252": 0.0,
                "253": 0.0,
                "254": 0.0,
                "255": 0.0,
                "256": 0.0,
                "257": 0.0,
                "258": 0.0,
                "259": 0.0,
                "260": 0.0,
                "261": 0.0,
                "262": 0.0,
                "263": 0.0,
                "264": 0.20000000000000007,
                "265": 0.0,
                "266": 0.0,
                "267": 0.0,
                "268": 0.0,
                "269": 0.0,
                "270": 0.7,
                "271": 0.0,
                "272": 0.0,
                "273": 0.0,
                "274": 0.0,
                "275": 0.5999999999999999,
                "276": 0.0,
                "277": 0.0,
                "278": 0.0,
                "279": 0.0,
                "280": 0.5999999999999999,
                "281": 0.0,
                "282": 0.0,
                "283": 0.0,
                "284": 0.7999999999999999,
                "285": 0.0,
                "286": 0.0,
                "287": 0.0,
                "288": 0.0,
                "289": 0.5999999999999999,
                "290": 0.7,
                "291": 0.0,
                "292": 0.0,
                "293": 0.0,
                "294": 0.0,
                "295": 0.4,
                "296": 0.0,
                "297": 0.0,
                "298": 0.0,
                "299": 1.0,
                "300": 0.09999999999999998,
                "301": 0.0,
                "302": 0.0,
                "303": 0.0,
                "304": 0.0,
                "305": 0.7,
                "306": 0.0,
                "307": 0.0,
                "308": 0.0,
                "309": 0.0,
                "310": 0.0,
                "311": 0.0,
                "312": 1.0,
                "313": 0.0,
                "314": 0.0,
                "315": 0.0,
                "316": 0.5999999999999999,
                "317": 0.0,
                "318": 1.0,
                "319": 0.0,
                "320": 0.0,
                "321": 1.0,
                "322": 0.0,
                "323": 0.0,
                "324": 0.0,
                "325": 0.0,
                "326": 0.5,
                "327": 0.9,
                "328": 0.0,
                "329": 0.0,
                "330": 0.0,
                "331": 0.0,
                "332": 1.0,
                "333": 0.0,
                "334": 0.0,
                "335": 0.0,
                "336": 0.0,
                "337": 0.30000000000000004,
                "338": 0.0,
                "339": 0.0,
                "340": 0.0,
                "341": 0.0,
                "342": 0.09999999999999998,
                "343": 0.0,
                "344": 0.0,
                "345": 0.0,
                "346": 0.5,
                "347": 0.0,
                "348": 0.0,
                "349": 0.0,
                "350": 0.0,
                "351": 1.0,
                "352": 0.0,
                "353": 0.0,
                "354": 0.0,
                "355": 0.0,
                "356": 0.09999999999999998,
                "357": 0.0,
                "358": 0.0,
                "359": 0.0,
                "360": 1.0,
                "361": 1.0,
                "362": 0.0,
                "363": 0.0,
                "364": 0.9,
                "365": 0.0,
                "366": 0.0,
                "367": 0.0,
                "368": 0.0,
                "369": 0.9,
                "370": 0.7999999999999999,
                "371": 0.0,
                "372": 0.0,
                "373": 0.0,
                "374": 0.0,
                "375": 0.5999999999999999,
                "376": 0.0,
                "377": 0.0,
                "378": 0.0,
                "379": 0.5,
                "380": 0.7,
                "381": 0.0,
                "382": 0.0,
                "383": 0.0,
                "384": 0.0,
                "385": 0.0,
                "386": 0.0,
                "387": 0.0,
                "388": 0.0,
                "389": 0.0,
                "390": 0.0,
                "391": 0.0,
                "392": 0.0,
                "393": 0.0,
                "394": 0.0,
                "395": 0.0,
                "396": 1.0,
                "397": 0.0,
                "398": 0.0,
                "399": 0.0
            },
            "pass@5": {
                "0": 0.0,
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 1.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 1.0,
                "14": 1.0,
                "15": 0.0,
                "16": 0.0,
                "17": 0.0,
                "18": 0.0,
                "19": 0.0,
                "20": 0.0,
                "21": 0.0,
                "22": 0.0,
                "23": 1.0,
                "24": 0.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 1.0,
                "30": 0.0,
                "31": 1.0,
                "32": 1.0,
                "33": 1.0,
                "34": 0.0,
                "35": 0.0,
                "36": 1.0,
                "37": 0.0,
                "38": 0.0,
                "39": 0.5,
                "40": 0.0,
                "41": 0.0,
                "42": 1.0,
                "43": 0.9166666666666666,
                "44": 1.0,
                "45": 0.9761904761904762,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 0.9761904761904762,
                "50": 0.0,
                "51": 0.996031746031746,
                "52": 0.0,
                "53": 0.0,
                "54": 0.0,
                "55": 0.0,
                "56": 0.0,
                "57": 0.0,
                "58": 0.0,
                "59": 1.0,
                "60": 0.0,
                "61": 0.0,
                "62": 0.0,
                "63": 0.0,
                "64": 0.0,
                "65": 0.0,
                "66": 0.0,
                "67": 1.0,
                "68": 1.0,
                "69": 0.0,
                "70": 0.996031746031746,
                "71": 0.0,
                "72": 1.0,
                "73": 0.9166666666666666,
                "74": 0.0,
                "75": 0.0,
                "76": 1.0,
                "77": 0.0,
                "78": 0.0,
                "79": 0.0,
                "80": 0.0,
                "81": 0.0,
                "82": 0.7777777777777778,
                "83": 1.0,
                "84": 0.0,
                "85": 0.0,
                "86": 1.0,
                "87": 0.0,
                "88": 0.0,
                "89": 0.0,
                "90": 0.0,
                "91": 0.7777777777777778,
                "92": 0.0,
                "93": 0.0,
                "94": 0.5,
                "95": 0.0,
                "96": 0.0,
                "97": 0.0,
                "98": 0.0,
                "99": 0.0,
                "100": 0.0,
                "101": 0.0,
                "102": 1.0,
                "103": 0.0,
                "104": 0.0,
                "105": 0.0,
                "106": 1.0,
                "107": 0.0,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0,
                "111": 0.0,
                "112": 0.0,
                "113": 0.0,
                "114": 0.0,
                "115": 0.0,
                "116": 1.0,
                "117": 0.0,
                "118": 0.0,
                "119": 0.0,
                "120": 0.7777777777777778,
                "121": 1.0,
                "122": 0.0,
                "123": 0.9166666666666666,
                "124": 0.0,
                "125": 1.0,
                "126": 0.0,
                "127": 0.0,
                "128": 1.0,
                "129": 1.0,
                "130": 0.0,
                "131": 0.0,
                "132": 0.0,
                "133": 0.0,
                "134": 0.0,
                "135": 0.0,
                "136": 1.0,
                "137": 0.0,
                "138": 1.0,
                "139": 0.0,
                "140": 0.0,
                "141": 0.0,
                "142": 0.0,
                "143": 1.0,
                "144": 1.0,
                "145": 0.0,
                "146": 0.0,
                "147": 1.0,
                "148": 0.0,
                "149": 0.0,
                "150": 0.0,
                "151": 0.7777777777777778,
                "152": 0.9166666666666666,
                "153": 0.5,
                "154": 0.0,
                "155": 1.0,
                "156": 0.0,
                "157": 0.0,
                "158": 0.0,
                "159": 0.0,
                "160": 0.5,
                "161": 0.0,
                "162": 0.0,
                "163": 1.0,
                "164": 0.0,
                "165": 0.0,
                "166": 1.0,
                "167": 0.0,
                "168": 0.0,
                "169": 0.0,
                "170": 0.0,
                "171": 0.0,
                "172": 0.0,
                "173": 0.5,
                "174": 0.0,
                "175": 0.0,
                "176": 0.0,
                "177": 0.5,
                "178": 0.0,
                "179": 0.0,
                "180": 0.0,
                "181": 1.0,
                "182": 1.0,
                "183": 0.0,
                "184": 0.0,
                "185": 0.7777777777777778,
                "186": 0.0,
                "187": 0.0,
                "188": 1.0,
                "189": 1.0,
                "190": 0.0,
                "191": 0.0,
                "192": 0.0,
                "193": 0.0,
                "194": 0.0,
                "195": 0.0,
                "196": 0.9166666666666666,
                "197": 0.0,
                "198": 0.0,
                "199": 0.0,
                "200": 0.0,
                "201": 0.0,
                "202": 0.0,
                "203": 0.0,
                "204": 0.0,
                "205": 0.0,
                "206": 0.0,
                "207": 0.5,
                "208": 0.0,
                "209": 0.0,
                "210": 0.0,
                "211": 0.0,
                "212": 0.0,
                "213": 0.0,
                "214": 0.0,
                "215": 0.0,
                "216": 0.0,
                "217": 0.0,
                "218": 1.0,
                "219": 0.0,
                "220": 0.0,
                "221": 0.0,
                "222": 1.0,
                "223": 0.0,
                "224": 0.0,
                "225": 0.0,
                "226": 0.0,
                "227": 1.0,
                "228": 0.0,
                "229": 0.0,
                "230": 0.0,
                "231": 0.0,
                "232": 0.0,
                "233": 0.0,
                "234": 0.0,
                "235": 0.0,
                "236": 0.0,
                "237": 0.0,
                "238": 0.7777777777777778,
                "239": 0.0,
                "240": 0.0,
                "241": 0.0,
                "242": 0.0,
                "243": 0.0,
                "244": 0.0,
                "245": 0.0,
                "246": 0.0,
                "247": 0.0,
                "248": 0.0,
                "249": 1.0,
                "250": 0.0,
                "251": 1.0,
                "252": 0.0,
                "253": 0.0,
                "254": 0.0,
                "255": 0.0,
                "256": 0.0,
                "257": 0.0,
                "258": 0.0,
                "259": 0.0,
                "260": 0.0,
                "261": 0.0,
                "262": 0.0,
                "263": 0.0,
                "264": 0.7777777777777778,
                "265": 0.0,
                "266": 0.0,
                "267": 0.0,
                "268": 0.0,
                "269": 0.0,
                "270": 1.0,
                "271": 0.0,
                "272": 0.0,
                "273": 0.0,
                "274": 0.0,
                "275": 1.0,
                "276": 0.0,
                "277": 0.0,
                "278": 0.0,
                "279": 0.0,
                "280": 1.0,
                "281": 0.0,
                "282": 0.0,
                "283": 0.0,
                "284": 1.0,
                "285": 0.0,
                "286": 0.0,
                "287": 0.0,
                "288": 0.0,
                "289": 1.0,
                "290": 1.0,
                "291": 0.0,
                "292": 0.0,
                "293": 0.0,
                "294": 0.0,
                "295": 0.9761904761904762,
                "296": 0.0,
                "297": 0.0,
                "298": 0.0,
                "299": 1.0,
                "300": 0.5,
                "301": 0.0,
                "302": 0.0,
                "303": 0.0,
                "304": 0.0,
                "305": 1.0,
                "306": 0.0,
                "307": 0.0,
                "308": 0.0,
                "309": 0.0,
                "310": 0.0,
                "311": 0.0,
                "312": 1.0,
                "313": 0.0,
                "314": 0.0,
                "315": 0.0,
                "316": 1.0,
                "317": 0.0,
                "318": 1.0,
                "319": 0.0,
                "320": 0.0,
                "321": 1.0,
                "322": 0.0,
                "323": 0.0,
                "324": 0.0,
                "325": 0.0,
                "326": 0.996031746031746,
                "327": 1.0,
                "328": 0.0,
                "329": 0.0,
                "330": 0.0,
                "331": 0.0,
                "332": 1.0,
                "333": 0.0,
                "334": 0.0,
                "335": 0.0,
                "336": 0.0,
                "337": 0.9166666666666666,
                "338": 0.0,
                "339": 0.0,
                "340": 0.0,
                "341": 0.0,
                "342": 0.5,
                "343": 0.0,
                "344": 0.0,
                "345": 0.0,
                "346": 0.996031746031746,
                "347": 0.0,
                "348": 0.0,
                "349": 0.0,
                "350": 0.0,
                "351": 1.0,
                "352": 0.0,
                "353": 0.0,
                "354": 0.0,
                "355": 0.0,
                "356": 0.5,
                "357": 0.0,
                "358": 0.0,
                "359": 0.0,
                "360": 1.0,
                "361": 1.0,
                "362": 0.0,
                "363": 0.0,
                "364": 1.0,
                "365": 0.0,
                "366": 0.0,
                "367": 0.0,
                "368": 0.0,
                "369": 1.0,
                "370": 1.0,
                "371": 0.0,
                "372": 0.0,
                "373": 0.0,
                "374": 0.0,
                "375": 1.0,
                "376": 0.0,
                "377": 0.0,
                "378": 0.0,
                "379": 0.996031746031746,
                "380": 1.0,
                "381": 0.0,
                "382": 0.0,
                "383": 0.0,
                "384": 0.0,
                "385": 0.0,
                "386": 0.0,
                "387": 0.0,
                "388": 0.0,
                "389": 0.0,
                "390": 0.0,
                "391": 0.0,
                "392": 0.0,
                "393": 0.0,
                "394": 0.0,
                "395": 0.0,
                "396": 1.0,
                "397": 0.0,
                "398": 0.0,
                "399": 0.0
            },
            "pass@10": {
                "0": 0.0,
                "1": 0.0,
                "2": 0.0,
                "3": 0.0,
                "4": 0.0,
                "5": 0.0,
                "6": 0.0,
                "7": 0.0,
                "8": 0.0,
                "9": 1.0,
                "10": 0.0,
                "11": 0.0,
                "12": 0.0,
                "13": 1.0,
                "14": 1.0,
                "15": 0.0,
                "16": 0.0,
                "17": 0.0,
                "18": 0.0,
                "19": 0.0,
                "20": 0.0,
                "21": 0.0,
                "22": 0.0,
                "23": 1.0,
                "24": 0.0,
                "25": 0.0,
                "26": 0.0,
                "27": 0.0,
                "28": 1.0,
                "29": 1.0,
                "30": 0.0,
                "31": 1.0,
                "32": 1.0,
                "33": 1.0,
                "34": 0.0,
                "35": 0.0,
                "36": 1.0,
                "37": 0.0,
                "38": 0.0,
                "39": 1.0,
                "40": 0.0,
                "41": 0.0,
                "42": 1.0,
                "43": 1.0,
                "44": 1.0,
                "45": 1.0,
                "46": 0.0,
                "47": 0.0,
                "48": 0.0,
                "49": 1.0,
                "50": 0.0,
                "51": 1.0,
                "52": 0.0,
                "53": 0.0,
                "54": 0.0,
                "55": 0.0,
                "56": 0.0,
                "57": 0.0,
                "58": 0.0,
                "59": 1.0,
                "60": 0.0,
                "61": 0.0,
                "62": 0.0,
                "63": 0.0,
                "64": 0.0,
                "65": 0.0,
                "66": 0.0,
                "67": 1.0,
                "68": 1.0,
                "69": 0.0,
                "70": 1.0,
                "71": 0.0,
                "72": 1.0,
                "73": 1.0,
                "74": 0.0,
                "75": 0.0,
                "76": 1.0,
                "77": 0.0,
                "78": 0.0,
                "79": 0.0,
                "80": 0.0,
                "81": 0.0,
                "82": 1.0,
                "83": 1.0,
                "84": 0.0,
                "85": 0.0,
                "86": 1.0,
                "87": 0.0,
                "88": 0.0,
                "89": 0.0,
                "90": 0.0,
                "91": 1.0,
                "92": 0.0,
                "93": 0.0,
                "94": 1.0,
                "95": 0.0,
                "96": 0.0,
                "97": 0.0,
                "98": 0.0,
                "99": 0.0,
                "100": 0.0,
                "101": 0.0,
                "102": 1.0,
                "103": 0.0,
                "104": 0.0,
                "105": 0.0,
                "106": 1.0,
                "107": 0.0,
                "108": 0.0,
                "109": 0.0,
                "110": 0.0,
                "111": 0.0,
                "112": 0.0,
                "113": 0.0,
                "114": 0.0,
                "115": 0.0,
                "116": 1.0,
                "117": 0.0,
                "118": 0.0,
                "119": 0.0,
                "120": 1.0,
                "121": 1.0,
                "122": 0.0,
                "123": 1.0,
                "124": 0.0,
                "125": 1.0,
                "126": 0.0,
                "127": 0.0,
                "128": 1.0,
                "129": 1.0,
                "130": 0.0,
                "131": 0.0,
                "132": 0.0,
                "133": 0.0,
                "134": 0.0,
                "135": 0.0,
                "136": 1.0,
                "137": 0.0,
                "138": 1.0,
                "139": 0.0,
                "140": 0.0,
                "141": 0.0,
                "142": 0.0,
                "143": 1.0,
                "144": 1.0,
                "145": 0.0,
                "146": 0.0,
                "147": 1.0,
                "148": 0.0,
                "149": 0.0,
                "150": 0.0,
                "151": 1.0,
                "152": 1.0,
                "153": 1.0,
                "154": 0.0,
                "155": 1.0,
                "156": 0.0,
                "157": 0.0,
                "158": 0.0,
                "159": 0.0,
                "160": 1.0,
                "161": 0.0,
                "162": 0.0,
                "163": 1.0,
                "164": 0.0,
                "165": 0.0,
                "166": 1.0,
                "167": 0.0,
                "168": 0.0,
                "169": 0.0,
                "170": 0.0,
                "171": 0.0,
                "172": 0.0,
                "173": 1.0,
                "174": 0.0,
                "175": 0.0,
                "176": 0.0,
                "177": 1.0,
                "178": 0.0,
                "179": 0.0,
                "180": 0.0,
                "181": 1.0,
                "182": 1.0,
                "183": 0.0,
                "184": 0.0,
                "185": 1.0,
                "186": 0.0,
                "187": 0.0,
                "188": 1.0,
                "189": 1.0,
                "190": 0.0,
                "191": 0.0,
                "192": 0.0,
                "193": 0.0,
                "194": 0.0,
                "195": 0.0,
                "196": 1.0,
                "197": 0.0,
                "198": 0.0,
                "199": 0.0,
                "200": 0.0,
                "201": 0.0,
                "202": 0.0,
                "203": 0.0,
                "204": 0.0,
                "205": 0.0,
                "206": 0.0,
                "207": 1.0,
                "208": 0.0,
                "209": 0.0,
                "210": 0.0,
                "211": 0.0,
                "212": 0.0,
                "213": 0.0,
                "214": 0.0,
                "215": 0.0,
                "216": 0.0,
                "217": 0.0,
                "218": 1.0,
                "219": 0.0,
                "220": 0.0,
                "221": 0.0,
                "222": 1.0,
                "223": 0.0,
                "224": 0.0,
                "225": 0.0,
                "226": 0.0,
                "227": 1.0,
                "228": 0.0,
                "229": 0.0,
                "230": 0.0,
                "231": 0.0,
                "232": 0.0,
                "233": 0.0,
                "234": 0.0,
                "235": 0.0,
                "236": 0.0,
                "237": 0.0,
                "238": 1.0,
                "239": 0.0,
                "240": 0.0,
                "241": 0.0,
                "242": 0.0,
                "243": 0.0,
                "244": 0.0,
                "245": 0.0,
                "246": 0.0,
                "247": 0.0,
                "248": 0.0,
                "249": 1.0,
                "250": 0.0,
                "251": 1.0,
                "252": 0.0,
                "253": 0.0,
                "254": 0.0,
                "255": 0.0,
                "256": 0.0,
                "257": 0.0,
                "258": 0.0,
                "259": 0.0,
                "260": 0.0,
                "261": 0.0,
                "262": 0.0,
                "263": 0.0,
                "264": 1.0,
                "265": 0.0,
                "266": 0.0,
                "267": 0.0,
                "268": 0.0,
                "269": 0.0,
                "270": 1.0,
                "271": 0.0,
                "272": 0.0,
                "273": 0.0,
                "274": 0.0,
                "275": 1.0,
                "276": 0.0,
                "277": 0.0,
                "278": 0.0,
                "279": 0.0,
                "280": 1.0,
                "281": 0.0,
                "282": 0.0,
                "283": 0.0,
                "284": 1.0,
                "285": 0.0,
                "286": 0.0,
                "287": 0.0,
                "288": 0.0,
                "289": 1.0,
                "290": 1.0,
                "291": 0.0,
                "292": 0.0,
                "293": 0.0,
                "294": 0.0,
                "295": 1.0,
                "296": 0.0,
                "297": 0.0,
                "298": 0.0,
                "299": 1.0,
                "300": 1.0,
                "301": 0.0,
                "302": 0.0,
                "303": 0.0,
                "304": 0.0,
                "305": 1.0,
                "306": 0.0,
                "307": 0.0,
                "308": 0.0,
                "309": 0.0,
                "310": 0.0,
                "311": 0.0,
                "312": 1.0,
                "313": 0.0,
                "314": 0.0,
                "315": 0.0,
                "316": 1.0,
                "317": 0.0,
                "318": 1.0,
                "319": 0.0,
                "320": 0.0,
                "321": 1.0,
                "322": 0.0,
                "323": 0.0,
                "324": 0.0,
                "325": 0.0,
                "326": 1.0,
                "327": 1.0,
                "328": 0.0,
                "329": 0.0,
                "330": 0.0,
                "331": 0.0,
                "332": 1.0,
                "333": 0.0,
                "334": 0.0,
                "335": 0.0,
                "336": 0.0,
                "337": 1.0,
                "338": 0.0,
                "339": 0.0,
                "340": 0.0,
                "341": 0.0,
                "342": 1.0,
                "343": 0.0,
                "344": 0.0,
                "345": 0.0,
                "346": 1.0,
                "347": 0.0,
                "348": 0.0,
                "349": 0.0,
                "350": 0.0,
                "351": 1.0,
                "352": 0.0,
                "353": 0.0,
                "354": 0.0,
                "355": 0.0,
                "356": 1.0,
                "357": 0.0,
                "358": 0.0,
                "359": 0.0,
                "360": 1.0,
                "361": 1.0,
                "362": 0.0,
                "363": 0.0,
                "364": 1.0,
                "365": 0.0,
                "366": 0.0,
                "367": 0.0,
                "368": 0.0,
                "369": 1.0,
                "370": 1.0,
                "371": 0.0,
                "372": 0.0,
                "373": 0.0,
                "374": 0.0,
                "375": 1.0,
                "376": 0.0,
                "377": 0.0,
                "378": 0.0,
                "379": 1.0,
                "380": 1.0,
                "381": 0.0,
                "382": 0.0,
                "383": 0.0,
                "384": 0.0,
                "385": 0.0,
                "386": 0.0,
                "387": 0.0,
                "388": 0.0,
                "389": 0.0,
                "390": 0.0,
                "391": 0.0,
                "392": 0.0,
                "393": 0.0,
                "394": 0.0,
                "395": 0.0,
                "396": 1.0,
                "397": 0.0,
                "398": 0.0,
                "399": 0.0
            }
        }
    },
    {
        "0": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "1": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "2": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "3": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "4": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "5": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "6": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "7": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "8": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "9": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "10": [
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ]
        ],
        "11": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "12": [
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ]
        ],
        "13": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "14": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "15": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "16": [
            [
                true,
                -4
            ],
            [
                true,
                -4
            ],
            [
                true,
                -4
            ],
            [
                true,
                -4
            ],
            [
                true,
                -4
            ],
            [
                true,
                -4
            ],
            [
                true,
                -4
            ],
            [
                true,
                -4
            ],
            [
                true,
                -4
            ],
            [
                true,
                -4
            ]
        ],
        "17": [
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "18": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "19": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "20": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "21": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "22": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                -4
            ]
        ],
        "23": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "24": [
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "25": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "26": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "27": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "28": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "29": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ]
        ],
        "30": [
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "31": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "32": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "33": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "34": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "35": [
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ]
        ],
        "36": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "37": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "38": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "39": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "40": [
            [
                -4
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                false
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                true,
                true,
                false
            ]
        ],
        "41": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ]
        ],
        "42": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "43": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ]
        ],
        "44": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "45": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "46": [
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ]
        ],
        "47": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "48": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "49": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "50": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "51": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ]
        ],
        "52": [
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "53": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "54": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "55": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ]
        ],
        "56": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "57": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "58": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "59": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "60": [
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "61": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "62": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "63": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "64": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "65": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "66": [
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "67": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "68": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "69": [
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "70": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ]
        ],
        "71": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                -4
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "72": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "73": [
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "74": [
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "75": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ]
        ],
        "76": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "77": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ]
        ],
        "78": [
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "79": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "80": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "81": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "82": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                -4
            ]
        ],
        "83": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "84": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "85": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ]
        ],
        "86": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ]
        ],
        "87": [
            [
                true,
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "88": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "89": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ]
        ],
        "90": [
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ]
        ],
        "91": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "92": [
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "93": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "94": [
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "95": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "96": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "97": [
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ]
        ],
        "98": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "99": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "100": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ]
        ],
        "101": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "102": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "103": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "104": [
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "105": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "106": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "107": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "108": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "109": [
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ]
        ],
        "110": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "111": [
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                -4
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ]
        ],
        "112": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "113": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "114": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "115": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "116": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "117": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "118": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "119": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "120": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "121": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "122": [
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "123": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "124": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "125": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "126": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "127": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "128": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "129": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "130": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "131": [
            [
                true,
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "132": [
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "133": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "134": [
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "135": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "136": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ]
        ],
        "137": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "138": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ]
        ],
        "139": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "140": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ]
        ],
        "141": [
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "142": [
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "143": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "144": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "145": [
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                false
            ]
        ],
        "146": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "147": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "148": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "149": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "150": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "151": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                false
            ]
        ],
        "152": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ]
        ],
        "153": [
            [
                false
            ],
            [
                false
            ],
            [
                -3
            ],
            [
                false
            ],
            [
                -3
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "154": [
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ]
        ],
        "155": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "156": [
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "157": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "158": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "159": [
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                -3
            ],
            [
                false
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ]
        ],
        "160": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ]
        ],
        "161": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "162": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "163": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "164": [
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                false
            ]
        ],
        "165": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "166": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "167": [
            [
                true,
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                true,
                -4
            ],
            [
                -4
            ],
            [
                true,
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                false
            ]
        ],
        "168": [
            [
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "169": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "170": [
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "171": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "172": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "173": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "174": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "175": [
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ]
        ],
        "176": [
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ]
        ],
        "177": [
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "178": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "179": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                false
            ],
            [
                true,
                false
            ],
            [
                false
            ]
        ],
        "180": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "181": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "182": [
            [
                true,
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                false
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "183": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "184": [
            [
                false
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "185": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                false
            ],
            [
                -4
            ]
        ],
        "186": [
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ],
            [
                false
            ]
        ],
        "187": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                false
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                false
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "188": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "189": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "190": [
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ]
        ],
        "191": [
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                -2
            ]
        ],
        "192": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "193": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "194": [
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "195": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "196": [
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ]
        ],
        "197": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "198": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "199": [
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ]
        ],
        "200": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "201": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "202": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "203": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "204": [
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "205": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "206": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "207": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "208": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "209": [
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ]
        ],
        "210": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "211": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "212": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "213": [
            [
                true,
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -4
            ],
            [
                -2
            ],
            [
                true,
                -4
            ],
            [
                -2
            ],
            [
                true,
                -4
            ],
            [
                true,
                -4
            ],
            [
                -2
            ]
        ],
        "214": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "215": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "216": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "217": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "218": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "219": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "220": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "221": [
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "222": [
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ]
        ],
        "223": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ]
        ],
        "224": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "225": [
            [
                true,
                true,
                -3
            ],
            [
                true,
                true,
                -3
            ],
            [
                true,
                true,
                -3
            ],
            [
                true,
                true,
                -3
            ],
            [
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                true,
                true,
                -3
            ],
            [
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ]
        ],
        "226": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "227": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "228": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "229": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "230": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "231": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "232": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "233": [
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ]
        ],
        "234": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "235": [
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "236": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "237": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "238": [
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ]
        ],
        "239": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "240": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "241": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "242": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "243": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "244": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "245": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "246": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "247": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "248": [
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "249": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "250": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "251": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "252": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "253": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "254": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "255": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "256": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "257": [
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ]
        ],
        "258": [
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "259": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "260": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "261": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "262": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "263": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "264": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "265": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "266": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "267": [
            [
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -3
            ]
        ],
        "268": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "269": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "270": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "271": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "272": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "273": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "274": [
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "275": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ]
        ],
        "276": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "277": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "278": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "279": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "280": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "281": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "282": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "283": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "284": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "285": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "286": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "287": [
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "288": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "289": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                -2
            ]
        ],
        "290": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                -2
            ]
        ],
        "291": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "292": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "293": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "294": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "295": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "296": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "297": [
            [
                true,
                true,
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                -2
            ]
        ],
        "298": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "299": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "300": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                -2
            ]
        ],
        "301": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "302": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "303": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "304": [
            [
                -4
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "305": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ]
        ],
        "306": [
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "307": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "308": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "309": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "310": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "311": [
            [
                true,
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "312": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "313": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ]
        ],
        "314": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "315": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "316": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                -2
            ],
            [
                -4
            ]
        ],
        "317": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "318": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "319": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "320": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "321": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "322": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "323": [
            [
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                -3
            ]
        ],
        "324": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "325": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -2
            ]
        ],
        "326": [
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ]
        ],
        "327": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                -2
            ]
        ],
        "328": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "329": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "330": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "331": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "332": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "333": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "334": [
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                -2
            ]
        ],
        "335": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "336": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "337": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "338": [
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "339": [
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "340": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "341": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "342": [
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "343": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "344": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "345": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "346": [
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "347": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "348": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "349": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "350": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "351": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "352": [
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                -3
            ]
        ],
        "353": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                -4
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "354": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "355": [
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "356": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "357": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "358": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "359": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "360": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "361": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "362": [
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                true,
                true,
                -3
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "363": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "364": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "365": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "366": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "367": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ]
        ],
        "368": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "369": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "370": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "371": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "372": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "373": [
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                -2
            ]
        ],
        "374": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                -2
            ]
        ],
        "375": [
            [
                -2
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "376": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "377": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "378": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "379": [
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ]
        ],
        "380": [
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "381": [
            [
                true,
                -2
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                true,
                -2
            ],
            [
                true,
                -2
            ],
            [
                -3
            ],
            [
                true,
                -2
            ],
            [
                -3
            ],
            [
                -3
            ],
            [
                true,
                -2
            ]
        ],
        "382": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "383": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "384": [
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "385": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "386": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "387": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -3
            ],
            [
                -2
            ],
            [
                true,
                true,
                -3
            ]
        ],
        "388": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ]
        ],
        "389": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -3
            ],
            [
                -4
            ]
        ],
        "390": [
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                true,
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                true,
                -2
            ]
        ],
        "391": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ],
        "392": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                -4
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "393": [
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ],
            [
                true,
                true,
                true,
                true,
                -3
            ]
        ],
        "394": [
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "395": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                true,
                true,
                -2
            ]
        ],
        "396": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                true
            ]
        ],
        "397": [
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ],
            [
                true,
                true,
                true,
                true,
                true,
                true,
                true,
                -2
            ]
        ],
        "398": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ]
        ],
        "399": [
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -4
            ],
            [
                -2
            ],
            [
                -4
            ],
            [
                -2
            ]
        ]
    },
    [
        [
            "{\"output\": \"YES\\nNO\\nNO\\nNO\\nNO\\nNO\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: NO != YES\"}",
            "{\"output\": \"YES\\nNO\\nYES\\nNO\\nNO\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: NO != YES\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nNO\\nNO\\nYES\\nNO\\nNO\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: NO != YES\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}",
            "{\"output\": \"YES\\nNO\\nNO\\nYES\\nYES\\nNO\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: NO != YES\"}",
            "{\"output\": \"YES\\nNO\\nNO\\nYES\\nNO\\nNO\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: NO != YES\"}",
            "{\"output\": \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\", \"inputs\": \"6\\nabc\\nacb\\nbac\\nbca\\ncab\\ncba\\n\", \"expected\": \"YES\\nYES\\nYES\\nNO\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: YES != NO\"}"
        ],
        [
            "{\"output\": \"12\\n0\\n360\\n999999999\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 16\"}",
            "{\"output\": \"20000\\n2000\\n400000\\n90\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20000 != 16\"}",
            "{\"output\": \"12\\n0\\n360\\n999999999\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 16\"}",
            "{\"output\": \"12\\n0\\n360\\n999999999\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 16\"}",
            "{\"output\": \"2001\\n201\\n40001\\n900000000\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2001 != 16\"}",
            "{\"output\": \"2001\\n201\\n40001\\n900000000\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2001 != 16\"}",
            "{\"output\": \"2001\\n201\\n40001\\n900000000\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2001 != 16\"}",
            "{\"output\": \"7\\n5\\n17\\n72\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 16\"}",
            "{\"output\": \"2001\\n201\\n40001\\n900000000\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2001 != 16\"}",
            "{\"output\": \"12\\n0\\n360\\n999999999\\n\", \"inputs\": \"4\\n4\\n2 2 1 2\\n3\\n0 1 2\\n5\\n4 3 2 3 4\\n9\\n9 9 9 9 9 9 9 9 9\\n\", \"expected\": \"16\\n2\\n432\\n430467210\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 16\"}"
        ],
        [
            "{\"output\": \"3\\n5\\n2\\n1\\n7\\n9\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"3\\n5\\n2\\n1\\n7\\n9\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"2\\n2\\n3\\n5\\n6\\n6\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 1\"}",
            "{\"output\": \"2\\n2\\n3\\n5\\n6\\n6\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 1\"}",
            "{\"output\": \"1\\n2\\n1\\n1\\n11\\n15\\n10\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"3\\n5\\n2\\n1\\n7\\n9\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"3\\n5\\n2\\n1\\n7\\n9\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"0\\n0\\n0\\n1\\n2\\n3\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"3\\n5\\n2\\n1\\n7\\n9\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"3\\n5\\n2\\n1\\n7\\n9\\n4\\n0\\n\", \"inputs\": \"8\\n6 3\\nWBWWWB\\n7 3\\nWWBWBWW\\n5 4\\nBWBWB\\n5 5\\nBBBBB\\n8 2\\nBWBWBBBB\\n10 2\\nWBBWBBWBBW\\n4 1\\nBBBB\\n3 2\\nWWW\\n\", \"expected\": \"2\\n1\\n2\\n1\\n4\\n3\\n4\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}"
        ],
        [
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}",
            "{\"output\": \"NO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"inputs\": \"14\\n1 0\\na\\n2 0\\nab\\n2 1\\nba\\n3 1\\nabb\\n3 2\\nabc\\n6 2\\nbacacd\\n6 2\\nfagbza\\n6 2\\nzwaafa\\n7 2\\ntaagaak\\n14 3\\nttrraakkttoorr\\n5 3\\ndebdb\\n5 4\\necadc\\n5 3\\ndebca\\n5 3\\nabaac\\n\", \"expected\": \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: NO != YES\"}"
        ],
        [
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"0\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"5\\n6\\n5\\n10\\n21\\n5\\n8\\n9\\n9\\n5\\n6\\n8\\n0\\n16\\n6\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"0\\n-1\\n2\\n0\\n2\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"2\\n3\\n5\\n4\\n7\\n3\\n3\\n3\\n3\\n3\\n4\\n2\\n0\\n4\\n2\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 2\"}",
            "{\"output\": \"5\\n6\\n5\\n10\\n21\\n5\\n8\\n9\\n9\\n5\\n6\\n8\\n0\\n16\\n6\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\"}",
            "{\"output\": \"5\\n6\\n5\\n10\\n21\\n5\\n8\\n9\\n9\\n5\\n6\\n8\\n0\\n16\\n6\\n\", \"inputs\": \"15\\n2 5\\n7 3\\n3 3\\n7 4 1\\n5 2\\n9 7 7 3 9\\n5 5\\n5 4 1 2 3\\n7 4\\n9 5 1 5 9 5 1\\n3 4\\n6 3 6\\n3 4\\n6 1 5\\n3 4\\n1 5 9\\n4 4\\n1 4 1 1\\n3 4\\n3 5 3\\n4 5\\n8 9 9 3\\n2 5\\n1 6\\n2 5\\n10 10\\n4 5\\n1 6 1 1\\n2 5\\n7 7\\n\", \"expected\": \"2\\n2\\n1\\n0\\n2\\n0\\n1\\n2\\n0\\n1\\n1\\n4\\n0\\n4\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 2\"}"
        ],
        [
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nFirst\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nFirst\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nFirst\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}",
            "{\"output\": \"Second\\nFirst\\nSecond\\nSecond\\nFirst\\nSecond\\n\", \"inputs\": \"6\\n1\\n3\\n5\\n100\\n999\\n1000\\n\", \"expected\": \"First\\nSecond\\nFirst\\nFirst\\nSecond\\nFirst\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Second != First\"}"
        ],
        [
            "{\"output\": \"0\\n5\\n0\\n14072\\n0\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"1\\n23\\n4000000000\\n728968\\n308229\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 23 != 9\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'k' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\"}",
            "{\"output\": \"0\\n0\\n0\\n4691\\n0\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"1\\n23\\n2000000000\\n728968\\n308229\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 23 != 9\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"4001066115\\n4001066115\\n4001066115\\n4001066115\\n4001066115\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4001066115 != 1\"}",
            "{\"output\": \"1\\n23\\n2000000000\\n728968\\n308229\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 23 != 9\"}",
            "{\"output\": \"1\\n19\\n0\\n726082\\n222987\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 19 != 9\"}",
            "{\"output\": \"1\\n3\\n1000000000\\n60978\\n21008\\n\", \"inputs\": \"5\\n2\\n1 2\\n6\\n10 2 3 6 1 3\\n4\\n1000000000 1000000000 1000000000 1000000000\\n15\\n60978 82265 78961 56708 39846 31071 4913 4769 29092 91348 64119 72421 98405 222 14294\\n8\\n19957 69913 37531 96991 57838 21008 14207 19198\\n\", \"expected\": \"1\\n9\\n0\\n189114\\n112141\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 3 != 9\"}"
        ],
        [
            "{\"output\": \"9\\n17\\n5\\n5\\n-1000\\n101\\n9\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 15\"}",
            "{\"output\": \"5\\n18\\n5\\n6\\n-1000\\n103\\n16\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 15\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\"}",
            "{\"output\": \"15\\n17\\n7\\n4\\n-1000\\n101\\n10\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=2: 7 != 8\"}",
            "{\"output\": \"15\\n34\\n8\\n6\\n-1000\\n103\\n31\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 34 != 17\"}",
            "{\"output\": \"4\\n9\\n15\\n8\\n1000\\n301\\n94\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 15\"}",
            "{\"output\": \"15\\n34\\n8\\n6\\n-1000\\n103\\n31\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 34 != 17\"}",
            "{\"output\": \"15\\n34\\n8\\n6\\n-1000\\n103\\n31\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 34 != 17\"}",
            "{\"output\": \"7\\n25\\n5\\n6\\n-1000\\n101\\n16\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 15\"}",
            "{\"output\": \"5\\n18\\n5\\n6\\n-1000\\n103\\n16\\n\", \"inputs\": \"7\\n5\\n1 2 3 4 5\\n4\\n9 9 8 8\\n6\\n-1 4 -1 0 5 -4\\n4\\n-1 2 4 -3\\n1\\n-1000\\n3\\n101 -99 101\\n20\\n-10 5 -8 10 6 -10 7 9 -2 -6 7 2 -4 6 -1 7 -6 -7 4 1\\n\", \"expected\": \"15\\n17\\n8\\n4\\n-1000\\n101\\n10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 15\"}"
        ],
        [
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"1\\n6\\n4\\n9\\n49\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 0\"}",
            "{\"output\": \"0\\n11\\n1\\n3\\n327\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 11 != 2\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n15\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 2\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n24\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 0 != 2\"}",
            "{\"output\": \"0\\n7\\n3\\n24\\n957\\n\", \"inputs\": \"5\\n1\\n2\\n4\\n3 1 3 2\\n2\\n1000 1000\\n3\\n1 1 1\\n19\\n2 4 1 6 2 8 5 4 2 10 5 10 8 7 4 3 2 6 10\\n\", \"expected\": \"0\\n2\\n1\\n3\\n19\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 7 != 2\"}"
        ],
        [
            "{\"execution time\": 9.34600830078125e-05}",
            "{\"execution time\": 9.274482727050781e-05}",
            "{\"execution time\": 9.632110595703125e-05}",
            "{\"execution time\": 9.608268737792969e-05}",
            "{\"execution time\": 0.00010776519775390625}",
            "{\"execution time\": 9.703636169433594e-05}",
            "{\"execution time\": 0.00014781951904296875}",
            "{\"execution time\": 9.72747802734375e-05}",
            "{\"execution time\": 0.0001354217529296875}",
            "{\"execution time\": 8.225440979003906e-05}"
        ],
        [
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError('max() iterable argument is empty')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[7, 2, 1], [6, 4, 2], [6, 5, 3], [3, 2, 1]]]\", \"expected\": \"15\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1891\", \"inputs\": \"[[[40, 655, 363], [554, 396, 682]]]\", \"expected\": \"1632\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"24\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"26\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"26\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"26\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"26\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"26\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"26\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"26\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"26\", \"inputs\": \"[[12, 9], 1]\", \"expected\": \"30\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"-45\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"270\", \"inputs\": \"[[-9, -5, -1, 2, 3, 5]]\", \"expected\": \"1350\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.0004937648773193359}",
            "{\"execution time\": 0.00049591064453125}",
            "{\"execution time\": 0.0005061626434326172}",
            "{\"execution time\": 0.0005190372467041016}",
            "{\"execution time\": 0.0005106925964355469}",
            "{\"execution time\": 0.0004603862762451172}",
            "{\"execution time\": 0.0005383491516113281}",
            "{\"execution time\": 0.0005445480346679688}",
            "{\"execution time\": 0.0007791519165039062}",
            "{\"execution time\": 0.0005888938903808594}"
        ],
        [
            "{\"execution time\": 1.6927719116210938e-05}",
            "{\"execution time\": 1.71661376953125e-05}",
            "{\"execution time\": 2.1219253540039062e-05}",
            "{\"execution time\": 1.5974044799804688e-05}",
            "{\"execution time\": 4.1484832763671875e-05}",
            "{\"execution time\": 1.9073486328125e-05}",
            "{\"execution time\": 1.9073486328125e-05}",
            "{\"execution time\": 1.71661376953125e-05}",
            "{\"execution time\": 1.8596649169921875e-05}",
            "{\"execution time\": 2.3126602172851562e-05}"
        ],
        [
            "{\"output\": \"18\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\"}",
            "{\"output\": \"0\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'<=' not supported between instances of 'str' and 'int'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\"}",
            "{\"output\": \"0\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['1', '12', 1, 8]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 3, 4, 2]]\", \"expected\": \"[-2, -1, 0, 2, 3]\"}",
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 3, 4, 2]]\", \"expected\": \"[-2, -1, 0, 2, 3]\"}",
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 3, 4, 2]]\", \"expected\": \"[-2, -1, 0, 2, 3]\"}",
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 3, 4, 2]]\", \"expected\": \"[-2, -1, 0, 2, 3]\"}",
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 3, 4, 2]]\", \"expected\": \"[-2, -1, 0, 2, 3]\"}",
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 3, 4, 2]]\", \"expected\": \"[-2, -1, 0, 2, 3]\"}",
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 3, 4, 2]]\", \"expected\": \"[-2, -1, 0, 2, 3]\"}",
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 3, 4, 2]]\", \"expected\": \"[-2, -1, 0, 2, 3]\"}",
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 3, 4, 2]]\", \"expected\": \"[-2, -1, 0, 2, 3]\"}",
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 3, 4, 2]]\", \"expected\": \"[-2, -1, 0, 2, 3]\"}"
        ],
        [
            "{\"output\": \"[0, 1, 0, -1, 2]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 1, 0, 0, 2]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\"}",
            "{\"output\": \"[0, 1, 0, 0, 2]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 1, 0, -1, 2]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 1, 0, -1, 2]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 1, 0, 0, 2]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 1, 0, 0, 1]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 1, 0, 0, 1]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[0, 1, 0, -1, 2]\", \"inputs\": \"[4, [[0, 2], [1, 2], [3, 1], [1, 1], [2, 1]]]\", \"expected\": \"[0, 1, 1, 0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"73\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"27\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"73\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"73\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"79\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"73\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"83\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"79\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"83\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"73\", \"inputs\": \"[[1, 2, 4]]\", \"expected\": \"141\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 4, 1, 3]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 1, 4, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"['52233']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['52233']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['52233']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['52233']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"['19431832444439006895006189596466887181869887222990']\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['52233']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"21\", \"inputs\": \"['58957479549437162345618928832412218355982224525842']\", \"expected\": \"32\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['52233']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['52233']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['52233']\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5]\", \"inputs\": \"[5, 2]\", \"expected\": \"[4, 5]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 0]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}"
        ],
        [
            "{\"execution time\": 2.47955322265625e-05}",
            "{\"execution time\": 2.1696090698242188e-05}",
            "{\"execution time\": 2.47955322265625e-05}",
            "{\"execution time\": 2.384185791015625e-05}",
            "{\"execution time\": 0.0001399517059326172}",
            "{\"execution time\": 1.4543533325195312e-05}",
            "{\"execution time\": 1.1920928955078125e-05}",
            "{\"execution time\": 1.9073486328125e-05}",
            "{\"execution time\": 1.52587890625e-05}",
            "{\"execution time\": 1.9073486328125e-05}"
        ],
        [
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[10]\", \"expected\": \"182\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ''\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[10]\", \"expected\": \"182\"}",
            "{\"output\": \"385\", \"inputs\": \"[10]\", \"expected\": \"182\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"55\", \"inputs\": \"[10]\", \"expected\": \"182\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"385\", \"inputs\": \"[10]\", \"expected\": \"182\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ''\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[10]\", \"expected\": \"182\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ''\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[10]\", \"expected\": \"182\"}",
            "{\"output\": \"55\", \"inputs\": \"[10]\", \"expected\": \"182\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"55\", \"inputs\": \"[10]\", \"expected\": \"182\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"385\", \"inputs\": \"[10]\", \"expected\": \"182\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"inf\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"inf\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"inf\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"inf\", \"inputs\": \"[[1, 2, 3, 2], [1, 2, 3, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"36\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"36\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"26\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"72\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"32\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"36\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"72\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"36\", \"inputs\": \"[[20, 1, 15], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"27\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"27\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"27\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"32\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"27\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"27\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"27\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"27\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[5, 4]\", \"expected\": \"18\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 1.3589859008789062e-05}",
            "{\"execution time\": 1.2636184692382812e-05}",
            "{\"execution time\": 1.1682510375976562e-05}",
            "{\"execution time\": 1.7881393432617188e-05}",
            "{\"execution time\": 9.775161743164062e-06}",
            "{\"execution time\": 9.059906005859375e-06}",
            "{\"execution time\": 8.106231689453125e-06}",
            "{\"execution time\": 1.0967254638671875e-05}",
            "{\"execution time\": 1.049041748046875e-05}",
            "{\"execution time\": 1.049041748046875e-05}"
        ],
        [
            "{\"execution time\": 0.00029969215393066406}",
            "{\"execution time\": 0.0003654956817626953}",
            "{\"execution time\": 0.0005028247833251953}",
            "{\"execution time\": 0.0004200935363769531}",
            "{\"output\": \"cfe\", \"inputs\": \"['egcfe']\", \"expected\": \"efcfe\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.00037097930908203125}",
            "{\"output\": \"cfe\", \"inputs\": \"['egcfe']\", \"expected\": \"efcfe\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"cfe\", \"inputs\": \"['egcfe']\", \"expected\": \"efcfe\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.003587961196899414}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['egcfe']\", \"expected\": \"efcfe\"}"
        ],
        [
            "{\"output\": \"7\", \"inputs\": \"['0011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['0011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['0011']\", \"expected\": \"2\"}",
            "{\"output\": \"7\", \"inputs\": \"['0011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['0011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['0011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['0011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['0011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['0011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['0011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 4.696846008300781e-05}",
            "{\"execution time\": 2.5987625122070312e-05}",
            "{\"execution time\": 2.5033950805664062e-05}",
            "{\"execution time\": 2.7418136596679688e-05}",
            "{\"execution time\": 2.4080276489257812e-05}",
            "{\"execution time\": 2.2411346435546875e-05}",
            "{\"execution time\": 2.384185791015625e-05}",
            "{\"execution time\": 2.193450927734375e-05}",
            "{\"execution time\": 1.9550323486328125e-05}",
            "{\"execution time\": 2.4557113647460938e-05}"
        ],
        [
            "{\"execution time\": 2.9087066650390625e-05}",
            "{\"execution time\": 3.4332275390625e-05}",
            "{\"execution time\": 2.765655517578125e-05}",
            "{\"execution time\": 2.1457672119140625e-05}",
            "{\"execution time\": 3.1948089599609375e-05}",
            "{\"execution time\": 2.8371810913085938e-05}",
            "{\"execution time\": 2.5033950805664062e-05}",
            "{\"execution time\": 2.8133392333984375e-05}",
            "{\"execution time\": 2.3603439331054688e-05}",
            "{\"execution time\": 2.2411346435546875e-05}"
        ],
        [
            "{\"execution time\": 2.2411346435546875e-05}",
            "{\"execution time\": 2.7894973754882812e-05}",
            "{\"execution time\": 2.6464462280273438e-05}",
            "{\"execution time\": 3.147125244140625e-05}",
            "{\"execution time\": 2.7894973754882812e-05}",
            "{\"execution time\": 2.3365020751953125e-05}",
            "{\"execution time\": 2.193450927734375e-05}",
            "{\"execution time\": 2.3365020751953125e-05}",
            "{\"execution time\": 1.8596649169921875e-05}",
            "{\"execution time\": 1.430511474609375e-05}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[1, 9, 5, 4, 10, 8, 10, 2, 2, 3, 1, 2, 9, 9, 5, 1, 3, 9, 3, 3, 5, 5, 1, 10, 10, 6, 8, 4, 5, 6, 8, 5, 6, 9, 4, 2, 3, 4, 6, 5, 1, 3, 3, 1, 7, 8, 6, 5, ...(truncated) ...5, 8, 10, 7, 5, 3, 1, 6, 1, 9, 3, 10, 4, 1, 8, 7, 2, 6, 2, 6, 1, 4, 7, 4, 7, 10, 10, 9, 5, 6, 9, 1, 9, 10, 10, 6, 3, 4, 4, 1, 8, 3, 1, 1, 3, 9, 1, 7]]\", \"expected\": \"False\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[1, 9, 5, 4, 10, 8, 10, 2, 2, 3, 1, 2, 9, 9, 5, 1, 3, 9, 3, 3, 5, 5, 1, 10, 10, 6, 8, 4, 5, 6, 8, 5, 6, 9, 4, 2, 3, 4, 6, 5, 1, 3, 3, 1, 7, 8, 6, 5, ...(truncated) ...5, 8, 10, 7, 5, 3, 1, 6, 1, 9, 3, 10, 4, 1, 8, 7, 2, 6, 2, 6, 1, 4, 7, 4, 7, 10, 10, 9, 5, 6, 9, 1, 9, 10, 10, 6, 3, 4, 4, 1, 8, 3, 1, 1, 3, 9, 1, 7]]\", \"expected\": \"False\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[7847, 56680, 61298, 60049, 43559, 27871, 73321, 22091, 48242, 86911, 16998, 58717, 36308, 32974, 64809, 30863, 68736, 27819, 1447, 87462, 22866, 375...(truncated) ...5286, 33951, 72981, 68466, 44339, 45396, 88872, 55539, 961, 66984, 74216, 9898, 54406, 35388, 89568, 12988, 49240, 63981, 43284, 53589, 84889, 20161]]\", \"expected\": \"False\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\"}",
            "{\"output\": \"cbabb\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"aaa\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"ca\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"bazab\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"ca\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"cbabb\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\"}",
            "{\"output\": \"cbabb\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for -: 'str' and 'int'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['cbabc']\", \"expected\": \"baabc\"}"
        ],
        [
            "{\"execution time\": 0.012813329696655273}",
            "{\"execution time\": 0.004952669143676758}",
            "{\"execution time\": 0.015419483184814453}",
            "{\"execution time\": 0.004505157470703125}",
            "{\"execution time\": 0.005528926849365234}",
            "{\"execution time\": 0.005675315856933594}",
            "{\"execution time\": 0.005946159362792969}",
            "{\"execution time\": 0.0037353038787841797}",
            "{\"execution time\": 0.004571199417114258}",
            "{\"execution time\": 0.012059450149536133}"
        ],
        [
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 3, 2, 3, 1, 3], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[3, 3]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 0]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 1]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2, 2, 2, 2, 0]\", \"inputs\": \"[2, [[1, 7], [1, 22], [1, 24], [1, 29], [1, 45], [1, 60], [1, 62], [1, 80], [2, 61], [2, 87], [2, 90]], 5, [100, 96, 77, 72, 99, 21, 27]]\", \"expected\": \"[2, 2, 2, 2, 2, 2, 1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"NameError(\\\"name 'i' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\"}",
            "{\"output\": \"[5, 5, 5, 5]\", \"inputs\": \"[7, [[5, 1], [7, 8], [6, 14], [3, 19], [1, 30], [7, 36], [6, 47], [3, 49], [5, 65], [3, 70], [6, 85], [5, 98]], 8, [71, 29, 63, 59]]\", \"expected\": \"[5, 7, 7, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[5, 5, 5, 5]\", \"inputs\": \"[7, [[5, 1], [7, 8], [6, 14], [3, 19], [1, 30], [7, 36], [6, 47], [3, 49], [5, 65], [3, 70], [6, 85], [5, 98]], 8, [71, 29, 63, 59]]\", \"expected\": \"[5, 7, 7, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 0]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 3]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 1]\", \"inputs\": \"[3, [[1, 3], [1, 5], [2, 6]], 5, [10, 11]]\", \"expected\": \"[1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.18451404571533203}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 5, 6, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 2, 5, 6, 7, 8, 9]\", \"inputs\": \"[[1, 6, 7, 8], [1, 7, 2], [2, 9, 5]]\", \"expected\": \"[5, 6, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[3, -2]\", \"expected\": \"3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[3, -2]\", \"expected\": \"3\"}",
            "{\"output\": \"-1\", \"inputs\": \"[3, -2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[3, -2]\", \"expected\": \"3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[3, -2]\", \"expected\": \"3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[3, -2]\", \"expected\": \"3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[3, -2]\", \"expected\": \"3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[3, -2]\", \"expected\": \"3\"}",
            "{\"output\": \"1\", \"inputs\": \"[1, 1]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[6, 8, 9]\", \"inputs\": \"[[1, 2, 3, 4], [2, 4, 5, 9], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[6, 8, 9]\", \"inputs\": \"[[1, 2, 3, 4], [2, 4, 5, 9], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[6, 8, 9]\", \"inputs\": \"[[1, 2, 3, 4], [2, 4, 5, 9], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[6, 8, 9]\", \"inputs\": \"[[1, 2, 3, 4], [2, 4, 5, 9], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\"}",
            "{\"output\": \"[6, 8, 9]\", \"inputs\": \"[[1, 2, 3, 4], [2, 4, 5, 9], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[6, 7, -1]\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1, -1]\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[4, 3, 1, 2], [2, 4, 9, 5], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\"}",
            "{\"output\": \"[6, 8, 9]\", \"inputs\": \"[[1, 2, 3, 4], [2, 4, 5, 9], [[4, 1], [1, 3], [2, 5]]]\", \"expected\": \"[6, 10, 7]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 3.504753112792969e-05}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 4.839897155761719e-05}",
            "{\"execution time\": 3.2901763916015625e-05}",
            "{\"execution time\": 3.981590270996094e-05}",
            "{\"output\": \"16\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 4.887580871582031e-05}",
            "{\"execution time\": 4.5299530029296875e-05}",
            "{\"execution time\": 3.6716461181640625e-05}",
            "{\"execution time\": 3.504753112792969e-05}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.051987648010253906}",
            "{\"execution time\": 0.06405043601989746}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.046843528747558594}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 5.054473876953125e-05}",
            "{\"execution time\": 6.580352783203125e-05}",
            "{\"execution time\": 4.9114227294921875e-05}",
            "{\"execution time\": 3.7670135498046875e-05}",
            "{\"execution time\": 5.7220458984375e-05}",
            "{\"execution time\": 5.888938903808594e-05}",
            "{\"execution time\": 6.914138793945312e-05}",
            "{\"execution time\": 4.7206878662109375e-05}",
            "{\"execution time\": 6.175041198730469e-05}",
            "{\"execution time\": 6.842613220214844e-05}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.0652894973754883}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"2\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 3, 6]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.9609432220458984}",
            "{\"execution time\": 1.279977560043335}",
            "{\"execution time\": 1.2295069694519043}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 3, 3, 3, 5]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 3, 1, 4]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"10\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[3, 2, 2]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[3, 2, 2]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[2, 5, 1]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"-1\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[['ab', 'b']]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[['aa', 'ab', 'bc']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"[[1, 3, 6, 4, 1, 2], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 3, 6, 4, 1, 2], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 3, 6, 4, 1, 2], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[85, -54, -41, -64, -64, 8, 38, -71, -17, 29], 27]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.1810011863708496}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 3, 6, 4, 1, 2], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 3, 6, 4, 1, 2], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.20555448532104492}",
            "{\"execution time\": 0.2626771926879883}",
            "{\"execution time\": 0.24460768699645996}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873...(truncated) ...873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873]]\", \"expected\": \"500500\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 3, 1, 2, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[496, 114, 410, 111, 10, 177, 364, 278, 90, 161, 382, 30, 145, 145, 499, 239, 199, 211, 476, 151, 209, 151, 436, 193, 280, 219, 88, 368, 167, 219, 38...(truncated) ... 306, 77, 288, 254, 350, 173, 327, 266, 372, 436, 3, 334, 60, 113, 435, 117, 152, 329, 289, 159, 377, 18, 128, 440, 247, 338, 435, 138, 340, 88, 369]]\", \"expected\": \"27\"}",
            "{\"output\": \"14\", \"inputs\": \"[[1, 3, 1, 2, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[496, 114, 410, 111, 10, 177, 364, 278, 90, 161, 382, 30, 145, 145, 499, 239, 199, 211, 476, 151, 209, 151, 436, 193, 280, 219, 88, 368, 167, 219, 38...(truncated) ... 306, 77, 288, 254, 350, 173, 327, 266, 372, 436, 3, 334, 60, 113, 435, 117, 152, 329, 289, 159, 377, 18, 128, 440, 247, 338, 435, 138, 340, 88, 369]]\", \"expected\": \"27\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873...(truncated) ...873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873]]\", \"expected\": \"500500\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 3, 1, 2, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873...(truncated) ...873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873]]\", \"expected\": \"500500\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 3, 1, 2, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873...(truncated) ...873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873, 873]]\", \"expected\": \"500500\"}"
        ],
        [
            "{\"execution time\": 1.1920928955078125e-05}",
            "{\"execution time\": 1.7881393432617188e-05}",
            "{\"output\": \"150\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"150\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.52587890625e-05}",
            "{\"execution time\": 1.3113021850585938e-05}",
            "{\"output\": \"150\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"150\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.2159347534179688e-05}",
            "{\"output\": \"150\", \"inputs\": \"[5, 10]\", \"expected\": \"60\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\"}",
            "{\"output\": \"2\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\"}",
            "{\"output\": \"2\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 5, 4], 5]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[0, 1, 0, 0, 1]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\"}",
            "{\"output\": \"10\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[5, 4, 2, 4]]\", \"expected\": \"8\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[[2, 3, 1], [1, 2, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 1], [1, 2, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 3, 1], [1, 2, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 6, 2, 4], [1, 9, 8, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 6, 2, 4], [1, 9, 8, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 6, 2, 4], [1, 9, 8, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 3, 1], [1, 2, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 3, 1], [1, 2, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 6, 2, 4], [1, 9, 8, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 6, 2, 4], [1, 9, 8, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 3, 4, 3, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"16\", \"inputs\": \"[[2, 5, 6, 10, 16]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[9, 7, 3, 6, 2]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[[2, 5, 6, 10, 16]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[9, 7, 3, 6, 2]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[[2, 5, 6, 10, 16]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[9, 7, 3, 6, 2]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[[2, 5, 6, 10, 16]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[9, 7, 3, 6, 2]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"inputs\": \"[[24]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[[2, 5, 6, 10, 16]]\", \"expected\": \"21\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[[3, 7]]\", \"inputs\": \"[10]\", \"expected\": \"[[3, 7], [5, 5]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[3, 7]]\", \"inputs\": \"[10]\", \"expected\": \"[[3, 7], [5, 5]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[3, 7]]\", \"inputs\": \"[10]\", \"expected\": \"[[3, 7], [5, 5]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[3, 7]]\", \"inputs\": \"[10]\", \"expected\": \"[[3, 7], [5, 5]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[3, 7]]\", \"inputs\": \"[10]\", \"expected\": \"[[3, 7], [5, 5]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[3, 7]]\", \"inputs\": \"[10]\", \"expected\": \"[[3, 7], [5, 5]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[3, 7]]\", \"inputs\": \"[10]\", \"expected\": \"[[3, 7], [5, 5]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[3, 7]]\", \"inputs\": \"[10]\", \"expected\": \"[[3, 7], [5, 5]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[3, 7]]\", \"inputs\": \"[10]\", \"expected\": \"[[3, 7], [5, 5]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[3, 7]]\", \"inputs\": \"[10]\", \"expected\": \"[[3, 7], [5, 5]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 2.5510787963867188e-05}",
            "{\"execution time\": 2.47955322265625e-05}",
            "{\"execution time\": 3.075599670410156e-05}",
            "{\"execution time\": 2.5510787963867188e-05}",
            "{\"execution time\": 2.4318695068359375e-05}",
            "{\"execution time\": 2.193450927734375e-05}",
            "{\"execution time\": 2.5272369384765625e-05}",
            "{\"execution time\": 2.9325485229492188e-05}",
            "{\"execution time\": 2.4557113647460938e-05}",
            "{\"execution time\": 2.4557113647460938e-05}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"abcbca\", \"inputs\": \"['abc', 'bca', 'aaa']\", \"expected\": \"aaabca\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error\": \"TypeError(\\\"Solution.minimumString.<locals>.merge_all() missing 1 required positional argument: 's3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abc', 'bca', 'aaa']\", \"expected\": \"aaabca\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"aaabcabc\", \"inputs\": \"['abc', 'bca', 'aaa']\", \"expected\": \"aaabca\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 3, 1, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 3, 1, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 3, 1, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 3, 1, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 3, 1, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 3, 1, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 3, 1, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 3, 1, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 3, 1, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 3, 1, 1, 0], 3]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"inf\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"2\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['aabbaa', 3]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcac', 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[['one', 'two', 'three'], ['four', 'five'], ['six']]\", \"inputs\": \"[['one.two.three', 'four.five', 'six'], '.']\", \"expected\": \"['one', 'two', 'three', 'four', 'five', 'six']\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"14\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[10, 2]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['1011']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"7\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\"}",
            "{\"output\": \"7\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"['cbaaaabc', ['aaa', 'cb']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 5.555152893066406e-05}",
            "{\"execution time\": 5.626678466796875e-05}",
            "{\"execution time\": 5.8650970458984375e-05}",
            "{\"output\": \"gnrts\", \"inputs\": \"['string']\", \"expected\": \"rtsng\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 4.696846008300781e-05}",
            "{\"execution time\": 3.5762786865234375e-05}",
            "{\"execution time\": 4.076957702636719e-05}",
            "{\"execution time\": 4.6253204345703125e-05}",
            "{\"execution time\": 8.273124694824219e-05}",
            "{\"execution time\": 6.008148193359375e-05}"
        ],
        [
            "{\"execution time\": 0.09442543983459473}",
            "{\"execution time\": 0.06885886192321777}",
            "{\"execution time\": 0.773989200592041}",
            "{\"execution time\": 0.06866145133972168}",
            "{\"execution time\": 0.11505818367004395}",
            "{\"execution time\": 0.07103729248046875}",
            "{\"execution time\": 0.30324888229370117}",
            "{\"execution time\": 0.20588326454162598}",
            "{\"execution time\": 0.12675237655639648}",
            "{\"execution time\": 0.049791812896728516}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[3, 3, 3, 3, 7, 2, 2]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[3, 3, 3, 3, 7, 2, 2]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.17474675178527832}",
            "{\"output\": \"9317\", \"inputs\": \"[[1, 2, 2, 2, 2, 5, 8, 9, 9, 9, 10, 11, 11, 11, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15, 17, 18, 18, 19, 22, 22, 22, 23, 23, 23, 24, 24, 26, 26, 27, 27...(truncated) ...84, 99984, 99987, 99987, 99988, 99988, 99988, 99990, 99991, 99993, 99994, 99994, 99995, 99996, 99996, 99997, 99997, 99997, 99998, 99999, 99999], 4610]\", \"expected\": \"9356\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.1750354766845703}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: invalid syntax (<string>, line 42)\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 4, 6], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.1895902156829834}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: invalid syntax (<string>, line 43)\"}",
            "{\"execution time\": 0.26718854904174805}",
            "{\"execution time\": 0.17128610610961914}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 4, 6], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 3, 2]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 3, 2]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 3, 2]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[2, 1, 3]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 3, 2]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 3, 2]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 3, 2]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 3, 2]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 3, 3, 2]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.09160399436950684}",
            "{\"execution time\": 0.11772704124450684}",
            "{\"execution time\": 0.09152436256408691}",
            "{\"execution time\": 0.15320444107055664}",
            "{\"output\": \"165\", \"inputs\": \"[[73, 92], 33]\", \"expected\": \"132\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.08399438858032227}",
            "{\"execution time\": 0.0956258773803711}",
            "{\"execution time\": 0.11053228378295898}",
            "{\"output\": \"15\", \"inputs\": \"[[2, 3, 6, 1, 9, 2], 5]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.10442018508911133}"
        ],
        [
            "{\"output\": \"78\", \"inputs\": \"[[51, 71, 17, 24, 42]]\", \"expected\": \"88\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[51, 71, 17, 24, 42]]\", \"expected\": \"88\"}",
            "{\"output\": \"8\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"122\", \"inputs\": \"[[51, 71, 17, 24, 42]]\", \"expected\": \"88\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"78\", \"inputs\": \"[[51, 71, 17, 24, 42]]\", \"expected\": \"88\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.09440827369689941}",
            "{\"output\": \"78\", \"inputs\": \"[[51, 71, 17, 24, 42]]\", \"expected\": \"88\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.08174657821655273}",
            "{\"output\": \"8\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.06435489654541016}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[3, 2, 4], 2, 1]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[3, 2, 4], 2, 1]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[3, 1, 9, 6], 3, 0]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[2, 1, 3], 5]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[2, 1, 3], 5]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[2, 2, 1], 4]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 2.2172927856445312e-05}",
            "{\"execution time\": 1.9788742065429688e-05}",
            "{\"execution time\": 2.9087066650390625e-05}",
            "{\"execution time\": 2.7418136596679688e-05}",
            "{\"execution time\": 2.6702880859375e-05}",
            "{\"execution time\": 4.696846008300781e-05}",
            "{\"execution time\": 2.8371810913085938e-05}",
            "{\"execution time\": 2.09808349609375e-05}",
            "{\"execution time\": 4.38690185546875e-05}",
            "{\"execution time\": 1.8835067749023438e-05}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[9, 9, 10]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 9, 9]]\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[9, 9, 10]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[2, 1, 3, 3, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 1, 3, 3, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"400000004\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['1', '11']\", \"expected\": \"10\"}",
            "{\"output\": \"0\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"400000004\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['1', '11']\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3], [1, 2, 3], 4]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[9744, 5838], [1431, 1178], [4152, 3417], [9932, 6742], [6287, 3832], [3660, 885], [2140, 9362], [3985, 8356], [7511, 2020], [8436, 3182], [5389, 98...(truncated) ...4481], [3553, 8409], [4507, 4987], [8353, 853], [4744, 5941], [6186, 1950], [2523, 2746], [150, 8772], [8697, 5651], [5951, 7815], [9754, 7739]], 100]\", \"expected\": \"49\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[9744, 5838], [1431, 1178], [4152, 3417], [9932, 6742], [6287, 3832], [3660, 885], [2140, 9362], [3985, 8356], [7511, 2020], [8436, 3182], [5389, 98...(truncated) ...4481], [3553, 8409], [4507, 4987], [8353, 853], [4744, 5941], [6186, 1950], [2523, 2746], [150, 8772], [8697, 5651], [5951, 7815], [9754, 7739]], 100]\", \"expected\": \"49\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[9744, 5838], [1431, 1178], [4152, 3417], [9932, 6742], [6287, 3832], [3660, 885], [2140, 9362], [3985, 8356], [7511, 2020], [8436, 3182], [5389, 98...(truncated) ...4481], [3553, 8409], [4507, 4987], [8353, 853], [4744, 5941], [6186, 1950], [2523, 2746], [150, 8772], [8697, 5651], [5951, 7815], [9754, 7739]], 100]\", \"expected\": \"49\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[9744, 5838], [1431, 1178], [4152, 3417], [9932, 6742], [6287, 3832], [3660, 885], [2140, 9362], [3985, 8356], [7511, 2020], [8436, 3182], [5389, 98...(truncated) ...4481], [3553, 8409], [4507, 4987], [8353, 853], [4744, 5941], [6186, 1950], [2523, 2746], [150, 8772], [8697, 5651], [5951, 7815], [9754, 7739]], 100]\", \"expected\": \"49\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[9744, 5838], [1431, 1178], [4152, 3417], [9932, 6742], [6287, 3832], [3660, 885], [2140, 9362], [3985, 8356], [7511, 2020], [8436, 3182], [5389, 98...(truncated) ...4481], [3553, 8409], [4507, 4987], [8353, 853], [4744, 5941], [6186, 1950], [2523, 2746], [150, 8772], [8697, 5651], [5951, 7815], [9754, 7739]], 100]\", \"expected\": \"49\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[9744, 5838], [1431, 1178], [4152, 3417], [9932, 6742], [6287, 3832], [3660, 885], [2140, 9362], [3985, 8356], [7511, 2020], [8436, 3182], [5389, 98...(truncated) ...4481], [3553, 8409], [4507, 4987], [8353, 853], [4744, 5941], [6186, 1950], [2523, 2746], [150, 8772], [8697, 5651], [5951, 7815], [9754, 7739]], 100]\", \"expected\": \"49\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[9744, 5838], [1431, 1178], [4152, 3417], [9932, 6742], [6287, 3832], [3660, 885], [2140, 9362], [3985, 8356], [7511, 2020], [8436, 3182], [5389, 98...(truncated) ...4481], [3553, 8409], [4507, 4987], [8353, 853], [4744, 5941], [6186, 1950], [2523, 2746], [150, 8772], [8697, 5651], [5951, 7815], [9754, 7739]], 100]\", \"expected\": \"49\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[9744, 5838], [1431, 1178], [4152, 3417], [9932, 6742], [6287, 3832], [3660, 885], [2140, 9362], [3985, 8356], [7511, 2020], [8436, 3182], [5389, 98...(truncated) ...4481], [3553, 8409], [4507, 4987], [8353, 853], [4744, 5941], [6186, 1950], [2523, 2746], [150, 8772], [8697, 5651], [5951, 7815], [9754, 7739]], 100]\", \"expected\": \"49\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[9744, 5838], [1431, 1178], [4152, 3417], [9932, 6742], [6287, 3832], [3660, 885], [2140, 9362], [3985, 8356], [7511, 2020], [8436, 3182], [5389, 98...(truncated) ...4481], [3553, 8409], [4507, 4987], [8353, 853], [4744, 5941], [6186, 1950], [2523, 2746], [150, 8772], [8697, 5651], [5951, 7815], [9754, 7739]], 100]\", \"expected\": \"49\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[[9744, 5838], [1431, 1178], [4152, 3417], [9932, 6742], [6287, 3832], [3660, 885], [2140, 9362], [3985, 8356], [7511, 2020], [8436, 3182], [5389, 98...(truncated) ...4481], [3553, 8409], [4507, 4987], [8353, 853], [4744, 5941], [6186, 1950], [2523, 2746], [150, 8772], [8697, 5651], [5951, 7815], [9754, 7739]], 100]\", \"expected\": \"49\"}"
        ],
        [
            "{\"output\": \"13\", \"inputs\": \"[[8, 3, 9, 4, 6, 5, 3, 9, 8, 5], 1, 2]\", \"expected\": \"17\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[8, 3, 9, 4, 6, 5, 3, 9, 8, 5], 1, 2]\", \"expected\": \"17\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 1, 2, 1, 2, 1], 3, 3]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.44957590103149414}",
            "{\"error\": \"TypeError(\\\"argument of type 'int' is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 6, 7, 3, 1, 7], 3, 4]\", \"expected\": \"18\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 6, 7, 3, 1, 7], 3, 4]\", \"expected\": \"18\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 1, 2, 1, 2, 1], 3, 3]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.029078960418701172}",
            "{\"output\": \"91\", \"inputs\": \"[[41, 37, 91, 3], 2, 1]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"argument of type 'int' is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 6, 7, 3, 1, 7], 3, 4]\", \"expected\": \"18\"}"
        ],
        [
            "{\"execution time\": 5.4836273193359375e-06}",
            "{\"execution time\": 9.5367431640625e-06}",
            "{\"execution time\": 5.245208740234375e-06}",
            "{\"execution time\": 5.0067901611328125e-06}",
            "{\"execution time\": 6.198883056640625e-06}",
            "{\"execution time\": 4.76837158203125e-06}",
            "{\"execution time\": 3.0040740966796875e-05}",
            "{\"execution time\": 1.049041748046875e-05}",
            "{\"execution time\": 3.409385681152344e-05}",
            "{\"execution time\": 1.0251998901367188e-05}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[['alice', 'bob', 'charlie'], 'abc']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[5, [[0, 0, 1], [0, 2, 2], [1, 3, 2]]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[5, [[0, 0, 1], [0, 2, 10], [1, 3, 2]]]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[5, [[0, 0, 1], [0, 2, 2], [1, 3, 2]]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[5, [[0, 0, 1], [0, 2, 2], [1, 3, 2]]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[5, [[0, 1, 7], [1, 3, 2], [3, 4, 6]]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[5, [[0, 1, 7], [1, 3, 2], [3, 4, 6]]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[5, [[0, 0, 1], [0, 2, 2], [1, 3, 2]]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[5, [[0, 0, 1], [0, 2, 10], [1, 3, 2]]]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[5, [[0, 1, 7], [1, 3, 2], [3, 4, 6]]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[5, [[0, 1, 7], [1, 3, 2], [3, 4, 6]]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.021828651428222656}",
            "{\"execution time\": 0.008751869201660156}",
            "{\"execution time\": 0.021798133850097656}",
            "{\"execution time\": 0.009291887283325195}",
            "{\"execution time\": 0.02024555206298828}",
            "{\"execution time\": 0.015595674514770508}",
            "{\"output\": \"1\", \"inputs\": \"[1200, 1230]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.015148639678955078}",
            "{\"execution time\": 0.01670241355895996}",
            "{\"output\": \"1\", \"inputs\": \"[1200, 1230]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"['cdqy', 'cyqd']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"['cdqy', 'cyqd']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"['cdqy', 'cyqd']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"['cdqy', 'cyqd']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"['abcd', 'dacb']\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"inf\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[10, 5, 7, 9, 6, 4, 6, 1, 7, 6, 7, 6, 7, 2, 10, 9, 2, 9, 7, 10, 6, 6, 2, 4, 3, 4, 9, 3, 4, 7, 7, 3, 7, 10, 10, 3, 1, 3, 9, 10, 10, 6, 10, 6, 6, 7, 1,...(truncated) ..., 5, 4, 6, 7, 1, 8, 9, 6, 2, 4, 4, 9, 5, 9, 9, 8, 5, 3, 3, 6, 6, 3, 5, 10, 6, 8, 5, 7, 5, 2, 8, 2, 5, 8, 8, 10, 2, 4, 1, 9, 7, 8, 8, 10, 4, 10], 1000]\", \"expected\": \"0\"}",
            "{\"output\": \"2\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-2\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[4, 3, 2, 4], 2]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[1, 1000000000, 1]\", \"expected\": \"24894045\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[1, 1000000000, 1]\", \"expected\": \"24894045\"}",
            "{\"output\": \"5\", \"inputs\": \"[10, 20, 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[10, 20, 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[10, 20, 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[1, 1000000000, 1]\", \"expected\": \"24894045\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[1, 1000000000, 1]\", \"expected\": \"24894045\"}",
            "{\"output\": \"5\", \"inputs\": \"[10, 20, 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[1, 1000000000, 1]\", \"expected\": \"24894045\"}",
            "{\"output\": \"5\", \"inputs\": \"[10, 20, 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TypeError('can only concatenate str (not \\\"int\\\") to str')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\"}",
            "{\"output\": \"False\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError('can only concatenate str (not \\\"int\\\") to str')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\"}",
            "{\"output\": \"False\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError('can only concatenate str (not \\\"int\\\") to str')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\"}",
            "{\"error\": \"TypeError('can only concatenate str (not \\\"int\\\") to str')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\"}",
            "{\"output\": \"False\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError('can only concatenate str (not \\\"int\\\") to str')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\"}",
            "{\"output\": \"False\", \"inputs\": \"['abc', 'ad']\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"['L_RL__R']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['L_RL__R']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['L_RL__R']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.2159347534179688e-05}",
            "{\"output\": \"0\", \"inputs\": \"['L_RL__R']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['L_RL__R']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['L_RL__R']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['L_RL__R']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['L_RL__R']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 3.552436828613281e-05}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"4\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['abcd', 'cdab', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"-1\", \"inputs\": \"[[8, 2, 1], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 2, 1], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 2, 1], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 2, 1], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 2, 1], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 2, 1], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 2, 1], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 2, 1], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 2, 1], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[8, 2, 1], 7]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[[1, 1], [1, 1]]\", \"inputs\": \"[[[1, 1], [1, 1]]]\", \"expected\": \"[[24, 12], [8, 6]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[4, 1], [4, 1]]\", \"inputs\": \"[[[1, 2], [3, 4]]]\", \"expected\": \"[[24, 12], [8, 6]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'j' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[[1, 2], [3, 4]]]\", \"expected\": \"[[24, 12], [8, 6]]\"}",
            "{\"output\": \"[[4, 1], [4, 1]]\", \"inputs\": \"[[[1, 2], [3, 4]]]\", \"expected\": \"[[24, 12], [8, 6]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[3, 1], [3, 1]]\", \"inputs\": \"[[[1, 2], [3, 4]]]\", \"expected\": \"[[24, 12], [8, 6]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[1, 3], [1, 3]]\", \"inputs\": \"[[[1, 3], [1, 3]]]\", \"expected\": \"[[24, 12], [8, 6]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[4, 1], [4, 1]]\", \"inputs\": \"[[[1, 2], [3, 4]]]\", \"expected\": \"[[24, 12], [8, 6]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[3, 1], [3, 1]]\", \"inputs\": \"[[[1, 2], [3, 4]]]\", \"expected\": \"[[24, 12], [8, 6]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[4, 1], [4, 1]]\", \"inputs\": \"[[[1, 2], [3, 4]]]\", \"expected\": \"[[24, 12], [8, 6]]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.5051803588867188}"
        ],
        [
            "{\"output\": \"14\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"148\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"148\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"148\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[2, 0, 1], 4]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['10110', '00011', 4]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"8\", \"inputs\": \"[[[1, 3], [5, 8]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[[1, 3], [5, 8]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[[1, 3], [5, 8]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[[1, 3], [5, 8]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[[1, 3], [5, 8]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[[1, 3], [5, 8]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[[1, 3], [5, 8]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"13\", \"inputs\": \"[[[3, 6], [1, 5], [4, 7]]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 5, 4, 2], 2]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[3, 4, 5, 1, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 4, 5, 1, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[2, 1, 4]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 4, 5, 1, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 4, 5, 1, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 4, 5, 1, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 4, 5, 1, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 4, 5, 1, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 4, 5, 1, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 4, 5, 1, 2]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"7\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['2908305']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['2908305']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['2245047']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['2908305']\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"21\", \"inputs\": \"[[2, 3, 4, 5, 7, 7, 8, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"38\", \"inputs\": \"[[2, 3, 4, 5, 7, 7, 8, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"inputs\": \"[[2, 3, 4, 5, 7, 7, 8, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"inputs\": \"[[2, 3, 4, 5, 7, 7, 8, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"inputs\": \"[[2, 3, 4, 5, 7, 7, 8, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"inputs\": \"[[2, 3, 4, 5, 7, 7, 8, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[9, 8, 7, 7, 5, 4, 3, 2]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[2, 3, 4, 5, 7, 7, 8, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"inputs\": \"[[2, 3, 4, 5, 7, 7, 8, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"24\", \"inputs\": \"[[2, 3, 4, 5, 7, 7, 8, 9]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"101\", \"inputs\": \"['010']\", \"expected\": \"001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"101\", \"inputs\": \"['010']\", \"expected\": \"001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"101\", \"inputs\": \"['010']\", \"expected\": \"001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"101\", \"inputs\": \"['010']\", \"expected\": \"001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.3589859008789062e-05}",
            "{\"execution time\": 2.3603439331054688e-05}",
            "{\"execution time\": 1.430511474609375e-05}",
            "{\"execution time\": 1.3828277587890625e-05}",
            "{\"execution time\": 1.8596649169921875e-05}",
            "{\"execution time\": 2.3603439331054688e-05}"
        ],
        [
            "{\"output\": \"7\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 0, 2, 0, 1, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[[18]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[18]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[18]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 4, 9]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 4, 9]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 3, 4, 9]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 4, 9]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 4, 9]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 4, 9]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1000000006\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1000000007\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3], 6, 6]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.00037932395935058594}",
            "{\"execution time\": 0.0005705356597900391}",
            "{\"execution time\": 0.00039577484130859375}",
            "{\"execution time\": 0.0005717277526855469}",
            "{\"execution time\": 0.0003955364227294922}",
            "{\"execution time\": 0.0005850791931152344}",
            "{\"execution time\": 0.0003840923309326172}",
            "{\"execution time\": 0.0005974769592285156}",
            "{\"execution time\": 0.0003783702850341797}",
            "{\"execution time\": 0.0003943443298339844}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[2, 1, 2, 2, 3, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"22\", \"inputs\": \"[[0, 2, 3, 3, 6, 6, 7, 7]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"22\", \"inputs\": \"[[0, 2, 3, 3, 6, 6, 7, 7]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"22\", \"inputs\": \"[[0, 2, 3, 3, 6, 6, 7, 7]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 5, 4, 5], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5], 9]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5], 9]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5], 9]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5], 9]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5], 9]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5], 9]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5], 9]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 5, 4, 5], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5], 9]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"20\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"82\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[5, 3, 4, 1, 1]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[2, 4, 6, 8], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 4, 6, 8], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3], 5]\", \"expected\": \"2\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 4, 6, 8], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 4, 6, 8], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 3], 5]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 4, 6, 8], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3], 5]\", \"expected\": \"2\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 4, 6, 8], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[2, 4, 6, 8], 3]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100011\", \"inputs\": \"['100011001', 3]\", \"expected\": \"11001\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"14\", \"inputs\": \"[[8, 10], [1, 2, 2, 3, 4, 5, 7, 8]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[10, 8], [1, 2, 2, 3, 4, 5, 7, 8]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[8, 10], [1, 2, 2, 3, 4, 5, 7, 8]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"18\", \"inputs\": \"[[10, 8], [8, 7, 5, 4, 3, 2, 2, 1]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[10, 8], [1, 2, 2, 3, 4, 5, 7, 8]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"14\", \"inputs\": \"[[8, 10], [1, 2, 2, 3, 4, 5, 7, 8]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[10, 8], [1, 2, 2, 3, 4, 5, 7, 8]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[10, 8], [1, 2, 2, 3, 4, 5, 7, 8]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[10, 8], [1, 2, 2, 3, 4, 5, 7, 8]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[10, 8], [1, 2, 2, 3, 4, 5, 7, 8]]\", \"expected\": \"16\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100\", \"inputs\": \"[[8, 6, 5, 2], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"245\", \"inputs\": \"[[8, 6, 5, 2], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for ** or pow(): 'tuple' and 'int'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\"}",
            "{\"output\": \"129\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"100\", \"inputs\": \"[[8, 6, 5, 2], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"21\", \"inputs\": \"[[2, 6, 5, 8], 2]\", \"expected\": \"261\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"504\", \"inputs\": \"[[12, 6, 1, 2, 7]]\", \"expected\": \"77\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"180\", \"inputs\": \"[[1, 10, 3, 4, 19]]\", \"expected\": \"133\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"66\", \"inputs\": \"[[12, 6, 1, 2, 7]]\", \"expected\": \"77\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"180\", \"inputs\": \"[[1, 10, 3, 4, 19]]\", \"expected\": \"133\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"180\", \"inputs\": \"[[1, 10, 3, 4, 19]]\", \"expected\": \"133\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"66\", \"inputs\": \"[[12, 6, 1, 2, 7]]\", \"expected\": \"77\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"66\", \"inputs\": \"[[12, 6, 1, 2, 7]]\", \"expected\": \"77\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"180\", \"inputs\": \"[[1, 10, 3, 4, 19]]\", \"expected\": \"133\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"66\", \"inputs\": \"[[12, 6, 1, 2, 7]]\", \"expected\": \"77\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"66\", \"inputs\": \"[[12, 6, 1, 2, 7]]\", \"expected\": \"77\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.009642601013183594}",
            "{\"execution time\": 0.009081840515136719}",
            "{\"execution time\": 0.009879112243652344}",
            "{\"execution time\": 0.008368253707885742}",
            "{\"execution time\": 0.012187719345092773}",
            "{\"execution time\": 0.012316465377807617}",
            "{\"execution time\": 0.0011522769927978516}",
            "{\"execution time\": 0.009139060974121094}",
            "{\"execution time\": 0.012163162231445312}",
            "{\"execution time\": 0.009718656539916992}"
        ],
        [
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2, 2]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-1, -1]\", \"inputs\": \"[['1', '2', 'prev', 'prev', 'prev']]\", \"expected\": \"[2, 1, -1]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[10, 10, 10, 3, 1, 1]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 2, 3, 2, 3]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[3, 2, 0, 1, 0], [6, 5, 0]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"37\", \"inputs\": \"[10, 3]\", \"expected\": \"19\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[10, 3]\", \"expected\": \"19\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0003769397735595703}",
            "{\"execution time\": 0.0002613067626953125}",
            "{\"output\": \"37\", \"inputs\": \"[10, 3]\", \"expected\": \"19\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"37\", \"inputs\": \"[10, 3]\", \"expected\": \"19\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"37\", \"inputs\": \"[10, 3]\", \"expected\": \"19\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"37\", \"inputs\": \"[10, 3]\", \"expected\": \"19\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[10, 3]\", \"expected\": \"19\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[10, 3]\", \"expected\": \"19\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.009009599685668945}",
            "{\"execution time\": 0.008954763412475586}",
            "{\"execution time\": 0.010793924331665039}",
            "{\"execution time\": 0.009216547012329102}",
            "{\"execution time\": 0.009613275527954102}",
            "{\"execution time\": 0.007264614105224609}",
            "{\"execution time\": 0.009066343307495117}",
            "{\"execution time\": 0.010059356689453125}",
            "{\"execution time\": 0.00960540771484375}",
            "{\"execution time\": 0.008971691131591797}"
        ],
        [
            "{\"output\": \"11\", \"inputs\": \"[[5, 4, 8, 7, 10, 2]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[[5, 4, 8, 7, 10, 2]]\", \"expected\": \"13\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[8, 6, 1, 5, 3]]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.010153532028198242}",
            "{\"execution time\": 0.00878000259399414}",
            "{\"execution time\": 0.006068706512451172}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[7, 12, 9, 8, 9, 15], 4]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[-585056962, 90797644, 544794467, -256478011, -675212837, -276470531, -968264809, -196916872, 178611953, -976826237, -235918974, 893774750, 273030576...(truncated) ...27963, -856352807, -888533134, 510055573, -426358483, -884367980, 39556897, 3361298, 974488, -560720843, 845273387, -956481903, -751401949, 68290169]]\", \"expected\": \"77762256038\"}",
            "{\"output\": \"11\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[-585056962, 90797644, 544794467, -256478011, -675212837, -276470531, -968264809, -196916872, 178611953, -976826237, -235918974, 893774750, 273030576...(truncated) ...27963, -856352807, -888533134, 510055573, -426358483, -884367980, 39556897, 3361298, 974488, -560720843, 845273387, -956481903, -751401949, 68290169]]\", \"expected\": \"77762256038\"}",
            "{\"output\": \"11\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"17\", \"inputs\": \"[[3, 3, 5, 6]]\", \"expected\": \"14\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[-585056962, 90797644, 544794467, -256478011, -675212837, -276470531, -968264809, -196916872, 178611953, -976826237, -235918974, 893774750, 273030576...(truncated) ...27963, -856352807, -888533134, 510055573, -426358483, -884367980, 39556897, 3361298, 974488, -560720843, 845273387, -956481903, -751401949, 68290169]]\", \"expected\": \"77762256038\"}"
        ],
        [
            "{\"execution time\": 7.772445678710938e-05}",
            "{\"execution time\": 5.078315734863281e-05}",
            "{\"execution time\": 5.221366882324219e-05}",
            "{\"execution time\": 4.220008850097656e-05}",
            "{\"execution time\": 4.839897155761719e-05}",
            "{\"execution time\": 7.200241088867188e-05}",
            "{\"execution time\": 6.532669067382812e-05}",
            "{\"execution time\": 4.291534423828125e-05}",
            "{\"execution time\": 5.53131103515625e-05}",
            "{\"execution time\": 4.673004150390625e-05}"
        ],
        [
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 5, 4], [2, 5, 3]]\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-4\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 7], [4, 5, 3]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"15360\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"540\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"255\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"81\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"60\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"60\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"81\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"81\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[12, 5, 4]\", \"expected\": \"98\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.0016415119171142578}",
            "{\"execution time\": 0.0014832019805908203}",
            "{\"execution time\": 0.0009915828704833984}",
            "{\"execution time\": 0.0014548301696777344}",
            "{\"execution time\": 0.0014159679412841797}",
            "{\"execution time\": 0.0009922981262207031}",
            "{\"execution time\": 0.0014929771423339844}",
            "{\"execution time\": 0.0015654563903808594}",
            "{\"execution time\": 0.000946044921875}",
            "{\"execution time\": 0.0009906291961669922}"
        ],
        [
            "{\"execution time\": 1.9311904907226562e-05}",
            "{\"execution time\": 3.933906555175781e-05}",
            "{\"execution time\": 2.0265579223632812e-05}",
            "{\"execution time\": 2.3126602172851562e-05}",
            "{\"execution time\": 2.3126602172851562e-05}",
            "{\"execution time\": 1.9073486328125e-05}",
            "{\"execution time\": 3.409385681152344e-05}",
            "{\"execution time\": 2.1457672119140625e-05}",
            "{\"execution time\": 2.0503997802734375e-05}",
            "{\"execution time\": 2.002716064453125e-05}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"['100']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['100']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['100']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['0111']\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['0111']\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['100']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['100']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['100']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"['100']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['100']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 4, 4, 4], 0]\", \"expected\": \"3\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 2, 4, 6], 3]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"16\", \"inputs\": \"[3, 3]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[5, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[5, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[5, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"21\", \"inputs\": \"[5, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[5, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[5, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[5, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[5, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[5, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"247\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"614\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"ValueError('k must be a non-negative integer')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[4]\", \"expected\": \"12\"}",
            "{\"output\": \"456924\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"625\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"200\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"200\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"456923\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"248\", \"inputs\": \"[4]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}",
            "{\"output\": \"[False, False]\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[False, False]\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}",
            "{\"output\": \"[True]\", \"inputs\": \"['abbcdecbba', [[0, 2, 7, 9]]]\", \"expected\": \"[False]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[False, False]\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\"}",
            "{\"output\": \"[False, False]\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[False, False]\", \"inputs\": \"['abcabc', [[1, 1, 3, 5], [0, 2, 5, 5]]]\", \"expected\": \"[True, True]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[2, 2]\", \"inputs\": \"[[4, 3, 2, 3, 1], [2, 2, 5, 2, 3, 6]]\", \"expected\": \"[3, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 1.1920928955078125e-05}",
            "{\"execution time\": 1.2636184692382812e-05}",
            "{\"execution time\": 1.5974044799804688e-05}",
            "{\"output\": \"9\", \"inputs\": \"['dac', 'bac', 'cac']\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"['dac', 'bac', 'cac']\", \"expected\": \"-1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.0967254638671875e-05}",
            "{\"output\": \"-1\", \"inputs\": \"['lmlhoptjgfccwkgshjqpptemmnfx', 'lmgbkxiezhawibcrfgj', 'lptlxfxshmdkmvzuqhyvr']\", \"expected\": \"65\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.8835067749023438e-05}",
            "{\"execution time\": 9.775161743164062e-06}",
            "{\"output\": \"-1\", \"inputs\": \"['lmlhoptjgfccwkgshjqpptemmnfx', 'lmgbkxiezhawibcrfgj', 'lptlxfxshmdkmvzuqhyvr']\", \"expected\": \"65\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[4, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[3, 1, 2]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.1008002758026123}",
            "{\"execution time\": 0.10976958274841309}",
            "{\"execution time\": 0.09736204147338867}",
            "{\"execution time\": 0.12715744972229004}",
            "{\"execution time\": 0.09202384948730469}",
            "{\"execution time\": 0.10912275314331055}",
            "{\"output\": \"0\", \"inputs\": \"['baeyh', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.11403703689575195}",
            "{\"execution time\": 0.09942936897277832}",
            "{\"output\": \"1\", \"inputs\": \"['baeyh', 2]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[5, 2, 2]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"16\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"16\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"15\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"5\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 3, 2, 3, 3], 2]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[1, 5, 8]\", \"inputs\": \"[[1, 3, 5, 8, 9], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 1, 2, 6, 7, 18]\", \"inputs\": \"[[1, 1, 2, 6, 7, 18], 3]\", \"expected\": \"[1, 6, 7, 18, 1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 1, 2, 6, 7, 18]\", \"inputs\": \"[[1, 1, 2, 6, 7, 18], 3]\", \"expected\": \"[1, 6, 7, 18, 1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 1, 2, 6, 7, 18]\", \"inputs\": \"[[1, 1, 2, 6, 7, 18], 3]\", \"expected\": \"[1, 6, 7, 18, 1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[1, 3], [5], [8, 9]]\", \"inputs\": \"[[1, 3, 5, 8, 9], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[1, 3], [5], [8, 9]]\", \"inputs\": \"[[1, 3, 5, 8, 9], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 1, 2, 6, 7, 18]\", \"inputs\": \"[[1, 1, 2, 6, 7, 18], 3]\", \"expected\": \"[1, 6, 7, 18, 1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[[1, 3], [5], [8, 9]]\", \"inputs\": \"[[1, 3, 5, 8, 9], 2]\", \"expected\": \"[1, 3, 5, 8, 9]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 1, 2, 6, 7, 18]\", \"inputs\": \"[[1, 1, 2, 6, 7, 18], 3]\", \"expected\": \"[1, 6, 7, 18, 1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[1, 1, 2, 6, 7, 18]\", \"inputs\": \"[[1, 1, 2, 6, 7, 18], 3]\", \"expected\": \"[1, 6, 7, 18, 1, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.0017521381378173828}",
            "{\"execution time\": 0.0019876956939697266}",
            "{\"execution time\": 0.002350330352783203}",
            "{\"execution time\": 0.0018284320831298828}",
            "{\"execution time\": 0.0017702579498291016}",
            "{\"execution time\": 0.0023381710052490234}",
            "{\"execution time\": 0.0020325183868408203}",
            "{\"execution time\": 0.002355813980102539}",
            "{\"execution time\": 0.002298116683959961}",
            "{\"execution time\": 0.0017583370208740234}"
        ],
        [
            "{\"execution time\": 5.125999450683594e-05}",
            "{\"execution time\": 2.956390380859375e-05}",
            "{\"execution time\": 5.1021575927734375e-05}",
            "{\"execution time\": 4.553794860839844e-05}",
            "{\"execution time\": 2.6702880859375e-05}",
            "{\"execution time\": 4.5299530029296875e-05}",
            "{\"execution time\": 3.170967102050781e-05}",
            "{\"execution time\": 5.817413330078125e-05}",
            "{\"execution time\": 4.76837158203125e-05}",
            "{\"execution time\": 2.7179718017578125e-05}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"['fu', 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['fu', 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['fu', 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['fu', 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['fu', 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['fu', 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"21\", \"inputs\": \"['igigee', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['fu', 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"7\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"28\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"11\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[5, [0, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.08484482765197754}",
            "{\"execution time\": 0.09262871742248535}",
            "{\"execution time\": 0.08315372467041016}",
            "{\"execution time\": 0.10602331161499023}",
            "{\"execution time\": 0.11069965362548828}",
            "{\"execution time\": 0.10071063041687012}",
            "{\"execution time\": 0.07680130004882812}",
            "{\"execution time\": 0.09747028350830078}",
            "{\"execution time\": 0.10843586921691895}",
            "{\"execution time\": 0.09407758712768555}"
        ],
        [
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5, 2, 4]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 5]\", \"inputs\": \"[[2, 3, 4, 5]]\", \"expected\": \"[3, 2, 5, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"[-3, 8]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 0]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 0]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 0]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-8, -3]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, 0]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, -3]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, -3]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[3, -3]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[-3, -6]\", \"inputs\": \"[[[1, 3], [2, 2]]]\", \"expected\": \"[2, 4]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [2, 3, 2, 3, 2, 3]]\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [2, 3, 2, 3, 2, 3]]\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 2, 1, 2], [1, 1, 1, 1]]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"7\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"25023908239913\", \"inputs\": \"[[15900, 17103, 29180, 39279, 62552, 72246, 73326, 87252, 98438, 99022, 107536, 110663, 114237, 135757, 137785, 162829, 175820, 190781, 197784, 231542...(truncated) ...04162, 999818974, 999847962, 999870621, 999887804, 999899473, 999909504, 999937541, 999945021, 999957108, 999976174, 999985082, 999987347, 999995441]]\", \"expected\": \"25023908235157\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"89\", \"inputs\": \"[[52, 75, 75, 75, 77, 84, 85]]\", \"expected\": \"46\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"6\"}",
            "{\"execution time\": 0.06956624984741211}",
            "{\"output\": \"7\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'float' object cannot be interpreted as an integer\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[48, 82]]\", \"expected\": \"34\"}",
            "{\"execution time\": 0.07207965850830078}",
            "{\"output\": \"46\", \"inputs\": \"[[10, 12, 13, 14, 15]]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 4.076957702636719e-05}",
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 4.1961669921875e-05}",
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 2.765655517578125e-05}",
            "{\"output\": \"4\", \"inputs\": \"['aaaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"[[1, 4, 10], 19]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 4, 10], 19]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[1, 4, 10], 19]\", \"expected\": \"2\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 4, 10], 19]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[1, 4, 10], 19]\", \"expected\": \"2\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 4, 10], 19]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 4, 10], 19]\", \"expected\": \"2\"}",
            "{\"output\": \"15\", \"inputs\": \"[[1, 4, 10, 19], 19]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 4, 10], 19]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.04740285873413086}"
        ],
        [
            "{\"output\": \"9\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"argument of type 'int' is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\"}",
            "{\"output\": \"0\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"argument of type 'int' is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\"}",
            "{\"output\": \"5\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"argument of type 'int' is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['accca', 2]\", \"expected\": \"3\"}"
        ],
        [
            "{\"execution time\": 0.0006847381591796875}",
            "{\"output\": \"[0]\", \"inputs\": \"[[[2, 3, 3, 10], [3, 3, 3, 1], [6, 1, 1, 4]], 2]\", \"expected\": \"[0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0007336139678955078}",
            "{\"execution time\": 0.0006062984466552734}",
            "{\"output\": \"[2]\", \"inputs\": \"[[[2, 3, 3, 10], [3, 3, 3, 1], [6, 1, 1, 4]], 2]\", \"expected\": \"[0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0006628036499023438}",
            "{\"execution time\": 0.00044083595275878906}",
            "{\"execution time\": 0.0005166530609130859}",
            "{\"output\": \"[0, 1, 2]\", \"inputs\": \"[[[2, 3, 3, 10], [3, 3, 3, 1], [6, 1, 1, 4]], 2]\", \"expected\": \"[0, 2]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0006067752838134766}"
        ],
        [
            "{\"output\": \"8\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'cost' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\"}",
            "{\"error\": \"TypeError('list indices must be integers or slices, not str')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'res' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'res' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"['abcd', 'acbe', ['a', 'b', 'c', 'c', 'e', 'd'], ['b', 'c', 'b', 'e', 'b', 'e'], [2, 5, 5, 1, 2, 20]]\", \"expected\": \"28\"}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2, 3, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 2, 3, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 2, 3, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 2, 3, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[1, 2, 2, 3, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2, 3, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 2, 3, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 2, 2, 3, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"None\", \"inputs\": \"[[1, 2, 3, 2, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[1, 2, 2, 3, 5]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[26, 1]\", \"expected\": \"3\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"[9, 1]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[9, 1]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[7, 2]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[9, 1]\", \"expected\": \"6\"}",
            "{\"output\": \"9\", \"inputs\": \"[9, 1]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[9, 1]\", \"expected\": \"6\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[9, 1]\", \"expected\": \"6\"}",
            "{\"output\": \"503906250000496\", \"inputs\": \"[9, 1]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[7, 2]\", \"expected\": \"9\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[9, 1]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.00015354156494140625}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 2, 3, 1, 4]]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[9768663, 63434076, 1, '111111']\", \"expected\": \"2\"}",
            "{\"output\": \"10\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[9768663, 63434076, 1, '111111']\", \"expected\": \"2\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[9768663, 63434076, 1, '111111']\", \"expected\": \"2\"}",
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"AttributeError(\\\"'int' object has no attribute 'endswith'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\"}",
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"125\", \"inputs\": \"[1, 6000, 4, '124']\", \"expected\": \"5\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"[[1, 1, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 4, 3, 1]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 4, 3, 1]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 4, 3, 1]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 1, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 1, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 1, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[1, 1, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.9483702182769775}",
            "{\"execution time\": 1.0145971775054932}",
            "{\"execution time\": 1.0229294300079346}",
            "{\"output\": \"[16, 16, 33]\", \"inputs\": \"['isawsquirrelnearmysquirrelhouseohmy', 'my', 'squirrel', 15]\", \"expected\": \"[16, 33]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.0150539875030518}",
            "{\"execution time\": 0.9851696491241455}",
            "{\"output\": \"[16, 16, 33]\", \"inputs\": \"['isawsquirrelnearmysquirrelhouseohmy', 'my', 'squirrel', 15]\", \"expected\": \"[16, 33]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.059248685836792}",
            "{\"output\": \"[16, 16, 33]\", \"inputs\": \"['isawsquirrelnearmysquirrelhouseohmy', 'my', 'squirrel', 15]\", \"expected\": \"[16, 33]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"[16, 16, 33]\", \"inputs\": \"['isawsquirrelnearmysquirrelhouseohmy', 'my', 'squirrel', 15]\", \"expected\": \"[16, 33]\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"True\", \"inputs\": \"[[1, 2]]\", \"expected\": \"False\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"10\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[[2, 1, 3, 4], 1]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.00011324882507324219}",
            "{\"execution time\": 0.00010323524475097656}",
            "{\"execution time\": 0.00010609626770019531}",
            "{\"execution time\": 0.00021219253540039062}",
            "{\"execution time\": 6.937980651855469e-05}",
            "{\"execution time\": 6.318092346191406e-05}",
            "{\"execution time\": 0.0001933574676513672}",
            "{\"execution time\": 6.961822509765625e-05}",
            "{\"execution time\": 0.00011324882507324219}",
            "{\"execution time\": 0.00011134147644042969}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[6, 5, 7, 8]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"10\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"10\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"10\"}",
            "{\"error\": \"NameError(\\\"name 'l' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[6, 5, 7, 8]]\", \"expected\": \"7\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"10\"}",
            "{\"output\": \"3\", \"inputs\": \"[[6, 5, 7, 8]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"10\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"10\"}",
            "{\"output\": \"1\", \"inputs\": \"[[6, 5, 7, 8]]\", \"expected\": \"7\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"0\", \"inputs\": \"[[2, 0, 12, 1, 1, 3, 5], 4]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 0, 12, 1, 1, 3, 5], 4]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 0, 12, 1, 1, 3, 5], 4]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1073741820\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 0, 12, 1, 1, 3, 5], 4]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-2147483625\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 0, 12, 1, 1, 3, 5], 4]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"7\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1073741820\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1073741824\", \"inputs\": \"[[3, 5, 3, 2, 7], 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"67\", \"inputs\": \"[[1, 1, 2, 3, 5, 12, 50]]\", \"expected\": \"12\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'<' not supported between instances of 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"'<' not supported between instances of 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\"}",
            "{\"error\": \"TypeError(\\\"'<' not supported between instances of 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'<' not supported between instances of 'int' and 'list'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 12]]\", \"expected\": \"6\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"20\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], 1]\", \"expected\": \"11\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"4\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"['aaaa']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"execution time\": 4.267692565917969e-05}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 2, 3, 4, 5, 6], [1, 1]]\", \"expected\": \"4\"}"
        ],
        [
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"10\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"12\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"6\", \"inputs\": \"[3, 2]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[8, 4, 2, 30, 15]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 2, 3, 4, 5]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"-1\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[2, 2, 0], [1, 2, 2, 2, 2, 2, 2, 3]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\"}",
            "{\"output\": \"-1\", \"inputs\": \"[[2, 2, 0], [2, 2, 2, 2, 3, 2, 2, 1]]\", \"expected\": \"8\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: cannot unpack non-iterable NoneType object\"}",
            "{\"output\": \"3\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 1.5735626220703125e-05}",
            "{\"output\": \"3\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"['abacaba', 3]\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 1, 1, 2, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 4, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 4, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"9\", \"inputs\": \"[[5, 4, 1, 2, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[5, 4, 1, 2, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"8\", \"inputs\": \"[[1, 2, 2, 4, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"4\", \"inputs\": \"[[5, 4, 1, 2, 2]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 4, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"3\", \"inputs\": \"[[1, 2, 3, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[[1, 3, 2, 4]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 2, 2, 4, 5]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"ab\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"ab\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"aaabbbcc\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"aaabbbcc\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"ab\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"ab\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"aaabbbcc\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"aaabbbcc\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"ab\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"aaabbbcc\", \"inputs\": \"['aabcbbca']\", \"expected\": \"ba\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"execution time\": 0.000362396240234375}",
            "{\"output\": \"1\", \"inputs\": \"[['a', 'aba', 'ababa', 'aa']]\", \"expected\": \"4\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 0.0003733634948730469}",
            "{\"execution time\": 0.0003905296325683594}",
            "{\"execution time\": 0.00045800209045410156}",
            "{\"execution time\": 0.000514984130859375}",
            "{\"execution time\": 0.0003933906555175781}",
            "{\"execution time\": 0.0005841255187988281}",
            "{\"execution time\": 0.00040078163146972656}",
            "{\"execution time\": 0.0005238056182861328}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[[3, 2, -3, -4]]\", \"expected\": \"0\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 3, -5]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 3.886222839355469e-05}",
            "{\"execution time\": 3.933906555175781e-05}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 3, -5]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[[2, 3, -5]]\", \"expected\": \"1\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"execution time\": 5.745887756347656e-05}",
            "{\"execution time\": 4.220008850097656e-05}",
            "{\"execution time\": 5.507469177246094e-05}",
            "{\"execution time\": 5.459785461425781e-05}"
        ],
        [
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"5\", \"inputs\": \"['aAbBcC']\", \"expected\": \"2\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"output\": \"2\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"argument of type 'int' is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\"}",
            "{\"output\": \"0\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"2\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"0\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"1\", \"inputs\": \"[['abbb', 'ba', 'aa']]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"execution time\": 2.956390380859375e-05}",
            "{\"output\": \"98\", \"inputs\": \"[[500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500...(truncated) ...500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500]]\", \"expected\": \"50\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}",
            "{\"execution time\": 3.1948089599609375e-05}",
            "{\"output\": \"98\", \"inputs\": \"[[500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500...(truncated) ...500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500]]\", \"expected\": \"50\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[3, 2, 1, 4, 5]]\", \"expected\": \"2\"}"
        ],
        [
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"output\": \"False\", \"inputs\": \"[[1, 1, 2, 2, 3, 4]]\", \"expected\": \"True\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[98475448, 2521333, 95986349, 56040125, 63626663, 40624949, 1519155, 73159025, 5996763, 10202273, 93777362, 27942047, 52110445, 29790828, 73155683, 1...(truncated) ..., 928902, 38231140, 34471937, 98638494, 69868709, 67488078, 78034530, 80483577, 63829756, 56064102, 61792340, 10176428, 71393231, 17707721, 88780369]]\", \"expected\": \"8\"}",
            "{\"output\": \"0\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[98475448, 2521333, 95986349, 56040125, 63626663, 40624949, 1519155, 73159025, 5996763, 10202273, 93777362, 27942047, 52110445, 29790828, 73155683, 1...(truncated) ..., 928902, 38231140, 34471937, 98638494, 69868709, 67488078, 78034530, 80483577, 63829756, 56064102, 61792340, 10176428, 71393231, 17707721, 88780369]]\", \"expected\": \"8\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[98475448, 2521333, 95986349, 56040125, 63626663, 40624949, 1519155, 73159025, 5996763, 10202273, 93777362, 27942047, 52110445, 29790828, 73155683, 1...(truncated) ..., 928902, 38231140, 34471937, 98638494, 69868709, 67488078, 78034530, 80483577, 63829756, 56064102, 61792340, 10176428, 71393231, 17707721, 88780369]]\", \"expected\": \"8\"}",
            "{\"output\": \"\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"[[98475448, 2521333, 95986349, 56040125, 63626663, 40624949, 1519155, 73159025, 5996763, 10202273, 93777362, 27942047, 52110445, 29790828, 73155683, 1...(truncated) ..., 928902, 38231140, 34471937, 98638494, 69868709, 67488078, 78034530, 80483577, 63829756, 56064102, 61792340, 10176428, 71393231, 17707721, 88780369]]\", \"expected\": \"8\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'common_prefix_length' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\"}",
            "{\"output\": \"1\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\", \"error_code\": -2, \"error_message\": \"Wrong Answer\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'common_prefix_length' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"[[1, 10, 100], [1000]]\", \"expected\": \"3\"}"
        ],
        [
            "{\"execution time\": 1.9550323486328125e-05}",
            "{\"execution time\": 3.62396240234375e-05}",
            "{\"execution time\": 1.7642974853515625e-05}",
            "{\"execution time\": 2.0265579223632812e-05}",
            "{\"execution time\": 3.147125244140625e-05}",
            "{\"execution time\": 3.0994415283203125e-05}",
            "{\"execution time\": 3.075599670410156e-05}",
            "{\"execution time\": 1.8358230590820312e-05}",
            "{\"execution time\": 2.193450927734375e-05}",
            "{\"execution time\": 3.314018249511719e-05}"
        ],
        [
            "{\"execution time\": 5.245208740234375e-05}",
            "{\"execution time\": 5.745887756347656e-05}",
            "{\"execution time\": 3.0517578125e-05}",
            "{\"execution time\": 3.361701965332031e-05}",
            "{\"execution time\": 3.7670135498046875e-05}",
            "{\"execution time\": 3.600120544433594e-05}",
            "{\"execution time\": 3.600120544433594e-05}",
            "{\"execution time\": 5.7220458984375e-05}",
            "{\"execution time\": 6.723403930664062e-05}",
            "{\"execution time\": 3.4809112548828125e-05}"
        ],
        [
            "{\"output\": \"A\\n\", \"inputs\": \"6\\nATTATA\\n\", \"expected\": \"T\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: A != T\"}",
            "{\"output\": \"T\\n\", \"inputs\": \"90\\nATTTTATATATTATTAATATATTAATTATTAAATTAAATTATTTATTAATAAAAATATTATTTTAATAAAAATTAAAAAAAATATTTTTT\\n\", \"expected\": \"A\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: T != A\"}",
            "{\"output\": \"A\\n\", \"inputs\": \"6\\nATTATA\\n\", \"expected\": \"T\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: A != T\"}",
            "{\"output\": \"T\\n\", \"inputs\": \"90\\nATTTTATATATTATTAATATATTAATTATTAAATTAAATTATTTATTAATAAAAATATTATTTTAATAAAAATTAAAAAAAATATTTTTT\\n\", \"expected\": \"A\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: T != A\"}",
            "{\"output\": \"A\\n\", \"inputs\": \"6\\nATTATA\\n\", \"expected\": \"T\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: A != T\"}",
            "{\"output\": \"T\\n\", \"inputs\": \"90\\nATTTTATATATTATTAATATATTAATTATTAAATTAAATTATTTATTAATAAAAATATTATTTTAATAAAAATTAAAAAAAATATTTTTT\\n\", \"expected\": \"A\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: T != A\"}",
            "{\"output\": \"T\\n\", \"inputs\": \"90\\nATTTTATATATTATTAATATATTAATTATTAAATTAAATTATTTATTAATAAAAATATTATTTTAATAAAAATTAAAAAAAATATTTTTT\\n\", \"expected\": \"A\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: T != A\"}",
            "{\"output\": \"A\\n\", \"inputs\": \"6\\nATTATA\\n\", \"expected\": \"T\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: A != T\"}",
            "{\"output\": \"T\\n\", \"inputs\": \"90\\nATTTTATATATTATTAATATATTAATTATTAAATTAAATTATTTATTAATAAAAATATTATTTTAATAAAAATTAAAAAAAATATTTTTT\\n\", \"expected\": \"A\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: T != A\"}",
            "{\"output\": \"T\\n\", \"inputs\": \"90\\nATTTTATATATTATTAATATATTAATTATTAAATTAAATTATTTATTAATAAAAATATTATTTTAATAAAAATTAAAAAAAATATTTTTT\\n\", \"expected\": \"A\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: T != A\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\"}",
            "{\"output\": \"2 3 2 1 5 1 2\\n\", \"inputs\": \"4\\n2 5 1 2\\n\", \"expected\": \"2 3 4 5 4 3 2 1 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 3 2 1 5 1 2 != 2 3 4 5 4 3 2 1 2\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"ch@kud@i\\nakidu@ho\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"ch@ku@ai\\nchoku@@i\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 2: '00?'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 2: '00?'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 2: '00?'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 2: '00?'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 2: '00?'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 2: '00?'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 2: '00?'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 2: ''\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"?0?\\n2\\n\", \"expected\": \"1\\n\"}"
        ],
        [
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"1 3 2000000\\noGS\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"TypeError('can only concatenate tuple (not \\\"int\\\") to tuple')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}",
            "{\"error\": \"TypeError('can only concatenate tuple (not \\\"int\\\") to tuple')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3 5\\nS.G\\no#o\\n.#.\\n\", \"expected\": \"1\\n\"}"
        ],
        [
            "{\"output\": \"16\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 16 != 676\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 676\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 676\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 676\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"DD??S\\n\", \"expected\": \"676\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 676\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.020448684692382812}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"123456789123456789 987654321\\n\", \"expected\": \"124999999\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"802035354240686040 925744958032207328\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"execution time\": 0.021181344985961914}",
            "{\"output\": \"0\\n\", \"inputs\": \"802035354240686040 925744958032207328\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"execution time\": 0.02156543731689453}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"802035354240686040 925744958032207328\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"802035354240686040 925744958032207328\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}"
        ],
        [
            "{\"output\": \"No set of cells found\\n\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"TypeError(\\\"wrapped_function.<locals>.find_cells() missing 1 required positional argument: 'grid'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\nvgxgpu\\namkxks\\nzhkbpp\\nhykink\\nesnuke\\nzplvfj\\n\", \"expected\": \"5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"KeyError('a')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"2 5\\nabcde\\nabced\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"4 4\\nbbed\\nabcd\\nabed\\nfbed\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"2 5\\nabcde\\nabced\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"2 5\\nabcde\\nabced\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000 1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48...(truncated) ...79 399980 399981 399982 399983 399984 399985 399986 399987 399988 399989 399990 399991 399992 399993 399994 399995 399996 399997 399998 399999 400000\\n\", \"expected\": \"400001\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 8\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 8\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 8\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 8\"}",
            "{\"output\": \"18\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 18 != 8\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 8\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000 200000 1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48...(truncated) ...79 399980 399981 399982 399983 399984 399985 399986 399987 399988 399989 399990 399991 399992 399993 399994 399995 399996 399997 399998 399999 400000\\n\", \"expected\": \"400001\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"2 3 2\\n3 10\\n2 5 15\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 8\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"TypeError('print() argument after * must be an iterable, not int')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"TypeError('print() argument after * must be an iterable, not int')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 1 2\\n1 1 3\\n1 2 3\\n2 1\\n1 1 2\\n2 2\\n1 1 2\\n\", \"expected\": \"1\\n0\\n0\\n1\\n0\\n3\\n1\\n\"}"
        ],
        [
            "{\"output\": \"1\\n\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 5\\n2\\n1 2\\n2\\n2 3\\n3\\n3 4 5\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 2\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\nl0w\\n1ow\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"output\": \"3\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 2\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 2\\n1 2 3 4\\n4 3 1 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}"
        ],
        [
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"5 2 1 5\\nLDRLD\\n0 0\\n-1 -1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}"
        ],
        [
            "{\"output\": \"16\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 16 != 9\"}",
            "{\"output\": \"13\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 13 != 9\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"21\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 21 != 9\"}",
            "{\"output\": \"13\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 13 != 9\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 9\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 9\"}",
            "{\"output\": \"16\\n\", \"inputs\": \"1 3 3\\nAAaA\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 16 != 9\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2 2\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\"}",
            "{\"output\": \"1 2 3 4 5 6\\n\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 3 4 5 6 != 2 2\"}",
            "{\"output\": \"1 6 \\n\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 6 != 2 2\"}",
            "{\"output\": \"1 2 3 4 5 6\\n\", \"inputs\": \"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\", \"expected\": \"2 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 3 4 5 6 != 2 2\"}"
        ],
        [
            "{\"output\": \"alice\\nbob\\ncarol\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: alice != carol\"}",
            "{\"output\": \"bob\\ncarol\\ndave\\nellen\\nalice\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: bob != carol\"}",
            "{\"output\": \"alice\\nbob\\ncarol\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: alice != carol\"}",
            "{\"output\": \"carol\\nalice\\nbob\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: alice != dave\"}",
            "{\"output\": \"alice\\nbob\\ncarol\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: alice != carol\"}",
            "{\"output\": \"carol\\nalice\\nbob\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: alice != dave\"}",
            "{\"execution time\": 0.023646116256713867}",
            "{\"output\": \"alice\\nbob\\ncarol\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: alice != carol\"}",
            "{\"output\": \"carol\\nalice\\nbob\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: alice != dave\"}",
            "{\"output\": \"carol\\nalice\\nbob\\nellen\\ndave\\n\", \"inputs\": \"5\\nalice 31\\nbob 41\\ncarol 5\\ndave 92\\nellen 65\\n\", \"expected\": \"carol\\ndave\\nellen\\nalice\\nbob\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: alice != dave\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}",
            "{\"output\": \"202\\n\", \"inputs\": \"20230603\\n\", \"expected\": \"20200000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 202 != 20200000\"}"
        ],
        [
            "{\"output\": \"Yes\\nNo\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"9 4\\n3 2\\n6 -1\\n1 6\\n6 5\\n-2 -3\\n5 3\\n2 -3\\n2 1\\n2 6\\n\", \"expected\": \"Yes\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: No != Yes\"}",
            "{\"output\": \"Yes\\nNo\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"9 4\\n3 2\\n6 -1\\n1 6\\n6 5\\n-2 -3\\n5 3\\n2 -3\\n2 1\\n2 6\\n\", \"expected\": \"Yes\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: No != Yes\"}",
            "{\"output\": \"Yes\\nNo\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"9 4\\n3 2\\n6 -1\\n1 6\\n6 5\\n-2 -3\\n5 3\\n2 -3\\n2 1\\n2 6\\n\", \"expected\": \"Yes\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: No != Yes\"}",
            "{\"output\": \"Yes\\nNo\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"9 4\\n3 2\\n6 -1\\n1 6\\n6 5\\n-2 -3\\n5 3\\n2 -3\\n2 1\\n2 6\\n\", \"expected\": \"Yes\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: No != Yes\"}",
            "{\"output\": \"No\\nNo\\nNo\\n\", \"inputs\": \"3 1\\n0 0\\n-1000 -1000\\n1000 1000\\n\", \"expected\": \"Yes\\nNo\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\nNo\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"9 4\\n3 2\\n6 -1\\n1 6\\n6 5\\n-2 -3\\n5 3\\n2 -3\\n2 1\\n2 6\\n\", \"expected\": \"Yes\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: No != Yes\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 5\\n2 -1\\n3 1\\n8 8\\n0 5\\n\", \"expected\": \"Yes\\nYes\\nNo\\nYes\\n\"}",
            "{\"output\": \"Yes\\nNo\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"9 4\\n3 2\\n6 -1\\n1 6\\n6 5\\n-2 -3\\n5 3\\n2 -3\\n2 1\\n2 6\\n\", \"expected\": \"Yes\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: No != Yes\"}",
            "{\"output\": \"Yes\\nNo\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"9 4\\n3 2\\n6 -1\\n1 6\\n6 5\\n-2 -3\\n5 3\\n2 -3\\n2 1\\n2 6\\n\", \"expected\": \"Yes\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: No != Yes\"}",
            "{\"output\": \"Yes\\nNo\\nNo\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\n\", \"inputs\": \"9 4\\n3 2\\n6 -1\\n1 6\\n6 5\\n-2 -3\\n5 3\\n2 -3\\n2 1\\n2 6\\n\", \"expected\": \"Yes\\nNo\\nNo\\nYes\\nYes\\nYes\\nYes\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: No != Yes\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ' '\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ' '\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\"}",
            "{\"output\": \"0 0\\n\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 0 != 0 2\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ' '\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\"}",
            "{\"output\": \"0 2\\n\", \"inputs\": \"4 4\\n4\\n1 1\\n3 1\\n3 3\\n1 3\\n1\\n2\\n1\\n2\\n\", \"expected\": \"1 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 2 != 1 1\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: ' '\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\"}",
            "{\"output\": \"5 0\\n\", \"inputs\": \"7 6\\n5\\n6 1\\n3 1\\n4 2\\n1 5\\n6 2\\n2\\n2 5\\n2\\n3 4\\n\", \"expected\": \"0 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 0 != 0 2\"}"
        ],
        [
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 5\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n2 3\\n3 1\\n5 4\\n5 5\\n3\\n1 5\\n2 6\\n4 3\\n4\\n2 5\\n2 6\\n5 6\\n5 4\\n\", \"expected\": \"No\\nNo\\nYes\\nYes\\n\"}"
        ],
        [
            "{\"output\": \"103\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 103 != 55\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 55\"}",
            "{\"output\": \"58\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 58 != 55\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 55\"}",
            "{\"output\": \"58\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 58 != 55\"}",
            "{\"output\": \"58\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 58 != 55\"}",
            "{\"output\": \"58\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 58 != 55\"}",
            "{\"output\": \"58\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 58 != 55\"}",
            "{\"output\": \"58\\n\", \"inputs\": \"53\\n\", \"expected\": \"55\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 58 != 55\"}"
        ],
        [
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'distance' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"G B\\n\", \"expected\": \"20\\n\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 4\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 4\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'distance' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"G B\\n\", \"expected\": \"20\\n\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 4\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'distance' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"G B\\n\", \"expected\": \"20\\n\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 4\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'distance' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"G B\\n\", \"expected\": \"20\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'distance' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"G B\\n\", \"expected\": \"20\\n\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"A C\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 4\"}"
        ],
        [
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}",
            "{\"output\": \"(1, 2)\\n\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: (1, 2) != 2 4\"}",
            "{\"error\": \"NameError(\\\"name 'grid' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n......\\n..#.#.\\n..###.\\n..###.\\n......\\n\", \"expected\": \"2 4\\n\"}"
        ],
        [
            "{\"output\": \"0\\n0\\n0\\n\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 480\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n0 240 720 1320 1440 1800 2160\\n3\\n480 1920\\n720 1200\\n0 2160\\n\", \"expected\": \"480\\n0\\n960\\n\"}"
        ],
        [
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"error\": \"TypeError(\\\"argument of type 'int' is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 5 2\\n1 2\\n2 3\\n2 4\\n3 5\\n1 5\\n1 1\\n5 2\\n\", \"expected\": \"4\\n1 2 3 5\\n\"}"
        ],
        [
            "{\"output\": \"beginnerbeginner\\n\", \"inputs\": \"8\\nbeginner\\n\", \"expected\": \"bbeeggiinnnneerr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: beginnerbeginner != bbeeggiinnnneerr\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"beginnerbeginner\\n\", \"inputs\": \"8\\nbeginner\\n\", \"expected\": \"bbeeggiinnnneerr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: beginnerbeginner != bbeeggiinnnneerr\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"beginnerbeginner\\n\", \"inputs\": \"8\\nbeginner\\n\", \"expected\": \"bbeeggiinnnneerr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: beginnerbeginner != bbeeggiinnnneerr\"}"
        ],
        [
            "{\"execution time\": 0.02036309242248535}",
            "{\"execution time\": 0.020696163177490234}",
            "{\"execution time\": 0.018041133880615234}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.020461082458496094}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.02046942710876465}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.021343231201171875}"
        ],
        [
            "{\"output\": \"1 1 1\\n\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 1 1 != 1 3 2\"}",
            "{\"output\": \"1 2 3 \\n\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 3 != 1 3 2\"}",
            "{\"output\": \"1 2 3\\n\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 3 != 1 3 2\"}",
            "{\"output\": \"1 2 3\\n\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 3 != 1 3 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"1 2 3\\n\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 3 != 1 3 2\"}",
            "{\"output\": \"(1, 1) (3, 1) (2, 1)\\n\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: (1, 1) (3, 1) (2, 1) != 1 3 2\"}",
            "{\"output\": \"2 3 4 1 \\n\", \"inputs\": \"4\\n2 3 4 3 4 1 3 1 1 4 2 2\\n\", \"expected\": \"3 4 1 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 3 4 1 != 3 4 1 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 1 3 2 3 2 2 3 1\\n\", \"expected\": \"1 3 2\\n\"}"
        ],
        [
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 600\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 600\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 600\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 600\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 600\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 600\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 600\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 100\\n1 300\\n0 -200\\n1 500\\n1 300\\n\", \"expected\": \"600\\n\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"NameError(\\\"name 'K' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 10\\n1 5\\n2 1\\n3 3\\n4 2\\n2 10\\n1 0\\n4 0\\n3 1\\n2 0\\n3 0\\n\", \"expected\": \"5\\n6\\n8\\n8\\n15\\n13\\n13\\n11\\n1\\n0\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"NameError(\\\"name 'K' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 10\\n1 5\\n2 1\\n3 3\\n4 2\\n2 10\\n1 0\\n4 0\\n3 1\\n2 0\\n3 0\\n\", \"expected\": \"5\\n6\\n8\\n8\\n15\\n13\\n13\\n11\\n1\\n0\\n\"}",
            "{\"output\": \"5\\n6\\n6\\n6\\n15\\n10\\n10\\n10\\n0\\n0\\n\", \"inputs\": \"4 2 10\\n1 5\\n2 1\\n3 3\\n4 2\\n2 10\\n1 0\\n4 0\\n3 1\\n2 0\\n3 0\\n\", \"expected\": \"5\\n6\\n8\\n8\\n15\\n13\\n13\\n11\\n1\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=2: 6 != 8\"}",
            "{\"output\": \"5\\n6\\n8\\n8\\n15\\n7\\n7\\n7\\n6\\n6\\n\", \"inputs\": \"4 2 10\\n1 5\\n2 1\\n3 3\\n4 2\\n2 10\\n1 0\\n4 0\\n3 1\\n2 0\\n3 0\\n\", \"expected\": \"5\\n6\\n8\\n8\\n15\\n13\\n13\\n11\\n1\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=5: 7 != 13\"}",
            "{\"error\": \"NameError(\\\"name 'K' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 10\\n1 5\\n2 1\\n3 3\\n4 2\\n2 10\\n1 0\\n4 0\\n3 1\\n2 0\\n3 0\\n\", \"expected\": \"5\\n6\\n8\\n8\\n15\\n13\\n13\\n11\\n1\\n0\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"126338 42191 500000\\n45724 1\\n62891 0\\n105084 1\\n4823 0\\n93536 1\\n3857 1\\n18730 1\\n89211 1\\n53182 0\\n19535 0\\n118769 1\\n108052 1\\n95411 0\\n43344 1\\n34275 0\\n17514 0\\n6...(truncated) ...71 0\\n5270 0\\n112256 1\\n72989 0\\n116680 1\\n1289 0\\n108556 1\\n53284 1\\n86513 0\\n81459 0\\n2999 0\\n84767 1\\n124716 0\\n48099 0\\n97725 1\\n6472 1\\n81710 1\\n114043 1\\n58953 0\\n\", \"expected\": \"1\\n1\\n2\\n2\\n3\\n4\\n5\\n6\\n6\\n6\\n7\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n13\\n14\\n15\\n16\\n17\\n17\\n17\\n18\\n18\\n19\\n20\\n20\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n25\\n26\\n27\\n27\\n28\\n29\\n30...(truncated) ...42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n42191\\n\"}"
        ],
        [
            "{\"output\": \"3000 7000 11000 9000 7000 11000 15000\\n\", \"inputs\": \"2\\n1000 2000 3000 4000 5000 6000 7000 2000 3000 4000 5000 6000 7000 8000\\n\", \"expected\": \"28000 35000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3000 7000 11000 9000 7000 11000 15000 != 28000 35000\"}",
            "{\"execution time\": 0.02052021026611328}",
            "{\"execution time\": 0.014473915100097656}",
            "{\"output\": \"3000 7000 11000 9000 7000 11000 15000\\n\", \"inputs\": \"2\\n1000 2000 3000 4000 5000 6000 7000 2000 3000 4000 5000 6000 7000 8000\\n\", \"expected\": \"28000 35000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3000 7000 11000 9000 7000 11000 15000 != 28000 35000\"}",
            "{\"execution time\": 0.01959967613220215}",
            "{\"execution time\": 0.020147323608398438}",
            "{\"execution time\": 0.0176236629486084}",
            "{\"output\": \"28000\\n35000\\n\", \"inputs\": \"2\\n1000 2000 3000 4000 5000 6000 7000 2000 3000 4000 5000 6000 7000 8000\\n\", \"expected\": \"28000 35000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"execution time\": 0.018016815185546875}",
            "{\"output\": \"3000 7000 11000 9000 7000 11000 15000\\n\", \"inputs\": \"2\\n1000 2000 3000 4000 5000 6000 7000 2000 3000 4000 5000 6000 7000 8000\\n\", \"expected\": \"28000 35000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3000 7000 11000 9000 7000 11000 15000 != 28000 35000\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"90\\nhwhsenqkbdksydxkmvefatedkldjqxaeunmea\\nblqsaqtimgfehoarlgbqbcdnrtapxotmambwtmkgk\\nqmabumdwqpjrlnnbchndcjajcnxbzkdmjbgjxtoyxmcimgf\\nvxatsdfxanxmwjxawbl...(truncated) ...jxcxqefxtcidn\\nphhqgseghbxhqlkitfjijtscpxbrlfnz\\nmzqvvuybkcgdrdpdehrhscldphcdlihqgky\\nduglfkylpvjsnojqbvnzxuchletmntz\\netjlzlzybdkutzbwfcqnoirdoikjepfavk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"error\": \"NameError(\\\"name 'C' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"NameError(\\\"name 'C' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"NameError(\\\"name 'C' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'C' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3 5\\n#.#..\\n.....\\n.#...\\n2 2\\n#.\\n.#\\n5 3\\n...\\n#.#\\n.#.\\n.#.\\n...\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2\\n()\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2\\n()\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2\\n()\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2\\n()\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2\\n()\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}",
            "{\"output\": \"a\\n\", \"inputs\": \"8\\na(b(d))c\\n\", \"expected\": \"ac\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: a != ac\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2\\n()\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2\\n()\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6\\n)))(((\\n\", \"expected\": \")))(((\\n\"}"
        ],
        [
            "{\"output\": \"12\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 6\"}",
            "{\"output\": \"36\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 36 != 6\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 6\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 6\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 6\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 6\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 6\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 6\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 6\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 6\"}"
        ],
        [
            "{\"execution time\": 0.02188587188720703}",
            "{\"execution time\": 0.015517473220825195}",
            "{\"execution time\": 0.01804637908935547}",
            "{\"execution time\": 0.020806312561035156}",
            "{\"execution time\": 0.02322101593017578}",
            "{\"execution time\": 0.014106512069702148}",
            "{\"execution time\": 0.019967079162597656}",
            "{\"execution time\": 0.021131515502929688}",
            "{\"execution time\": 0.01582932472229004}",
            "{\"execution time\": 0.02248406410217285}"
        ],
        [
            "{\"error\": \"TypeError('list indices must be integers or slices, not str')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"output\": \"3200\\n\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3200 != 5200\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"output\": \"3200\\n\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3200 != 5200\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'blue'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'blue'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}",
            "{\"output\": \"3200\\n\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3200 != 5200\"}",
            "{\"error\": \"TypeError(\\\"unsupported operand type(s) for +=: 'int' and 'str'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nred green blue\\nblue red\\n800 1600 2800\\n\", \"expected\": \"5200\\n\"}"
        ],
        [
            "{\"output\": \"2\\n3\\n1\\n\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\"}",
            "{\"output\": \"1918 11597 17853 18435 27510 36081 39935 42885 44371 48618 49897 55068 55427 56879 68785 69471 79102 80279 92312 93070 100655 103804 112188 120056 121...(truncated) ...64 132010 134807 135664 137623 141914 143965 145802 146453 149774 158587 161039 172832 177924 178434 180944 189482 190921 192337 192719 193712 194924\\n\", \"inputs\": \"200000\\n999953947 1\\n999896775 1\\n999936648 1\\n999801438 1\\n999902766 1\\n999880711 1\\n999985758 1\\n999960175 1\\n999869875 1\\n999831181 1\\n999850852 1\\n999978939 1...(truncated) ...553 1\\n999831450 1\\n999946317 1\\n999915501 1\\n999883538 1\\n999991809 1\\n999903087 1\\n999966499 1\\n999892806 1\\n999929788 1\\n999809174 1\\n999987362 1\\n999961516 1\\n\", \"expected\": \"48618 36081 55427 103804 166739 27510 144677 120056 17853 18435 1918 131511 69471 80279 112188 93070 55068 68785 121207 56879 42885 44371 49897 79102 ...(truncated) ... 145802 135664 50498 18173 95742 192337 68098 4351 194924 109710 146453 158587 2349 97210 190921 27285 112090 189482 132010 92941 177924 141914 68054\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1918 11597 17853 18435 27510 36081 39935 42885 44371 48618 49897 55068 55427 56879 68785 69471 79102 80279 92312 93070 100655 103804 112188 120056 121...(truncated) ...964 132010 134807 135664 137623 141914 143965 145802 146453 149774 158587 161039 172832 177924 178434 180944 189482 190921 192337 192719 193712 194924 != 48618 36081 55427 103804 166739 27510 144677 120056 17853 18435 1918 131511 69471 80279 112188 93070 55068 68785 121207 56879 42885 44371 49897 79102 ...(truncated) ...4 145802 135664 50498 18173 95742 192337 68098 4351 194924 109710 146453 158587 2349 97210 190921 27285 112090 189482 132010 92941 177924 141914 68054\"}",
            "{\"output\": \"3\\n4\\n2\\n\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"2\\n3\\n1\\n\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"2\\n3\\n1\\n\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"2\\n3\\n1\\n\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"2\\n3\\n1\\n\", \"inputs\": \"3\\n1 3\\n3 1\\n2 2\\n\", \"expected\": \"2 3 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2 3\\nsns\\neuk\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"output\": \"4\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3\\n0 1 2\\nMEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"-4\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -4 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"4\\n1 1 0 2\\nMEEX\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}"
        ],
        [
            "{\"output\": \"inf\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: inf != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"15\\n\", \"inputs\": \"10 5\\n9 7 1 5 2 2 5 5 7 6\\n7 2 7 8 2\\n3 2 4 1 2\\n\", \"expected\": \"37\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 37\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"-6\\n\", \"inputs\": \"3 3\\n4 3 1\\n4 4 2\\n2 3 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -6 != 4\"}"
        ],
        [
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: unmatched ']' (<string>, line 27)\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0101\\n1101\\n1111\\n0000\\n\", \"expected\": \"1010\\n1101\\n0111\\n0001\\n\"}"
        ],
        [
            "{\"output\": \"1\\n\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"4 100\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"4 100\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"4 8\\n6 3\\n2 5\\n1 9\\n4 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}"
        ],
        [
            "{\"output\": \"3\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 5\"}",
            "{\"output\": \"inf\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: inf != 5\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 5\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 6\\n1 2\\n2 3\\n4 5\\n4 6\\n1 3\\n6 7\\n\", \"expected\": \"5\\n\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\n1 2 1 3 3 3\\n1 1\\n1 2\\n4 3\\n\", \"expected\": \"4\\n\"}"
        ],
        [
            "{\"output\": \"120\\n\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 120 != 70\"}",
            "{\"execution time\": 0.01753377914428711}",
            "{\"output\": \"50\\n\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 50 != 70\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 70\"}",
            "{\"output\": \"120\\n\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 120 != 70\"}",
            "{\"output\": \"100\\n\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100 != 70\"}",
            "{\"output\": \"160\\n\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 160 != 70\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"1 3 1\\n1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"execution time\": 0.0182034969329834}",
            "{\"output\": \"20\\n\", \"inputs\": \"3 100 50\\n60 20 40\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 70\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '10000 2 1 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '10000 2 1 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '10000 2 1 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '10000 2 1 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '10000 2 1 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"4 4\\n3 1 1\\n3 1 2\\n3 1 2\\n4 2 2 3\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '10000 2 1 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '10000 2 1 3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n10000 2 1 3\\n15000 3 1 2 4\\n30000 3 1 3 5\\n35000 2 1 5\\n100000 6 1 2 3 4 5 6\\n\", \"expected\": \"Yes\\n\"}"
        ],
        [
            "{\"output\": \"4\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"6\\na\\nabc\\nde\\ncba\\nde\\nabc\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}"
        ],
        [
            "{\"output\": \"16\\n\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 16 != 4\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 4\"}",
            "{\"error\": \"NameError(\\\"name 'teams' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"15\\n\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 4\"}",
            "{\"output\": \"16\\n\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 16 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 2 2\\n1 3\\n3 4\\n\", \"expected\": \"4\\n\"}"
        ],
        [
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n00110\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 9\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 942786334\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\"}",
            "{\"output\": \"0.0\\n\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0.0 != 942786334\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\"}",
            "{\"output\": \"2/21\\n\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2/21 != 942786334\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 942786334\"}",
            "{\"output\": \"15845148.460317459\\n\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15845148.460317459 != 942786334\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 7 2 9\\n\", \"expected\": \"942786334\\n\"}"
        ],
        [
            "{\"output\": \"3\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\nACABB\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 2\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3 5\\nxooox\\noooxx\\noooxo\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 2\"}"
        ],
        [
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\n6 7 2 1 3 4 5\\n\", \"expected\": \"4\\n7 5 3 2\\n\"}"
        ],
        [
            "{\"output\": \"15\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 12\"}",
            "{\"output\": \"15\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 12\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\"}",
            "{\"output\": \"15\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 12\"}",
            "{\"output\": \"15\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 12\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\"}",
            "{\"output\": \"15\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 12\"}",
            "{\"output\": \"15\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 12\"}",
            "{\"output\": \"22\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 22 != 12\"}",
            "{\"output\": \"15\\n\", \"inputs\": \"6 6\\n######\\n#....#\\n#.#..#\\n#..#.#\\n#....#\\n######\\n\", \"expected\": \"12\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 15 != 12\"}"
        ],
        [
            "{\"output\": \"12\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 6\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3 2 6\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 0\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 6\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 6\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 6\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3000 3000 0\\n\", \"expected\": \"9004500500\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3000 3000 0\\n\", \"expected\": \"9004500500\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 6\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 6\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"2 3 1\\n2 3\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 6\"}"
        ],
        [
            "{\"execution time\": 0.022001266479492188}",
            "{\"execution time\": 0.019073009490966797}",
            "{\"execution time\": 0.025829792022705078}",
            "{\"execution time\": 0.02349543571472168}",
            "{\"execution time\": 0.020295381546020508}",
            "{\"execution time\": 0.02266550064086914}",
            "{\"execution time\": 0.01387786865234375}",
            "{\"execution time\": 0.015976905822753906}",
            "{\"execution time\": 0.022539377212524414}",
            "{\"execution time\": 0.021444320678710938}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: invalid syntax (<string>, line 5)\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\"}",
            "{\"output\": \"\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: invalid syntax (<string>, line 5)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: invalid syntax (<string>, line 5)\"}",
            "{\"output\": \"\", \"inputs\": \"19 18\\n###......###......\\n###......###......\\n###..#...###..#...\\n..............#...\\n..................\\n..................\\n......###......###\\n......###.....(truncated) ...##..............\\n............###...\\n...##.......###...\\n...##.......###...\\n.......###........\\n.......###........\\n.......###........\\n........#.........\\n\", \"expected\": \"1 1\\n1 10\\n7 7\\n10 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ],
        [
            "{\"execution time\": 2.3923254013061523}",
            "{\"execution time\": 2.444800615310669}",
            "{\"execution time\": 4.790910959243774}",
            "{\"execution time\": 2.4365148544311523}",
            "{\"execution time\": 2.4566714763641357}",
            "{\"execution time\": 2.534698724746704}",
            "{\"execution time\": 4.820748805999756}",
            "{\"output\": \"1\\n\", \"inputs\": \"1 2\\n1\\n1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"execution time\": 2.4856061935424805}",
            "{\"execution time\": 2.43051815032959}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error\": \"NameError(\\\"name 'MOD' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error\": \"NameError(\\\"name 'MOD' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"NameError(\\\"name 'MOD' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"384\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 384 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error\": \"NameError(\\\"name 'MOD' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"(???(?\\n\", \"expected\": \"2\\n\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\"}",
            "{\"output\": \"6\\n6\\n6\\n0\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 1\"}",
            "{\"output\": \"2\\n2\\n2\\n0\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"2\\n1\\n0\\n0\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}",
            "{\"output\": \"2\\n2\\n2\\n0\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n\", \"inputs\": \"4\\n0 0 0 1 1 1\\n0 0 1 1 1 2\\n1 1 1 2 2 2\\n3 3 3 4 4 4\\n\", \"expected\": \"1\\n1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}"
        ],
        [
            "{\"output\": \"4\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 27\"}",
            "{\"output\": \"131\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 131 != 27\"}",
            "{\"output\": \"31\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 31 != 27\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 27\"}",
            "{\"output\": \"131\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 131 != 27\"}",
            "{\"output\": \"131\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 131 != 27\"}",
            "{\"output\": \"116\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 116 != 27\"}",
            "{\"output\": \"31\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 31 != 27\"}",
            "{\"output\": \"131\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 131 != 27\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"8 4\\n0 6\\n0 6\\n1 3\\n1 5\\n1 15\\n2 1\\n2 10\\n2 100\\n\", \"expected\": \"27\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 27\"}"
        ],
        [
            "{\"output\": \"-3\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -3 != 11\"}",
            "{\"output\": \"14\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 14 != 11\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 11\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 11\"}",
            "{\"output\": \"-3\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -3 != 11\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 11\"}",
            "{\"output\": \"-3\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -3 != 11\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 11\"}",
            "{\"output\": \"-3\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -3 != 11\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"4\\n5 15 2 10\\n\", \"expected\": \"11\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 11\"}"
        ],
        [
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"None\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: None != 1\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'visited' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"3 2\\n1 3\\n2 3\\n\", \"expected\": \"-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != -1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}"
        ],
        [
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n4 7 3 7\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}",
            "{\"output\": \"999999996\\n\", \"inputs\": \"10\\n999999997 999999999 4 3 2 4 999999990 8 999999991 999999993\\n\", \"expected\": \"2499999974\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999996 != 2499999974\"}"
        ],
        [
            "{\"output\": \"3.1\\n\", \"inputs\": \"2\\n\", \"expected\": \"3.14\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.1 != 3.14\"}",
            "{\"output\": \"3.14159265358979311599796346854419\\n\", \"inputs\": \"32\\n\", \"expected\": \"3.14159265358979323846264338327950\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.14159265358979311599796346854419 != 3.14159265358979323846264338327950\"}",
            "{\"output\": \"3.1\\n\", \"inputs\": \"2\\n\", \"expected\": \"3.14\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.1 != 3.14\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"3.1\\n\", \"inputs\": \"2\\n\", \"expected\": \"3.14\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.1 != 3.14\"}",
            "{\"output\": \"3.1\\n\", \"inputs\": \"2\\n\", \"expected\": \"3.14\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.1 != 3.14\"}",
            "{\"output\": \"3.14159265358979311599796346854419\\n\", \"inputs\": \"32\\n\", \"expected\": \"3.14159265358979323846264338327950\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.14159265358979311599796346854419 != 3.14159265358979323846264338327950\"}",
            "{\"output\": \"3.1\\n\", \"inputs\": \"2\\n\", \"expected\": \"3.14\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.1 != 3.14\"}",
            "{\"output\": \"3.1\\n\", \"inputs\": \"2\\n\", \"expected\": \"3.14\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.1 != 3.14\"}",
            "{\"output\": \"3.1\\n\", \"inputs\": \"2\\n\", \"expected\": \"3.14\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3.1 != 3.14\"}"
        ],
        [
            "{\"output\": \"26\\n1 5 6 8 9 11 12 13 14 15 16 17 18 21 22 23 25 27 28 29 30 32 33 34 35 36\\n\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 2\"}",
            "{\"output\": \"26\\n2 6 7 9 10 12 13 14 15 16 17 18 19 22 23 24 26 28 29 30 31 33 34 35 36 37\\n\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 2\"}",
            "{\"error\": \"TypeError('list indices must be integers or slices, not list')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"26\\n2 6 7 9 10 12 13 14 15 16 17 18 19 22 23 24 26 28 29 30 31 33 34 35 36 37\\n\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 2\"}",
            "{\"output\": \"1\\n3\\n\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '26 10'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n3\\n7 19 20\\n4\\n4 19 24 0\\n2\\n26 10\\n3\\n19 31 24\\n19\\n\", \"expected\": \"2\\n1 4\\n\"}"
        ],
        [
            "{\"output\": \"p\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: p != cszapqbr\"}",
            "{\"output\": \"qrcsapzb\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: qrcsapzb != cszapqbr\"}",
            "{\"output\": \"qrcsapzb\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: qrcsapzb != cszapqbr\"}",
            "{\"output\": \"zbqrcsap\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: zbqrcsap != cszapqbr\"}",
            "{\"output\": \"\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != cszapqbr\"}",
            "{\"output\": \"zbqrcsap\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: zbqrcsap != cszapqbr\"}",
            "{\"output\": \"qrcsapzb\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: qrcsapzb != cszapqbr\"}",
            "{\"output\": \"zbqrcsap\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: zbqrcsap != cszapqbr\"}",
            "{\"output\": \"qrcsapzb\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: qrcsapzb != cszapqbr\"}",
            "{\"output\": \"qrcsapzb\\n\", \"inputs\": \"8 3\\napzbqrcs\\n1 2 3 1 2 2 1 2\\n\", \"expected\": \"cszapqbr\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: qrcsapzb != cszapqbr\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'i'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\nAtCoder\\n5\\n1 4 i\\n3 0 a\\n1 5 b\\n2 0 a\\n1 4 Y\\n\", \"expected\": \"atcYber\\n\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '100 2 5 9'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '100 2 5 9\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '100 2 5 9'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '100 2 5 9'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '100 2 5 9'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '100 2 5 9'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 14\\n100 2 5 9\\n50 4 1 2 4 8\\n70 5 2 4 2 8 8\\n\", \"expected\": \"215.913355350494384765625\\n\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"output\": \"0.3333333333333333 0.3333333333333333 0.5714285714285714 0.375 1.1111111111111112 \\n\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0.3333333333333333 0.3333333333333333 0.5714285714285714 0.375 1.1111111111111112 != 698771048 698771048 964969543 964969543 133099248\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"output\": \"11/15 8/15 131/280 19/35 13/40 \\n\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11/15 8/15 131/280 19/35 13/40 != 698771048 698771048 964969543 964969543 133099248\"}",
            "{\"output\": \"8/15 1/3 15/56 12/35 1/8 \\n\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8/15 1/3 15/56 12/35 1/8 != 698771048 698771048 964969543 964969543 133099248\"}",
            "{\"output\": \"8 1 15 12 1 \\n\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 1 15 12 1 != 698771048 698771048 964969543 964969543 133099248\"}",
            "{\"output\": \"4 4 4 4 4 \\n\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 4 4 4 4 != 698771048 698771048 964969543 964969543 133099248\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_wins' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 2\\n4 3\\n5 3\\n1 4\\n\", \"expected\": \"698771048 698771048 964969543 964969543 133099248\\n\"}"
        ],
        [
            "{\"execution time\": 0.018102169036865234}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.01746845245361328}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"output\": \"8 181\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 181 != 7 2\"}",
            "{\"output\": \"7 182\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 182 != 7 2\"}",
            "{\"output\": \"7 182\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 182 != 7 2\"}",
            "{\"output\": \"8 181\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 181 != 7 2\"}",
            "{\"output\": \"7 30\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 30 != 7 2\"}",
            "{\"output\": \"8 181\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 181 != 7 2\"}",
            "{\"output\": \"8 181\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 181 != 7 2\"}",
            "{\"output\": \"7 -28\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 -28 != 7 2\"}",
            "{\"output\": \"1 30\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 30 != 7 2\"}",
            "{\"output\": \"8 181\\n\", \"inputs\": \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 181 != 7 2\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '1 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 4\\n2 10\\n2 8\\n3 6\\n\", \"expected\": \"16\\n\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"TypeError(\\\"'set' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"TypeError(\\\"'set' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"TypeError(\\\"'set' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"TypeError(\\\"'str' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"12\\n\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 2\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"4 3\\naaa\\naaa\\nabc\\nabd\\n\", \"expected\": \"2\\n\"}"
        ],
        [
            "{\"error\": \"ValueError('not enough values to unpack (expected at least 1, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"output\": \"5\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 5 3 4 2\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 5 3 4 2\"}",
            "{\"output\": \"\\n\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0:  != 5 3 4 2\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 2 3 4'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n3 2 3 4\\n2 3 5\\n0\\n1 5\\n0\\n0\\n\", \"expected\": \"5 3 4 2\\n\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\"}",
            "{\"output\": \"7.650281539872885\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7.650281539872885 != 5.82842712474619009753\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: invalid syntax (<string>, line 22)\"}",
            "{\"output\": \"5.0\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5.0 != 5.82842712474619009753\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\"}",
            "{\"output\": \"9.0\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9.0 != 5.82842712474619009753\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\"}",
            "{\"output\": \"23.0\\n\", \"inputs\": \"6\\n0 0\\n1 1\\n2 0\\n0 1\\n1 0\\n2 1\\n\", \"expected\": \"5.82842712474619009753\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23.0 != 5.82842712474619009753\"}"
        ],
        [
            "{\"execution time\": 0.031479835510253906}",
            "{\"execution time\": 0.0318605899810791}",
            "{\"execution time\": 0.030318498611450195}",
            "{\"output\": \"2\\n\", \"inputs\": \"13 3 5\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"execution time\": 0.03075432777404785}",
            "{\"output\": \"2\\n\", \"inputs\": \"13 3 5\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"13 3 5\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"execution time\": 0.03290677070617676}",
            "{\"execution time\": 0.028890371322631836}",
            "{\"execution time\": 0.03326416015625}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 20\"}",
            "{\"output\": \"31\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 31 != 20\"}",
            "{\"output\": \"36\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 36 != 20\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 20\"}",
            "{\"output\": \"31\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 31 != 20\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 20\"}",
            "{\"output\": \"31\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 31 != 20\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\"}",
            "{\"output\": \"31\\n\", \"inputs\": \"3\\n0 5 1 3\\n1 4 0 5\\n2 5 2 4\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 31 != 20\"}"
        ],
        [
            "{\"output\": \"11\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 20\"}",
            "{\"output\": \"70\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 70 != 20\"}",
            "{\"output\": \"13\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 13 != 20\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 20\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\"}",
            "{\"output\": \"23\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 20\"}",
            "{\"output\": \"46\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 46 != 20\"}",
            "{\"output\": \"23\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 23 != 20\"}",
            "{\"output\": \"50\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 50 != 20\"}",
            "{\"output\": \"18\\n\", \"inputs\": \"5 2 10\\n7 1 6 3 6\\n\", \"expected\": \"20\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 18 != 20\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('tuple index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}",
            "{\"output\": \"9\\n\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 13\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n1 5 4\\n7 8\\n6\\n\", \"expected\": \"13\\n\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n1 2 1 3 2\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"124893\\n105620 30678 26172 101479 18195 48565 34172 110323 96682 35216 101534 93596 58378 111085 11926 80423 28943 20691 57757 61928 110361 57277 12202...(truncated) ...02794 50757 7743 85085 30115 14606 69328 89209 82038 45748 17735 8119 19608 84141 109961 28603 15511 98057 17605 65827 72096 31426 98408 18938 109425\\n\", \"expected\": \"2597056328\\n\"}"
        ],
        [
            "{\"execution time\": 0.026374340057373047}",
            "{\"execution time\": 0.02174520492553711}",
            "{\"execution time\": 0.025827407836914062}",
            "{\"output\": \"1111111111111\\n\", \"inputs\": \"12\\n\", \"expected\": \"1-643-2-346-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1111111111111 != 1-643-2-346-1\"}",
            "{\"output\": \"1111111111111\\n\", \"inputs\": \"12\\n\", \"expected\": \"1-643-2-346-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1111111111111 != 1-643-2-346-1\"}",
            "{\"execution time\": 0.029385805130004883}",
            "{\"output\": \"1111111111111\\n\", \"inputs\": \"12\\n\", \"expected\": \"1-643-2-346-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1111111111111 != 1-643-2-346-1\"}",
            "{\"execution time\": 0.01625347137451172}",
            "{\"execution time\": 0.02233409881591797}",
            "{\"output\": \"1 1 1 1 1 1 1 1 1 1 1 1 1\\n\", \"inputs\": \"12\\n\", \"expected\": \"1-643-2-346-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 1 1 1 1 1 1 1 1 1 1 1 1 != 1-643-2-346-1\"}"
        ],
        [
            "{\"output\": \"720.0\\n\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 720.0 != 0.666666666666666666666666666667\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\"}",
            "{\"output\": \"1.0\\n\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1.0 != 0.666666666666666666666666666667\"}",
            "{\"output\": \"1.0\\n\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1.0 != 0.666666666666666666666666666667\"}",
            "{\"error\": \"NameError(\\\"name 'p' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\"}",
            "{\"output\": \"0.0\\n\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0.0 != 0.666666666666666666666666666667\"}",
            "{\"output\": \"1.0\\n\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1.0 != 0.666666666666666666666666666667\"}",
            "{\"error\": \"NameError(\\\"name 'p' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 1 9\\n2 5 6\\n2 7 1\\n\", \"expected\": \"0.666666666666666666666666666667\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 0.666666666666666666666666666667\"}"
        ],
        [
            "{\"output\": \"12\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12 != 26\"}",
            "{\"output\": \"67\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 67 != 26\"}",
            "{\"output\": \"9\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 26\"}",
            "{\"output\": \"9\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 26\"}",
            "{\"output\": \"14\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 14 != 26\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 26\"}",
            "{\"output\": \"14\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 14 != 26\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 26\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 26\"}",
            "{\"output\": \"inf\\n\", \"inputs\": \"13 3\\n9 5 2 7 1 8 8 2 1 5 2 3 6\\n\", \"expected\": \"26\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: inf != 26\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"output\": \"25\\n37\\n0\\n1563124271\\n300074569\\n1678660241\\n1418355249\\n\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 25 != 34\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 7, got 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2 3\\n5 4\\n6 6\\n3 1\\n7\\n13\\n0\\n710511029\\n136397527\\n763027379\\n644706927\\n447672230\\n\", \"expected\": \"34\\n22\\n710511052\\n136397548\\n763027402\\n644706946\\n447672250\\n\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"execution time\": 0.02060079574584961}",
            "{\"execution time\": 0.025925159454345703}",
            "{\"execution time\": 0.027616262435913086}",
            "{\"execution time\": 0.01892566680908203}",
            "{\"execution time\": 0.027141094207763672}",
            "{\"output\": \"35\\n\", \"inputs\": \"YJDXXCCJTGQFBFJJMUEDBHPSYSPHBDEUMJJFBFQVRTRSRFZYZGXRCCNV\\n\", \"expected\": \"29\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 35 != 29\"}",
            "{\"output\": \"35\\n\", \"inputs\": \"YJDXXCCJTGQFBFJJMUEDBHPSYSPHBDEUMJJFBFQVRTRSRFZYZGXRCCNV\\n\", \"expected\": \"29\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 35 != 29\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"TOYOTA\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 5\"}",
            "{\"output\": \"35\\n\", \"inputs\": \"YJDXXCCJTGQFBFJJMUEDBHPSYSPHBDEUMJJFBFQVRTRSRFZYZGXRCCNV\\n\", \"expected\": \"29\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 35 != 29\"}",
            "{\"execution time\": 0.0330657958984375}"
        ],
        [
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"10\\n1937458062\\n8124690357\\n2385760149\\n\", \"expected\": \"6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 6\"}"
        ],
        [
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\"}",
            "{\"output\": \"undecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 4, got 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\"}",
            "{\"output\": \"\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\"}",
            "{\"output\": \"undecidable\\nundecidable\\nundecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: undecidable != 0 0\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\"}",
            "{\"output\": \"undecidable\\nundecidable\\nundecidable\\n\", \"inputs\": \"3 2\\n1 2 2 1\\n1 3 -1 -2\\n\", \"expected\": \"0 0\\n2 1\\n-1 -2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: undecidable != 0 0\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\"}",
            "{\"output\": \"1\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"1001\\n1000000010\\n100\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1001 != 101\"}",
            "{\"output\": \"1000000011\\n100\\n1000\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1000000011 != 101\"}",
            "{\"output\": \"0\\n0\\n0\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 101\"}",
            "{\"output\": \"1\\n1\\n1\\n\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 101\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 5\\n1 1 3\\n2 10 100\\n4 100 10000\\n10 1000 1000000000\\n100 1000000000 1\\n\", \"expected\": \"101\\n10\\n1000\\n\"}"
        ],
        [
            "{\"execution time\": 0.027997970581054688}",
            "{\"execution time\": 0.02257561683654785}",
            "{\"execution time\": 0.020771503448486328}",
            "{\"output\": \"No\\n\", \"inputs\": \"321\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"execution time\": 0.018212556838989258}",
            "{\"execution time\": 0.02405571937561035}",
            "{\"output\": \"No\\n\", \"inputs\": \"321\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"execution time\": 0.020543813705444336}",
            "{\"execution time\": 0.021973609924316406}",
            "{\"execution time\": 0.021134614944458008}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 70\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 70\"}",
            "{\"output\": \"50\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 50 != 70\"}",
            "{\"output\": \"190\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 190 != 70\"}",
            "{\"output\": \"-10\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -10 != 70\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"60\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 60 != 70\"}",
            "{\"output\": \"100\\n\", \"inputs\": \"5 180\\n40 60 80 50\\n\", \"expected\": \"70\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100 != 70\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"967\\n\", \"expected\": \"76543210\\n\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}",
            "{\"output\": \"30\\n\", \"inputs\": \"15\\n\", \"expected\": \"32\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 30 != 32\"}"
        ],
        [
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 2 7\\n3 5\\n6 1\\n\", \"expected\": \"24\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 2 7\\n3 5\\n6 1\\n\", \"expected\": \"24\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 2 7\\n3 5\\n6 1\\n\", \"expected\": \"24\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 2 7\\n3 5\\n6 1\\n\", \"expected\": \"24\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"53924 13260 36506470\\n21030080 32669546 63111143 19565663 11416933 30077526 40479345 38263853 68347275 30320768 42158765 3732982 5865152 96240856 90494...(truncated) ...92263 75581059 42170972 54705580 12266080 14830347 25030058 46335509 77291191 12500804 34267261 46561102 32034753 16815258 20444325 75299311 53443972\\n\", \"expected\": \"25527969701142671\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 2 7\\n3 5\\n6 1\\n\", \"expected\": \"24\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 2 7\\n3 5\\n6 1\\n\", \"expected\": \"24\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 2 7\\n3 5\\n6 1\\n\", \"expected\": \"24\\n\"}"
        ],
        [
            "{\"output\": \"8\\n1\\n1\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 1\"}",
            "{\"output\": \"8\\n1\\n1\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 1\"}",
            "{\"output\": \"9\\n1\\n1\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 1\"}",
            "{\"output\": \"1\\n1\\n0\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 3\"}",
            "{\"output\": \"9\\n1\\n1\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 1\"}",
            "{\"error\": \"NameError(\\\"name 'graph' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\"}",
            "{\"output\": \"9\\n1\\n1\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 1\"}",
            "{\"output\": \"9\\n1\\n1\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 9 != 1\"}",
            "{\"output\": \"1\\n1\\n0\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 3\"}",
            "{\"output\": \"0\\n1\\n1\\n0\\n0\\n\", \"inputs\": \"5\\n10 2 0\\n10 2 1\\n10 2 2\\n10 2 3\\n10 2 4\\n\", \"expected\": \"1\\n3\\n4\\n2\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}"
        ],
        [
            "{\"execution time\": 0.016226530075073242}",
            "{\"execution time\": 0.013880014419555664}",
            "{\"execution time\": 0.012907981872558594}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3\\nABC\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"execution time\": 0.014531612396240234}",
            "{\"execution time\": 0.017674684524536133}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3\\nABC\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3\\nABC\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}",
            "{\"execution time\": 0.018942832946777344}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3\\nABC\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 1\"}"
        ],
        [
            "{\"execution time\": 0.02884674072265625}",
            "{\"output\": \"2\\n\", \"inputs\": \"3 3\\nabc\\nxyz\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"execution time\": 0.022475004196166992}",
            "{\"execution time\": 0.02156972885131836}",
            "{\"execution time\": 0.02434253692626953}",
            "{\"execution time\": 0.017360448837280273}",
            "{\"execution time\": 0.02455592155456543}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 3\\naaa\\naaa\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 0\"}",
            "{\"execution time\": 0.022078990936279297}",
            "{\"output\": \"1\\n\", \"inputs\": \"3 3\\naaa\\naaa\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 0\"}"
        ],
        [
            "{\"output\": \"1\\n2\\n0\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 0\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\"}",
            "{\"output\": \"0\\n0\\n1\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"0\\n0\\n1\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"0\\n0\\n0\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"1\\n2\\n3\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 0\"}",
            "{\"output\": \"1\\n2\\n3\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 0\"}",
            "{\"output\": \"0\\n0\\n1\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"1\\n1\\n1\\n\", \"inputs\": \"3 2\\n2 3\\n\", \"expected\": \"1\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 1 != 0\"}"
        ],
        [
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"....\\n###.\\n.#..\\n....\\n....\\n.###\\n.##.\\n....\\n..#.\\n.##.\\n.##.\\n.##.\\n\", \"expected\": \"Yes\\n\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 3 0 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 3 0 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 3 0 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 3 0 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 3 0 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 3 0 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 3 0 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 3 0 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 3 0 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 3 0 2'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 3 5\\n5 3 0 2\\n3 1 2 3\\n3 2 4 0\\n1 0 1 4\\n\", \"expected\": \"9\\n\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"1010100000101000\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"execution time\": 0.02395486831665039}",
            "{\"execution time\": 0.03455066680908203}",
            "{\"execution time\": 0.02105426788330078}",
            "{\"execution time\": 0.02956223487854004}",
            "{\"output\": \"1 2 3\\n\", \"inputs\": \"3\\n-xx\\no-x\\noo-\\n\", \"expected\": \"3 2 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 3 != 3 2 1\"}",
            "{\"output\": \"2 1 3\\n\", \"inputs\": \"3\\n-xx\\no-x\\noo-\\n\", \"expected\": \"3 2 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 3 != 3 2 1\"}",
            "{\"output\": \"2 1 3\\n\", \"inputs\": \"3\\n-xx\\no-x\\noo-\\n\", \"expected\": \"3 2 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 3 != 3 2 1\"}",
            "{\"output\": \"2 1 3\\n\", \"inputs\": \"3\\n-xx\\no-x\\noo-\\n\", \"expected\": \"3 2 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 3 != 3 2 1\"}",
            "{\"output\": \"2 1 3\\n\", \"inputs\": \"3\\n-xx\\no-x\\noo-\\n\", \"expected\": \"3 2 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 3 != 3 2 1\"}",
            "{\"output\": \"2 1 3\\n\", \"inputs\": \"3\\n-xx\\no-x\\noo-\\n\", \"expected\": \"3 2 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 3 != 3 2 1\"}"
        ],
        [
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"output\": \"500\\n0\\n200\\n\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 500 != 0\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1000 500 700 2000\\nxxxo\\nooxx\\noxox\\n\", \"expected\": \"0\\n1\\n1\\n\"}"
        ],
        [
            "{\"output\": \"999999998\\n\", \"inputs\": \"1\\n1000000000 1000000000\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999998 != 13\"}",
            "{\"error\": \"NameError(\\\"name 'slime' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"error\": \"NameError(\\\"name 'slime' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"999999998\\n\", \"inputs\": \"1\\n1000000000 1000000000\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999998 != 13\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"1\\n1000000000 1000000000\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 13\"}",
            "{\"output\": \"-7\\n\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -7 != 3\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 3\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"3\\n3 3\\n5 1\\n6 1\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 3\"}",
            "{\"output\": \"999999998\\n\", \"inputs\": \"1\\n1000000000 1000000000\\n\", \"expected\": \"13\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 999999998 != 13\"}"
        ],
        [
            "{\"output\": \"499122176\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 499122176 != 369720131\"}",
            "{\"output\": \"110916039\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 110916039 != 369720131\"}",
            "{\"output\": \"6.5\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6.5 != 369720131\"}",
            "{\"output\": \"499122176\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 499122176 != 369720131\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"285212672\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 285212672 != 369720131\"}",
            "{\"output\": \"6.5\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6.5 != 369720131\"}",
            "{\"output\": \"0.015228029987505207\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0.015228029987505207 != 369720131\"}",
            "{\"output\": \"499122176\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 499122176 != 369720131\"}",
            "{\"output\": \"499122176\\n\", \"inputs\": \"3 6\\n3 5 6\\n\", \"expected\": \"369720131\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 499122176 != 369720131\"}"
        ],
        [
            "{\"execution time\": 0.019896507263183594}",
            "{\"execution time\": 0.02115321159362793}",
            "{\"execution time\": 0.01830291748046875}",
            "{\"execution time\": 0.02541065216064453}",
            "{\"execution time\": 0.023456096649169922}",
            "{\"execution time\": 0.016963958740234375}",
            "{\"execution time\": 0.024339914321899414}",
            "{\"execution time\": 0.021164655685424805}",
            "{\"execution time\": 0.02209615707397461}",
            "{\"execution time\": 0.023348569869995117}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"execution time\": 0.025681018829345703}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"AttributeError(\\\"module 'math' has no attribute 'log3'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"324\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"32\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}",
            "{\"output\": \"1\\n1\\n\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: unterminated string literal (detected at line 7) (<string>, line 7)\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'ababc'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 ababc\\nababc\\nbabc\\nabacbc\\nabdbc\\nabbac\\n\", \"expected\": \"4\\n1 2 3 4\\n\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n4320\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n4320\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n4320\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n4320\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n4320\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4\\n4320\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3\\n010\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3\\n010\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3\\n010\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"3\\n010\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 2\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: 'bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 bac'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 bac\\nabba\\nbcb\\naaca\\n\", \"expected\": \"3\\n\"}"
        ],
        [
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"output\": \"2.3\\n\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2.3 != 0.7500000000000000\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"error\": \"KeyError(1)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"error\": \"ZeroDivisionError('division by zero')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"error\": \"KeyError(5)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"error\": \"TypeError('cannot unpack non-iterable int object')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"error\": \"ZeroDivisionError('float division by zero')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'b' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 7\\n1 2 3 6\\n1 3 9 5\\n2 3 1 5\\n2 4 5 3\\n2 5 1 9\\n3 4 4 8\\n4 5 2 7\\n\", \"expected\": \"0.7500000000000000\\n\"}"
        ],
        [
            "{\"execution time\": 0.013267040252685547}",
            "{\"execution time\": 0.012340307235717773}",
            "{\"execution time\": 0.012831926345825195}",
            "{\"execution time\": 0.01918625831604004}",
            "{\"execution time\": 0.011261940002441406}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.0208280086517334}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.012979745864868164}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 0'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"output\": \"1000001\\n\", \"inputs\": \"2\\n1 10\\n1000000 20\\n\", \"expected\": \"1000000\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1000001 != 1000000\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 8\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 8\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '5 0'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\n5 0\\n3 3\\n2 18\\n\", \"expected\": \"8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 8\"}"
        ],
        [
            "{\"output\": \"18\\n\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 18 != 3\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'count' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"TypeError(\\\"'set' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 3\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'count' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"TypeError(\\\"'set' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"TypeError(\\\"'set' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'count' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\"}",
            "{\"output\": \"-10\\n\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -10 != 3\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'count' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6\\n.##...\\n...#..\\n....##\\n#.#...\\n..#...\\n\", \"expected\": \"3\\n\"}"
        ],
        [
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 4\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n1 1\\n1 1\\n2 1\\n1 2\\n1 4\\n\", \"expected\": \"4\\n\"}"
        ],
        [
            "{\"output\": \"63\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 63 != 78\"}",
            "{\"error\": \"NameError(\\\"name 'visited' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\"}",
            "{\"output\": \"inf\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: inf != 78\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\"}",
            "{\"error\": \"TypeError(\\\"unhashable type: 'set'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 78\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\"}",
            "{\"output\": \"inf\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: inf != 78\"}",
            "{\"output\": \"69\\n\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 69 != 78\"}",
            "{\"error\": \"NameError(\\\"name 'visited' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 8 5 13\\n0 6 2 15\\n6 0 3 5\\n2 3 0 13\\n15 5 13 0\\n\", \"expected\": \"78\\n\"}"
        ],
        [
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 5 10\\n4 3 3\\n2 2 6\\n\", \"expected\": \"17\\n\"}"
        ],
        [
            "{\"output\": \"Yes\\n\", \"inputs\": \"100 1\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"99 96\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"1 4\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}"
        ],
        [
            "{\"execution time\": 0.01822686195373535}",
            "{\"execution time\": 0.016659975051879883}",
            "{\"execution time\": 0.01674175262451172}",
            "{\"execution time\": 0.01868891716003418}",
            "{\"execution time\": 0.018250465393066406}",
            "{\"execution time\": 0.01964735984802246}",
            "{\"execution time\": 0.018389463424682617}",
            "{\"execution time\": 0.020221471786499023}",
            "{\"execution time\": 0.017923355102539062}",
            "{\"execution time\": 0.01966691017150879}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"8 6\\n2 3 5 7 11 13 17 19\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 4\"}",
            "{\"output\": \"5708\\n\", \"inputs\": \"27771 203256333\\n338618958 826299569 84569192 784612962 240017212 68456159 608857942 655811124 220784417 980410851 736127344 70226910 682337279 9902107...(truncated) ... 671305468 238516937 330321224 307378542 978210901 472282317 44825870 923641325 241965627 839566991 299107534 905766899 416050610 345763294 519332452\\n\", \"expected\": \"5749\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5708 != 5749\"}"
        ],
        [
            "{\"output\": \"Yes\\nACAAB\\nB....\\nC....\\nB....\\nC....\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: ACAAB != AC..B\"}",
            "{\"output\": \"Yes\\nACAAB\\nB....\\nC....\\nB....\\nC....\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: ACAAB != AC..B\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"5\\nABCBC\\nACAAB\\n\", \"expected\": \"Yes\\nAC..B\\n.BA.C\\nC.BA.\\nBA.C.\\n..CBA\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 776412280\"}",
            "{\"output\": \"25\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 25 != 776412280\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 776412280\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\"}",
            "{\"output\": \"11/3\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11/3 != 776412280\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 776412280\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 776412280\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 776412280\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 776412280\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"3\\n3 2 6\\n\", \"expected\": \"776412280\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 776412280\"}"
        ],
        [
            "{\"execution time\": 0.022111177444458008}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.022403240203857422}",
            "{\"execution time\": 0.018552541732788086}",
            "{\"execution time\": 0.01825261116027832}",
            "{\"execution time\": 0.020778656005859375}",
            "{\"execution time\": 0.02059149742126465}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"11\\naccabbadbeb\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"10000000000\\n\", \"expected\": \"10\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}",
            "{\"output\": \"27\\n\", \"inputs\": \"27\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 27 != 3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"958951173370198630\\n\", \"expected\": \"-1\\n\"}"
        ],
        [
            "{\"execution time\": 0.01639080047607422}",
            "{\"execution time\": 0.020620107650756836}",
            "{\"execution time\": 0.01537775993347168}",
            "{\"execution time\": 0.01435089111328125}",
            "{\"execution time\": 0.019620418548583984}",
            "{\"execution time\": 0.015624046325683594}",
            "{\"execution time\": 0.0166013240814209}",
            "{\"execution time\": 0.02186870574951172}",
            "{\"execution time\": 0.021895885467529297}",
            "{\"execution time\": 0.01608729362487793}"
        ],
        [
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\n1 2\\n2 3\\n\", \"expected\": \"Yes\\n\"}"
        ],
        [
            "{\"output\": \"307.1796769724489\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 307.1796769724489 != 256.735020470879931\"}",
            "{\"output\": \"248.13908656654496\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 248.13908656654496 != 256.735020470879931\"}",
            "{\"output\": \"248.13908656654496\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 248.13908656654496 != 256.735020470879931\"}",
            "{\"output\": \"248.13908656654496\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 248.13908656654496 != 256.735020470879931\"}",
            "{\"output\": \"307.1796769724489\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 307.1796769724489 != 256.735020470879931\"}",
            "{\"output\": \"248.13908656654496\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 248.13908656654496 != 256.735020470879931\"}",
            "{\"output\": \"248.13908656654496\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 248.13908656654496 != 256.735020470879931\"}",
            "{\"output\": \"7775.814363319315\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7775.814363319315 != 256.735020470879931\"}",
            "{\"output\": \"248.13908656654496\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 248.13908656654496 != 256.735020470879931\"}",
            "{\"output\": \"307.1796769724489\\n\", \"inputs\": \"3\\n1000 600 1200\\n\", \"expected\": \"256.735020470879931\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 307.1796769724489 != 256.735020470879931\"}"
        ],
        [
            "{\"execution time\": 0.01759934425354004}",
            "{\"execution time\": 0.012883663177490234}",
            "{\"execution time\": 0.015482902526855469}",
            "{\"execution time\": 0.015755176544189453}",
            "{\"execution time\": 0.020503520965576172}",
            "{\"execution time\": 0.01996612548828125}",
            "{\"execution time\": 0.0169064998626709}",
            "{\"execution time\": 0.015380382537841797}",
            "{\"execution time\": 0.018904447555541992}",
            "{\"execution time\": 0.015901565551757812}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\", \"expected\": \"13\\n\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"output\": \"2\\n2\\n1\\n0\\n\", \"inputs\": \"11 4\\nmississippi\\n3 9\\n4 10\\n4 6\\n7 7\\n\", \"expected\": \"2\\n2\\n0\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=2: 1 != 0\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"11 4\\nmississippi\\n3 9\\n4 10\\n4 6\\n7 7\\n\", \"expected\": \"2\\n2\\n0\\n0\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"24353 300000\\nfccebaghhcdbehagchhggeafbegeabagfbcedgbcfgdhhefbefchhedfchcdcafgagbgbbfghbdahhcgbbgcddghgbgfhhdbabbcedaggbdddaagdecheacdhbcbbdbgeccbdcehb...(truncated) ... 22755\\n3688 6364\\n15815 17301\\n4673 20066\\n1270 16757\\n4167 9858\\n4130 23688\\n1111 17939\\n17539 23776\\n410 3002\\n3246 18172\\n10981 14313\\n8643 10578\\n21632 23695\\n\", \"expected\": \"1094\\n814\\n600\\n780\\n14\\n857\\n1429\\n1270\\n1823\\n1340\\n446\\n1095\\n411\\n266\\n321\\n2698\\n1099\\n450\\n2312\\n1738\\n633\\n217\\n1606\\n140\\n1001\\n2229\\n408\\n2220\\n773\\n135\\n582\\n1814\\n1165\\n109...(truncated) ...267\\n801\\n549\\n290\\n530\\n748\\n742\\n1118\\n214\\n859\\n1501\\n1598\\n1573\\n2208\\n6\\n403\\n604\\n23\\n1247\\n724\\n1018\\n1737\\n351\\n199\\n1960\\n1959\\n719\\n2464\\n2112\\n770\\n314\\n1890\\n400\\n239\\n244\\n\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA...(truncated) ...CBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBC\\n\", \"expected\": \"\\n\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6 328\\n1 2 99\\n1 3 102\\n2 3 86\\n2 4 94\\n2 5 95\\n3 4 81\\n\", \"expected\": \"33\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6 328\\n1 2 99\\n1 3 102\\n2 3 86\\n2 4 94\\n2 5 95\\n3 4 81\\n\", \"expected\": \"33\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6 328\\n1 2 99\\n1 3 102\\n2 3 86\\n2 4 94\\n2 5 95\\n3 4 81\\n\", \"expected\": \"33\\n\"}",
            "{\"output\": \"678763683900595\\n\", \"inputs\": \"8 28 936294041850197\\n1 2 473294720906780\\n1 3 743030800139244\\n1 4 709363019414774\\n1 5 383643612490312\\n1 6 557102781022861\\n1 7 623179288538138\\n1 8 73961...(truncated) ...3818615687\\n4 8 549007536393172\\n5 6 779230871080408\\n5 7 825982583786498\\n5 8 713928998174272\\n6 7 751331074538826\\n6 8 449873635430228\\n7 8 11298381761479\\n\", \"expected\": \"11360716373\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 678763683900595 != 11360716373\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6 328\\n1 2 99\\n1 3 102\\n2 3 86\\n2 4 94\\n2 5 95\\n3 4 81\\n\", \"expected\": \"33\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6 328\\n1 2 99\\n1 3 102\\n2 3 86\\n2 4 94\\n2 5 95\\n3 4 81\\n\", \"expected\": \"33\\n\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5 6 328\\n1 2 99\\n1 3 102\\n2 3 86\\n2 4 94\\n2 5 95\\n3 4 81\\n\", \"expected\": \"33\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 33\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 6 328\\n1 2 99\\n1 3 102\\n2 3 86\\n2 4 94\\n2 5 95\\n3 4 81\\n\", \"expected\": \"33\\n\"}",
            "{\"output\": \"678763683900595\\n\", \"inputs\": \"8 28 936294041850197\\n1 2 473294720906780\\n1 3 743030800139244\\n1 4 709363019414774\\n1 5 383643612490312\\n1 6 557102781022861\\n1 7 623179288538138\\n1 8 73961...(truncated) ...3818615687\\n4 8 549007536393172\\n5 6 779230871080408\\n5 7 825982583786498\\n5 8 713928998174272\\n6 7 751331074538826\\n6 8 449873635430228\\n7 8 11298381761479\\n\", \"expected\": \"11360716373\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 678763683900595 != 11360716373\"}",
            "{\"output\": \"678763683900595\\n\", \"inputs\": \"8 28 936294041850197\\n1 2 473294720906780\\n1 3 743030800139244\\n1 4 709363019414774\\n1 5 383643612490312\\n1 6 557102781022861\\n1 7 623179288538138\\n1 8 73961...(truncated) ...3818615687\\n4 8 549007536393172\\n5 6 779230871080408\\n5 7 825982583786498\\n5 8 713928998174272\\n6 7 751331074538826\\n6 8 449873635430228\\n7 8 11298381761479\\n\", \"expected\": \"11360716373\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 678763683900595 != 11360716373\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.011891603469848633}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.010070562362670898}",
            "{\"execution time\": 0.010920047760009766}",
            "{\"execution time\": 0.010850906372070312}",
            "{\"execution time\": 0.010601043701171875}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"execution time\": 0.018563508987426758}",
            "{\"execution time\": 0.01941657066345215}",
            "{\"execution time\": 0.021636486053466797}",
            "{\"execution time\": 0.019618749618530273}",
            "{\"execution time\": 0.022483348846435547}",
            "{\"execution time\": 0.01907825469970703}",
            "{\"execution time\": 0.019713401794433594}",
            "{\"execution time\": 0.02280902862548828}",
            "{\"execution time\": 0.019983530044555664}",
            "{\"output\": \"70\\n\", \"inputs\": \"9\\n70 27 85 85 33 87 94 92 14\\n\", \"expected\": \"92\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 70 != 92\"}"
        ],
        [
            "{\"output\": \"3\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"21\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 21 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 4\"}",
            "{\"output\": \"10\\n\", \"inputs\": \"6\\naaabaa\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10 != 4\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}",
            "{\"output\": \"0\\n1\\n2\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}",
            "{\"output\": \"0\\n1\\n1\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 1\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n3\\n3\\n3\\n\", \"inputs\": \"3 7\\n1 2 2 3 1 3 3\\n\", \"expected\": \"1\\n1\\n2\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 1\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\nABCBABC\\nABC\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\nABCBABC\\nABC\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"7 3\\nABCBABC\\nABC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\nABCBABC\\nABC\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\nABCBABC\\nABC\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\nABCBABC\\nABC\\n\", \"expected\": \"Yes\\n\"}",
            "{\"error\": \"EOFError('EOF when reading a line')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7 3\\nABCBABC\\nABC\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"7 3\\nABCBABC\\nABC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"7 3\\nABBCABC\\nABC\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}"
        ],
        [
            "{\"output\": \"5\\n0\\n3\\n1\\n1\\n\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\"}",
            "{\"output\": \"5\\n0\\n3\\n1\\n1\\n\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"output\": \"5\\n0\\n0\\n1\\n1\\n\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"output\": \"5\\n0\\n0\\n1\\n1\\n\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"output\": \"5\\n0\\n3\\n1\\n1\\n\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"output\": \"5\\n0\\n0\\n1\\n1\\n\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"output\": \"5\\n0\\n3\\n1\\n1\\n\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}",
            "{\"error\": \"NameError(\\\"name 'C' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\"}",
            "{\"output\": \"5\\n0\\n3\\n1\\n1\\n\", \"inputs\": \"6 5\\n1 1 1 2 2 3\\n1 2\\n6 4\\n5 1\\n3 6\\n4 6\\n\", \"expected\": \"1\\n2\\n1\\n1\\n3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 1\"}"
        ],
        [
            "{\"execution time\": 0.02320265769958496}",
            "{\"execution time\": 0.016770601272583008}",
            "{\"execution time\": 0.021147489547729492}",
            "{\"execution time\": 0.02522897720336914}",
            "{\"execution time\": 0.02453160285949707}",
            "{\"execution time\": 0.022671937942504883}",
            "{\"execution time\": 0.02515721321105957}",
            "{\"execution time\": 0.025708913803100586}",
            "{\"execution time\": 0.024273157119750977}",
            "{\"execution time\": 0.018962383270263672}"
        ],
        [
            "{\"output\": \"1 3 0 2 0\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 3 0 2 0 != 4 4 4 7 7\"}",
            "{\"output\": \"1 3 0 2 0\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 3 0 2 0 != 4 4 4 7 7\"}",
            "{\"output\": \"5 7 7 7 7\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 7 7 7 7 != 4 4 4 7 7\"}",
            "{\"output\": \"5 7 7 7 7\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 7 7 7 7 != 4 4 4 7 7\"}",
            "{\"output\": \"4 4 4 4 4 \", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 4 4 4 4 != 4 4 4 7 7\"}",
            "{\"output\": \"3 1 4 9 7\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 4 9 7 != 4 4 4 7 7\"}",
            "{\"output\": \"5 7 7 7 7\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 7 7 7 7 != 4 4 4 7 7\"}",
            "{\"output\": \"3 1 4 9 7\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 4 9 7 != 4 4 4 7 7\"}",
            "{\"output\": \"5 7 7 7 7\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 7 7 7 7 != 4 4 4 7 7\"}",
            "{\"output\": \"1 3 0 -2 0\\n\", \"inputs\": \"5 4 7\\n3 1 4 9 7\\n\", \"expected\": \"4 4 4 7 7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 3 0 -2 0 != 4 4 4 7 7\"}"
        ],
        [
            "{\"output\": \"inf\\n\", \"inputs\": \"21\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: inf != 1\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"1116602436426\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"1116602436426\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"1116602436426\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"1116602436426\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"1116602436426\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"1116602436426\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"1116602436426\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"5\\n\", \"inputs\": \"1116602436426\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 != 3\"}",
            "{\"output\": \"20\\n\", \"inputs\": \"21\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 20 != 1\"}"
        ],
        [
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3\\nooo\\noxx\\nxxo\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}"
        ],
        [
            "{\"error\": \"TypeError('cannot unpack non-iterable int object')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"error\": \"TypeError('print() argument after * must be an iterable, not int')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not iterable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}",
            "{\"error\": \"TypeError('print() argument after * must be an iterable, not int')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\"}",
            "{\"output\": \"0\\n0\\n0\\n0\\n0\\n\", \"inputs\": \"8 5\\n2 0 2 2 1 1 2 5\\n4 3\\n4 4\\n6 3\\n8 1000000000\\n2 1\\n\", \"expected\": \"4\\n3\\n6\\n5\\n0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 4\"}"
        ],
        [
            "{\"output\": \"2023 12 31\\n\", \"inputs\": \"12 30\\n2023 12 30\\n\", \"expected\": \"2024 1 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2023 12 31 != 2024 1 1\"}",
            "{\"output\": \"2023 12 31\\n\", \"inputs\": \"12 30\\n2023 12 30\\n\", \"expected\": \"2024 1 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2023 12 31 != 2024 1 1\"}",
            "{\"output\": \"2023 12 31\\n\", \"inputs\": \"12 30\\n2023 12 30\\n\", \"expected\": \"2024 1 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2023 12 31 != 2024 1 1\"}",
            "{\"output\": \"6790 1 1\\n\", \"inputs\": \"36 72\\n6789 23 45\\n\", \"expected\": \"6789 23 46\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6790 1 1 != 6789 23 46\"}",
            "{\"output\": \"2023 12 31\\n\", \"inputs\": \"12 30\\n2023 12 30\\n\", \"expected\": \"2024 1 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2023 12 31 != 2024 1 1\"}",
            "{\"execution time\": 0.017657756805419922}",
            "{\"execution time\": 0.015038013458251953}",
            "{\"execution time\": 0.014702081680297852}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"12 30\\n2023 12 30\\n\", \"expected\": \"2024 1 1\\n\"}",
            "{\"output\": \"2023 12 1\\n\", \"inputs\": \"12 30\\n2023 12 30\\n\", \"expected\": \"2024 1 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2023 12 1 != 2024 1 1\"}"
        ],
        [
            "{\"output\": \"240\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 240 != 300\"}",
            "{\"output\": \"70\\n\", \"inputs\": \"10 100 50 10\\n\", \"expected\": \"10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 70 != 10\"}",
            "{\"output\": \"200\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 200 != 300\"}",
            "{\"output\": \"200\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 200 != 300\"}",
            "{\"output\": \"320\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 320 != 300\"}",
            "{\"output\": \"320\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 320 != 300\"}",
            "{\"output\": \"70\\n\", \"inputs\": \"10 100 50 10\\n\", \"expected\": \"10\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 70 != 10\"}",
            "{\"output\": \"320\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 320 != 300\"}",
            "{\"output\": \"320\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 320 != 300\"}",
            "{\"output\": \"1040\\n\", \"inputs\": \"16 120 150 200\\n\", \"expected\": \"300\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1040 != 300\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"25549\\n992916 427315 523160 510424 79893 81257 747153 125244 696791 189612 773858 85240 36318 405884 582065 369867 200305 218175 585847 528383 951591 4...(truncated) ...99 610255 24683 297197 554994 574248 706371 315124 67235 49677 497008 27058 704757 343470 683412 455839 5956 721296 28449 893044 573799 942055 772308\\n\", \"expected\": \"181342033 10390487792 9203525543 9374127560 12654571819 12652234991 5602486016 12532980462 6534659647 12275038606 5080816213 12643908665 12720326510 1...(truncated) ...3 9564036698 12727488923 6387479573 11210151596 6761007536 10081122644 12736427840 6095071862 12726685678 2569450086 8518914316 1429217038 5108648558\\n\"}",
            "{\"output\": \"11 7 6 2 0\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 7 6 2 0 != 10 0 10 0 8\"}",
            "{\"output\": \"11 7 6 2 0\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 7 6 2 0 != 10 0 10 0 8\"}",
            "{\"output\": \"11 7 6 2 0\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 7 6 2 0 != 10 0 10 0 8\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"25549\\n992916 427315 523160 510424 79893 81257 747153 125244 696791 189612 773858 85240 36318 405884 582065 369867 200305 218175 585847 528383 951591 4...(truncated) ...99 610255 24683 297197 554994 574248 706371 315124 67235 49677 497008 27058 704757 343470 683412 455839 5956 721296 28449 893044 573799 942055 772308\\n\", \"expected\": \"181342033 10390487792 9203525543 9374127560 12654571819 12652234991 5602486016 12532980462 6534659647 12275038606 5080816213 12643908665 12720326510 1...(truncated) ...3 9564036698 12727488923 6387479573 11210151596 6761007536 10081122644 12736427840 6095071862 12726685678 2569450086 8518914316 1429217038 5108648558\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"25549\\n992916 427315 523160 510424 79893 81257 747153 125244 696791 189612 773858 85240 36318 405884 582065 369867 200305 218175 585847 528383 951591 4...(truncated) ...99 610255 24683 297197 554994 574248 706371 315124 67235 49677 497008 27058 704757 343470 683412 455839 5956 721296 28449 893044 573799 942055 772308\\n\", \"expected\": \"181342033 10390487792 9203525543 9374127560 12654571819 12652234991 5602486016 12532980462 6534659647 12275038606 5080816213 12643908665 12720326510 1...(truncated) ...3 9564036698 12727488923 6387479573 11210151596 6761007536 10081122644 12736427840 6095071862 12726685678 2569450086 8518914316 1429217038 5108648558\\n\"}",
            "{\"output\": \"11 7 6 2 0\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 7 6 2 0 != 10 0 10 0 8\"}",
            "{\"output\": \"11 7 6 2 0\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 7 6 2 0 != 10 0 10 0 8\"}",
            "{\"output\": \"11 7 6 2 0\\n\", \"inputs\": \"5\\n1 4 1 4 2\\n\", \"expected\": \"10 0 10 0 8\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 7 6 2 0 != 10 0 10 0 8\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"25549\\n992916 427315 523160 510424 79893 81257 747153 125244 696791 189612 773858 85240 36318 405884 582065 369867 200305 218175 585847 528383 951591 4...(truncated) ...99 610255 24683 297197 554994 574248 706371 315124 67235 49677 497008 27058 704757 343470 683412 455839 5956 721296 28449 893044 573799 942055 772308\\n\", \"expected\": \"181342033 10390487792 9203525543 9374127560 12654571819 12652234991 5602486016 12532980462 6534659647 12275038606 5080816213 12643908665 12720326510 1...(truncated) ...3 9564036698 12727488923 6387479573 11210151596 6761007536 10081122644 12736427840 6095071862 12726685678 2569450086 8518914316 1429217038 5108648558\\n\"}"
        ],
        [
            "{\"error\": \"TypeError('cannot unpack non-iterable int object')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"TypeError('cannot unpack non-iterable int object')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"output\": \"None\\nNone\\n\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: None != 4\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 2\\nWWB\\nBBW\\nWBW\\n1 2 3 4\\n0 3 4 5\\n\", \"expected\": \"4\\n7\\n\"}"
        ],
        [
            "{\"output\": \"32\\n\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 32 != 31\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: '(' was never closed (<string>, line 9)\"}",
            "{\"output\": \"32\\n\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 32 != 31\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\"}",
            "{\"output\": \"32\\n\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 32 != 31\"}",
            "{\"output\": \"32\\n\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 32 != 31\"}",
            "{\"output\": \"32\\n\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 32 != 31\"}",
            "{\"output\": \"32\\n\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 32 != 31\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 3 3\\n2 1\\n10 30 20\\n1 2\\n2 1\\n2 3\\n\", \"expected\": \"31\\n\"}"
        ],
        [
            "{\"output\": \"100006\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100006 != 2100\"}",
            "{\"output\": \"100006\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100006 != 2100\"}",
            "{\"execution time\": 0.025197744369506836}",
            "{\"output\": \"100006\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100006 != 2100\"}",
            "{\"output\": \"100006\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100006 != 2100\"}",
            "{\"output\": \"100006\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100006 != 2100\"}",
            "{\"output\": \"100006\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100006 != 2100\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 3)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\"}",
            "{\"output\": \"100006\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100006 != 2100\"}",
            "{\"output\": \"100006\\n\", \"inputs\": \"2 2000 500\\n1000 1\\n100 6\\n\", \"expected\": \"2100\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 100006 != 2100\"}"
        ],
        [
            "{\"output\": \"0 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 300 != 200 500\"}",
            "{\"output\": \"0 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 300 != 200 500\"}",
            "{\"output\": \"0 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 300 != 200 500\"}",
            "{\"output\": \"0 500\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 500 != 200 500\"}",
            "{\"output\": \"0 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 300 != 200 500\"}",
            "{\"output\": \"0 500\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 500 != 200 500\"}",
            "{\"output\": \"0 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 300 != 200 500\"}",
            "{\"output\": \"0 300\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 300 != 200 500\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"0 500\\n\", \"inputs\": \"5 300 500\\n\", \"expected\": \"200 500\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 500 != 200 500\"}"
        ],
        [
            "{\"output\": \"1\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 1\\n112022\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}"
        ],
        [
            "{\"output\": \"6\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 3\"}",
            "{\"output\": \"18\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 18 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"2 2\\n1 1\\n1 1\\n1 1\\n1 1000000000\\n\", \"expected\": \"-1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != -1\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"18\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 18 != 3\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"4 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n1 3 2 5 4\\n11 13 12 15 14\\n6 8 7 10 9\\n16 18 17 20 19\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.015576839447021484}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.010450601577758789}",
            "{\"execution time\": 0.012616634368896484}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.015195608139038086}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.013573884963989258}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"IndexError('string index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 4, got 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AC\\nEC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"output\": \"1235\\n\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1235 != 113\"}",
            "{\"output\": \"1235\\n\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1235 != 113\"}",
            "{\"error\": \"NameError(\\\"name 'repusits' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\"}",
            "{\"output\": \"12345\\n\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 12345 != 113\"}",
            "{\"output\": \"1233\\n\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1233 != 113\"}",
            "{\"output\": \"1233\\n\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1233 != 113\"}",
            "{\"error\": \"TypeError(\\\"object of type 'int' has no len()\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\"}",
            "{\"error\": \"NameError(\\\"name 'repusits' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\"}",
            "{\"output\": \"1235\\n\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1235 != 113\"}",
            "{\"output\": \"29999999727\\n\", \"inputs\": \"5\\n\", \"expected\": \"113\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 29999999727 != 113\"}"
        ],
        [
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"NameError(\\\"name 'graph' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 5\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 5\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 5\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"9\\n1 2\\n2 3\\n2 4\\n2 5\\n1 6\\n6 7\\n7 8\\n7 9\\n\", \"expected\": \"5\\n\"}"
        ],
        [
            "{\"error\": \"TypeError('cannot unpack non-iterable int object')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 1)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\"}",
            "{\"output\": \"0 0 0 1 1 0 1 0 0\\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"1\\n1 1 \\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"0\\n0 0 0 1 1 0 1 0 \\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 3\"}",
            "{\"output\": \"inf\\n\\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"inf []\\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"inf\\n0 0 0 1 1 0 1 0 \\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: inf != 3\"}",
            "{\"error\": \"TypeError('cannot unpack non-iterable int object')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\"}",
            "{\"output\": \"1\\n1 1 0 0 0 0 0 0 0 0 0 0 0 \\n\", \"inputs\": \"13\\n1 2\\n1 3\\n1 1\\n1 3\\n1 2\\n2 3\\n1 3\\n1 3\\n2 3\\n1 3\\n2 2\\n2 3\\n2 1\\n\", \"expected\": \"3\\n1 1 1 0 0 1 0 1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}"
        ],
        [
            "{\"execution time\": 0.02086639404296875}",
            "{\"execution time\": 0.016134977340698242}",
            "{\"execution time\": 0.013494729995727539}",
            "{\"execution time\": 0.020168066024780273}",
            "{\"execution time\": 0.018761396408081055}",
            "{\"execution time\": 0.01820516586303711}",
            "{\"execution time\": 0.01600337028503418}",
            "{\"execution time\": 0.017426252365112305}",
            "{\"execution time\": 0.02141284942626953}",
            "{\"execution time\": 0.02158951759338379}"
        ],
        [
            "{\"output\": \"2\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"-2 2 1 1\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 0\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"-2 2 1 1\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 0\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"-177018739841739480 2436426 -80154573737296504 585335723211047198\\n\", \"expected\": \"273142010859\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 3 -1 6\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"0 1000000000 1 999999999\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 0\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"-177018739841739480 2436426 -80154573737296504 585335723211047198\\n\", \"expected\": \"273142010859\\n\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 1\\n2\\n\", \"expected\": \"0\\n\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5 1\\n2\\n\", \"expected\": \"0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 0\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4 2\\n1 3\\n\", \"expected\": \"2\\n\"}"
        ],
        [
            "{\"output\": \"2\\n1\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"3 2 4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"16\\n3\\n27\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 16 != 3\"}",
            "{\"output\": \"16\\n3\\n27\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 16 != 3\"}",
            "{\"output\": \"27\\n27\\n27\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 27 != 3\"}",
            "{\"output\": \"1\\n0\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"2\\n1\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"27\\n27\\n27\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 27 != 3\"}",
            "{\"output\": \"2\\n1\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"4\\n2\\n4\\n\", \"inputs\": \"4 3\\n5 3 11 8\\n16\\n7\\n1000\\n\", \"expected\": \"3\\n1\\n4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 3\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '##.'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}",
            "{\"output\": \"798595482\\n\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 798595482 != 499122178\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_value' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 499122178\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '##.'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}",
            "{\"output\": \"None\\n\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: None != 499122178\"}",
            "{\"output\": \"748683264\\n\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 748683264 != 499122178\"}",
            "{\"output\": \"None\\n\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: None != 499122178\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_value' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}",
            "{\"error\": \"UnboundLocalError(\\\"cannot access local variable 'expected_value' where it is not associated with a value\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n##.\\n#.#\\n#..\\n\", \"expected\": \"499122178\\n\"}"
        ],
        [
            "{\"execution time\": 0.018747806549072266}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0 0 3\\n0 1 2\\n0 2 1\\n0 3 0\\n1 0 2\\n1 1 1\\n1 2 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"inputs\": \"3\\n\", \"expected\": \"0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 1 0\\n0 1 1\\n0 1 2\\n0 2 0\\n0 2 1\\n0 3 0\\n1 0 0\\n1 0 1\\n1 0 2\\n1 1 0\\n1 1 1\\n1 2 0\\n2 0 0\\n2 0 1\\n2 1 0\\n3 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ],
        [
            "{\"error\": \"KeyError(3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"TypeError(\\\"'int' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"output\": \"\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"TypeError(\\\"'tuple' object does not support item assignment\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}",
            "{\"error\": \"IndexError('list assignment index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5 9\\n2 3\\n1 U\\n2 3\\n1 R\\n1 D\\n2 3\\n1 L\\n2 1\\n2 5\\n\", \"expected\": \"3 0\\n2 0\\n1 1\\n1 0\\n1 0\\n\"}"
        ],
        [
            "{\"output\": \"17 18 19 20 22\\n15 0 0 0 24\\n14 0 1 2 4\\n13 0 0 0 5\\n12 10 9 8 7\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 17 18 19 20 22 != 1 2 3 4 5\"}",
            "{\"output\": \"5 6 7 8 9\\n10 1 2 3 4\\n15 16 T 18 19\\n20 11 12 13 14\\n21 22 17 24 23\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 6 7 8 9 != 1 2 3 4 5\"}",
            "{\"output\": \"5 6 7 8 9\\n10 1 2 3 4\\n15 16 T 18 19\\n20 11 12 13 14\\n21 22 17 24 23\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 6 7 8 9 != 1 2 3 4 5\"}",
            "{\"output\": \"5 6 7 8 9\\n10 1 2 3 4\\n15 16 T 18 19\\n20 11 12 13 14\\n21 22 17 24 23\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 6 7 8 9 != 1 2 3 4 5\"}",
            "{\"output\": \"5 6 7 8 9\\n10 1 2 3 4\\n15 16 T 18 19\\n20 11 12 13 14\\n21 22 17 24 23\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 6 7 8 9 != 1 2 3 4 5\"}",
            "{\"output\": \"0 0 0 0 0\\n0 0 1 0 0\\n0 3 T 4 0\\n0 0 2 0 0\\n0 0 0 0 0\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 0 0 0 0 != 1 2 3 4 5\"}",
            "{\"output\": \"5 6 7 8 9\\n10 1 2 3 4\\n15 16 T 18 19\\n20 11 12 13 14\\n21 22 17 24 23\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 6 7 8 9 != 1 2 3 4 5\"}",
            "{\"output\": \"5 6 7 8 9\\n10 1 2 3 4\\n15 16 T 18 19\\n20 11 12 13 14\\n21 22 17 24 23\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 6 7 8 9 != 1 2 3 4 5\"}",
            "{\"output\": \"0 0 0 0 0\\n0 0 1 0 0\\n0 3 T 4 0\\n0 0 2 0 0\\n0 0 0 0 0\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 0 0 0 0 != 1 2 3 4 5\"}",
            "{\"output\": \"5 6 7 8 9\\n10 1 2 3 4\\n15 16 T 18 19\\n20 11 12 13 14\\n21 22 17 24 23\\n\", \"inputs\": \"5\\n\", \"expected\": \"1 2 3 4 5\\n16 17 18 19 6\\n15 24 T 20 7\\n14 23 22 21 8\\n13 12 11 10 9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 5 6 7 8 9 != 1 2 3 4 5\"}"
        ],
        [
            "{\"execution time\": 0.016261577606201172}",
            "{\"execution time\": 0.020133495330810547}",
            "{\"execution time\": 0.016947507858276367}",
            "{\"execution time\": 0.015442371368408203}",
            "{\"execution time\": 0.012030363082885742}",
            "{\"execution time\": 0.018384695053100586}",
            "{\"execution time\": 0.016043901443481445}",
            "{\"execution time\": 0.012545108795166016}",
            "{\"execution time\": 0.018839120864868164}",
            "{\"execution time\": 0.019415855407714844}"
        ],
        [
            "{\"execution time\": 0.026394128799438477}",
            "{\"execution time\": 0.02568674087524414}",
            "{\"execution time\": 0.01688075065612793}",
            "{\"execution time\": 0.023618221282958984}",
            "{\"execution time\": 0.020006656646728516}",
            "{\"execution time\": 0.020180463790893555}",
            "{\"execution time\": 0.021654605865478516}",
            "{\"execution time\": 0.015990257263183594}",
            "{\"execution time\": 0.023044586181640625}",
            "{\"execution time\": 0.0161740779876709}"
        ],
        [
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"31415926535\\n\", \"expected\": \"2006628868244228\\n\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"31415926535\\n\", \"expected\": \"2006628868244228\\n\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"31415926535\\n\", \"expected\": \"2006628868244228\\n\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}",
            "{\"output\": \"26\\n\", \"inputs\": \"8\\n\", \"expected\": \"24\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 26 != 24\"}"
        ],
        [
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"5\\n2 2 3 1 1\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}"
        ],
        [
            "{\"execution time\": 0.01971268653869629}",
            "{\"execution time\": 0.0189211368560791}",
            "{\"execution time\": 0.019099712371826172}",
            "{\"execution time\": 0.015447616577148438}",
            "{\"execution time\": 0.016896724700927734}",
            "{\"execution time\": 0.015380382537841797}",
            "{\"output\": \"Draw\\n\", \"inputs\": \"4\\n10 2\\n10 1\\n10 2\\n3 2\\n\", \"expected\": \"Takahashi\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Draw != Takahashi\"}",
            "{\"execution time\": 0.016283750534057617}",
            "{\"execution time\": 0.024080753326416016}",
            "{\"execution time\": 0.01587653160095215}"
        ],
        [
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"AAABBBCCCCCCC\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}"
        ],
        [
            "{\"output\": \"3 1 2 4 5 6\\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 2 4 5 6 != 3 5 4 1 2 6\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 3 5 4 1 2 6\"}",
            "{\"output\": \"1 2 3 3 4 5\\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 2 3 3 4 5 != 3 5 4 1 2 6\"}",
            "{\"output\": \"1 5 4 0 3 6 \\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 5 4 0 3 6 != 3 5 4 1 2 6\"}",
            "{\"output\": \"4 1 3 5 3 2\\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 1 3 5 3 2 != 3 5 4 1 2 6\"}",
            "{\"output\": \"3 1 2 4 5 6\\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 1 2 4 5 6 != 3 5 4 1 2 6\"}",
            "{\"output\": \"1 5 4 0 3 6 \\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 5 4 0 3 6 != 3 5 4 1 2 6\"}",
            "{\"output\": \"1 5 4 0 3 6 \\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 5 4 0 3 6 != 3 5 4 1 2 6\"}",
            "{\"output\": \"3 4 1 5 3 2\\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 4 1 5 3 2 != 3 5 4 1 2 6\"}",
            "{\"output\": \"3 6 5 1 4 0 \\n\", \"inputs\": \"6\\n4 1 -1 5 3 2\\n\", \"expected\": \"3 5 4 1 2 6\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 6 5 1 4 0 != 3 5 4 1 2 6\"}"
        ],
        [
            "{\"output\": \"-1\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 2\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 2\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4 3\\nxo.x\\n..o.\\nxx.o\\n\", \"expected\": \"2\\n\"}"
        ],
        [
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}",
            "{\"error\": \"ValueError(\\\"invalid literal for int() with base 10: '3 1\\\\\\\\n'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 1\\n\", \"expected\": \"2\\n1 2 \\n1 3 \\n2\\n\"}"
        ],
        [
            "{\"execution time\": 0.019928932189941406}",
            "{\"execution time\": 0.027712106704711914}",
            "{\"execution time\": 0.022644758224487305}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.020506620407104492}",
            "{\"execution time\": 0.019462108612060547}",
            "{\"execution time\": 0.025311946868896484}",
            "{\"execution time\": 0.018857240676879883}",
            "{\"execution time\": 0.02033686637878418}",
            "{\"execution time\": 0.020392179489135742}"
        ],
        [
            "{\"execution time\": 0.014258384704589844}",
            "{\"execution time\": 0.013621330261230469}",
            "{\"execution time\": 0.014428138732910156}",
            "{\"execution time\": 0.012664318084716797}",
            "{\"execution time\": 0.016318082809448242}",
            "{\"execution time\": 0.01828289031982422}",
            "{\"output\": \"c\\n\", \"inputs\": \"frequency\\n\", \"expected\": \"e\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: c != e\"}",
            "{\"execution time\": 0.018250465393066406}",
            "{\"output\": \"c\\n\", \"inputs\": \"frequency\\n\", \"expected\": \"e\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: c != e\"}",
            "{\"execution time\": 0.014410257339477539}"
        ],
        [
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"output\": \"45\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 45 != 5\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}",
            "{\"output\": \"11\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 11 != 5\"}",
            "{\"output\": \"4\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 4 != 5\"}",
            "{\"output\": \"45\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 45 != 5\"}",
            "{\"output\": \"7\\n\", \"inputs\": \"2\\n800 300\\n100 100\\n200 10\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 7 != 5\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n1 3 2\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n1 3 2\\n\", \"expected\": \"2\\n\"}",
            "{\"output\": \"inf\\n\", \"inputs\": \"3 3\\n1 3 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: inf != 2\"}",
            "{\"output\": \"3\\n\", \"inputs\": \"3 3\\n1 3 2\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n1 3 2\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"NameError(\\\"name 'k' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n1 3 2\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n1 3 2\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n1 3 2\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"NameError(\\\"name 'k' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n1 3 2\\n\", \"expected\": \"2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 3\\n1 3 2\\n\", \"expected\": \"2\\n\"}"
        ],
        [
            "{\"output\": \"Yes\\n\", \"inputs\": \"3\\n6 1\\n4 3\\n2 5\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\n1 3\\n4 2\\n5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: keyword argument repeated: key (<string>, line 46)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: keyword argument repeated: key (<string>, line 46)\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3\\n1 3\\n4 2\\n5 6\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: keyword argument repeated: key (<string>, line 46)\"}",
            "{\"error\": \"TypeError(\\\"'RegexFlag' object is not subscriptable\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n1 3\\n4 2\\n5 6\\n\", \"expected\": \"Yes\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"2\\n4 2\\n3 1\\n\", \"expected\": \"Yes\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != Yes\"}",
            "{\"output\": \"Yes\\n\", \"inputs\": \"3\\n6 1\\n4 3\\n2 5\\n\", \"expected\": \"No\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: Yes != No\"}"
        ],
        [
            "{\"error\": \"ValueError('not enough values to unpack (expected 3, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"error\": \"KeyError(-3)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != -2\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != -2\"}",
            "{\"output\": \"No\\n\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: No != -2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"error\": \"KeyError(5)\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"3 4\\n1 2 5\\n2 1 -3\\n2 3 -4\\n3 1 100\\n\", \"expected\": \"-2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != -2\"}"
        ],
        [
            "{\"output\": \"atcoder.jp\\n\", \"inputs\": \"atcoder.jp\\n\", \"expected\": \"jp\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: atcoder.jp != jp\"}",
            "{\"output\": \"atcoder.jp\\n\", \"inputs\": \"atcoder.jp\\n\", \"expected\": \"jp\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: atcoder.jp != jp\"}",
            "{\"execution time\": 0.017709970474243164}",
            "{\"execution time\": 0.016568899154663086}",
            "{\"execution time\": 0.020388364791870117}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"atcoder.jp\\n\", \"inputs\": \"atcoder.jp\\n\", \"expected\": \"jp\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: atcoder.jp != jp\"}",
            "{\"execution time\": 0.023952007293701172}",
            "{\"execution time\": 0.025762319564819336}",
            "{\"execution time\": 0.01808643341064453}"
        ],
        [
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}",
            "{\"output\": \"...#\\n#..#\\n....\\n\", \"inputs\": \"3 4 5\\n\", \"expected\": \".#..\\n##..\\n....\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: ...# != .#..\"}"
        ],
        [
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"4\\n3 -5 7 -4\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}"
        ],
        [
            "{\"output\": \"2\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}",
            "{\"output\": \"-1\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -1 != 3\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"5\\n....#\\n#..#.\\n.P...\\n..P..\\n....#\\n\", \"expected\": \"3\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 3\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.019081830978393555}",
            "{\"execution time\": 0.013470888137817383}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.020797252655029297}",
            "{\"execution time\": 0.015485286712646484}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.014466047286987305}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.024159908294677734}",
            "{\"execution time\": 0.018064022064208984}",
            "{\"execution time\": 0.020788908004760742}",
            "{\"execution time\": 0.01820969581604004}",
            "{\"execution time\": 0.022394657135009766}",
            "{\"execution time\": 0.014286994934082031}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"execution time\": 0.019653797149658203}"
        ],
        [
            "{\"output\": \"682\\n\", \"inputs\": \"340\\n\", \"expected\": \"2888\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 682 != 2888\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"output\": \"682\\n\", \"inputs\": \"340\\n\", \"expected\": \"2888\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 682 != 2888\"}",
            "{\"output\": \"682\\n\", \"inputs\": \"340\\n\", \"expected\": \"2888\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 682 != 2888\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"output\": \"682\\n\", \"inputs\": \"340\\n\", \"expected\": \"2888\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 682 != 2888\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"3\\n\", \"expected\": \"5\\n\"}",
            "{\"output\": \"682\\n\", \"inputs\": \"340\\n\", \"expected\": \"2888\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 682 != 2888\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"5\\n100 200 3\\n50 10 1\\n100 200 5\\n150 1 2\\n\", \"expected\": \"350\\n\"}"
        ],
        [
            "{\"output\": \"0 0 0 0 0 \\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 0 0 0 0 != 0 4 2 7 2\"}",
            "{\"output\": \"8 0 0 0 0\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 0 0 0 0 != 0 4 2 7 2\"}",
            "{\"output\": \"8 0 0 0 0\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 0 0 0 0 != 0 4 2 7 2\"}",
            "{\"output\": \"0 0 0 0 0 \\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 0 0 0 0 != 0 4 2 7 2\"}",
            "{\"output\": \"0 0 0 0 0 \\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 0 0 0 0 != 0 4 2 7 2\"}",
            "{\"output\": \"2 1 2 0 1\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 2 0 1 != 0 4 2 7 2\"}",
            "{\"output\": \"8 0 0 0 0\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 0 0 0 0 != 0 4 2 7 2\"}",
            "{\"output\": \"2 1 2 0 1\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 2 0 1 != 0 4 2 7 2\"}",
            "{\"output\": \"0 0 0 0 0 \\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 0 0 0 0 != 0 4 2 7 2\"}",
            "{\"output\": \"2 1 2 0 1\\n\", \"inputs\": \"5 3\\n1 2 3 4 5\\n2 4 0\\n\", \"expected\": \"0 4 2 7 2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 1 2 0 1 != 0 4 2 7 2\"}"
        ],
        [
            "{\"output\": \"10000\\n\", \"inputs\": \"4\\n\", \"expected\": \"101010101\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10000 != 101010101\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"10000\\n\", \"inputs\": \"4\\n\", \"expected\": \"101010101\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10000 != 101010101\"}",
            "{\"output\": \"10000\\n\", \"inputs\": \"4\\n\", \"expected\": \"101010101\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10000 != 101010101\"}",
            "{\"output\": \"10101010\\n\", \"inputs\": \"4\\n\", \"expected\": \"101010101\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 10101010 != 101010101\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"4\\n5 7 0 3\\n2 2\\n4 3\\n5 2\\n\", \"expected\": \"5\\n\"}"
        ],
        [
            "{\"output\": \"1\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"6 7 5\\nLULDR\\n#######\\n#...#.#\\n##...##\\n#.#...#\\n#...#.#\\n#######\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}"
        ],
        [
            "{\"output\": \"8\\n\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 9\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 9\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 9\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 9\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 9\"}",
            "{\"output\": \"6\\n\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 6 != 9\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 9\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"2 3 5\\n\", \"expected\": \"9\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 9\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"100000000 99999999 10000000000\\n\", \"expected\": \"500000002500000000\\n\"}"
        ],
        [
            "{\"output\": \"Yes\\nNo\\nNo\\nNo\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=2: No != Yes\"}",
            "{\"output\": \"Yes\\nNo\\nYes\\nYes\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=3: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nNo\\nNo\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nNo\\nNo\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nNo\\nNo\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nNo\\nNo\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nNo\\nNo\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nNo\\nNo\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nNo\\nNo\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}",
            "{\"output\": \"Yes\\nYes\\nNo\\nNo\\n\", \"inputs\": \"5 6\\n10100\\n2 1 3\\n2 1 5\\n1 1 4\\n2 1 5\\n1 3 3\\n2 2 4\\n\", \"expected\": \"Yes\\nNo\\nYes\\nNo\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: Yes != No\"}"
        ],
        [
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\"}",
            "{\"output\": \"None\\n\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: None != 5\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 5\\n5 6\\n9 2 3 1 4 4\\n1 0 0 0 0 1\\n\", \"expected\": \"5\\n\"}"
        ],
        [
            "{\"output\": \"2\\n\", \"inputs\": \"egg\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"yay\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"egg\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected '(' (<string>, line 1)\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"egg\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"yay\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"2\\n\", \"inputs\": \"egg\\n\", \"expected\": \"1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 2 != 1\"}"
        ],
        [
            "{\"output\": \"1\\n1\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"1\\n2\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"1\\n1\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"1\\n1\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0\\n0\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\"}",
            "{\"output\": \"0\\n0\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"1\\n1\\n2\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\"}",
            "{\"output\": \"0\\n0\\n\", \"inputs\": \"3\\n2 1 3\\n3\\n2 3\\n1 2\\n1 3\\n\", \"expected\": \"2\\n2\\n1\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"ValueError('not enough values to unpack (expected 2, got 0)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"7\\natcoder\\n4\\nr a\\nt e\\nd v\\na r\\n\", \"expected\": \"recover\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"200000\\nrggcmusngxmaqpttukupaunpiyxrtwbvmtruqiyfseonwhgpcesxvgoudrayybonzypnsnrjxtfwssxhmulrhhzkuweutgmqvfofsndwybecmmcerbquacrxwvpxdgegqljgrbzwkrelrjm...(truncated) ...j\\nj j\\nj c\\nc w\\nw y\\ny x\\nx u\\nu n\\nn e\\ne g\\ng s\\ns l\\nl z\\nz p\\np n\\nn q\\nq v\\nv r\\nr d\\nd q\\nq y\\ny m\\nm v\\nv u\\nu e\\ne a\\na o\\no p\\np s\\ns q\\nq j\\nj v\\nv b\\nb i\\ni t\\nt b\\nb h\\nh t\\n\", \"expected\": \"tttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt...(truncated) ...ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttt\\n\"}"
        ],
        [
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}",
            "{\"error\": \"TimeoutException()\", \"error_code\": -3, \"error_message\": \"Time Limit Exceeded\", \"inputs\": \"11331\\n29802 148575 66678 180605 142429 164510 109626 113014 151382 65032 130860 165250 3809 145644 44362 90097 195044 68492 25739 146146 56559 161560 ...(truncated) ...694 183954 59306 62712 73968 112697 179404 122187 184641 160632 8007 152123 102619 20369 185716 161624 89168 148789 87484 174429 164944 126481 178250\\n\", \"expected\": \"2478\\n\"}"
        ],
        [
            "{\"output\": \"None\\nNone\\nNone\\nNone\\nNone\\n\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: None != 55\"}",
            "{\"output\": \"None\\nNone\\nNone\\nNone\\nNone\\n\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: None != 55\"}",
            "{\"output\": \"Unreachable\\nUnreachable\\nUnreachable\\n22\\n10\\nUnreachable\\nUnreachable\\nUnreachable\\nUnreachable\\nUnreachable\\nUnreachable\\nUnreachable\\nUnreachable\\nUnreachable\\nUnreachable\\nUnreachable\\n\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"0\\n-inf\\n-inf\\n-inf\\n-inf\\n-inf\\n\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"output\": \"-inf\\n-inf\\n-inf\\n-inf\\n-inf\\n\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: -inf != 55\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 4)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\"}",
            "{\"output\": \"None\\nNone\\nNone\\nNone\\nNone\\n\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: None != 55\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 4)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\"}",
            "{\"error\": \"TypeError(\\\"wrapped_function.<locals>.f() missing 1 required positional argument: 'trains'\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"6 7\\n10 5 10 3 1 3\\n13 5 10 2 3 4\\n15 5 10 7 4 6\\n3 10 2 4 2 5\\n7 10 2 3 5 6\\n5 3 18 2 2 3\\n6 3 20 4 2 1\\n\", \"expected\": \"55\\n56\\n58\\n60\\n17\\n\"}"
        ],
        [
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"0\\n\", \"inputs\": \"2 5\\n\", \"expected\": \"2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 0 != 2\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"output\": \"1\\n\", \"inputs\": \"7 1\\n\", \"expected\": \"4\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 4\"}"
        ],
        [
            "{\"execution time\": 0.041344642639160156}",
            "{\"execution time\": 0.04101872444152832}",
            "{\"execution time\": 0.04552936553955078}",
            "{\"execution time\": 0.04013848304748535}",
            "{\"execution time\": 0.04409146308898926}",
            "{\"execution time\": 0.04989933967590332}",
            "{\"execution time\": 0.037995100021362305}",
            "{\"execution time\": 0.04246973991394043}",
            "{\"execution time\": 0.03917193412780762}",
            "{\"execution time\": 0.042886972427368164}"
        ],
        [
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}",
            "{\"output\": \"8\\n\", \"inputs\": \"343\\n\", \"expected\": \"343\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 8 != 343\"}"
        ],
        [
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"output\": \"1\\n1\\n2\\n2\\n\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"2\\n2\\n2\\n2\\n\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=1: 2 != 3\"}",
            "{\"output\": \"1\\n1\\n1\\n1\\n\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 1 != 2\"}",
            "{\"output\": \"3\\n3\\n3\\n3\\n\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer at output_line_idx=0: 3 != 2\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"error\": \"ValueError('too many values to unpack (expected 2)')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}",
            "{\"error\": \"IndexError('list index out of range')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"3 4\\n1 10\\n3 20\\n2 10\\n2 10\\n\", \"expected\": \"2\\n3\\n2\\n2\\n\"}"
        ],
        [
            "{\"error\": \"NameError(\\\"name 'x' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"error\": \"NameError(\\\"name 'x' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"error\": \"NameError(\\\"name 'x' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"error_code\": -4, \"error_message\": \"Error during testing: expected an indented block after function definition on line 38 (<string>, line 38)\"}",
            "{\"error\": \"NameError(\\\"name 'x' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"error\": \"NameError(\\\"name 'x' is not defined\\\")\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"error\": \"TypeError('print() argument after * must be an iterable, not NoneType')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"output\": \"None\\n\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}",
            "{\"error\": \"RecursionError('maximum recursion depth exceeded')\", \"error_code\": -4, \"error_message\": \"Runtime Error\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\"}",
            "{\"output\": \"None\\n\", \"inputs\": \"840 84 7\\n\", \"expected\": \"Yes\\n0 0 0 0 6 0 6 0 0\\n\", \"error_code\": -2, \"error_message\": \"Wrong answer: mismatched output length\"}"
        ]
    ]
]